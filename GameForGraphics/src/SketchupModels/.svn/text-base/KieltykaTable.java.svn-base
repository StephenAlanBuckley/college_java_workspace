//Header


package SketchupModels;
import javax.media.opengl.GL2;
import javax.media.opengl.glu.GLU;
import Buildings.Building;
import java.nio.DoubleBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;
import com.jogamp.opengl.util.GLBuffers;
import java.util.HashMap;
import java.util.Map;
public class KieltykaTable
{
private int displayList = -1;
private Map<String, com.jogamp.opengl.util.texture.Texture> imageMap = new HashMap<String, com.jogamp.opengl.util.texture.Texture>(); // map of ID's to textures
public KieltykaTable(GL2 gl, GLU glu) {
    generate(gl, glu);
}
public void draw(GL2 gl, GLU glu) {
  gl.glCallList(displayList);
}
private com.jogamp.opengl.util.texture.Texture ID5;
private void generate(GL2 gl, GLU glu){
ID5 = Building.setupTexture(gl, "kieltykaTable/texture0.jpg", "SketchupModels");

displayList = gl.glGenLists(1);
gl.glNewList(displayList, GL2.GL_COMPILE);
  gl.glPushAttrib(GL2.GL_POLYGON_BIT);
    gl.glFrontFace(GL2.GL_CCW);
    gl.glCullFace(GL2.GL_BACK);
    gl.glEnable(GL2.GL_CULL_FACE);
gl.glPushMatrix();
gl.glScaled(0.08333333333333333, 0.08333333333333333, 0.08333333333333333);
gl.glRotatef(-90,1,0,0);
ID2(gl);
ID15(gl);
       gl.glPopMatrix();
   gl.glPopAttrib();
gl.glEndList();
}
//Trailer


private void ID2(GL2 gl){
float[] positionsArray = {
114.5f,0.0f,0.0f,0.0f,-58.3125f,0.0f,0.0f,0.0f,0.0f,114.5f,-58.3125f,0.0f,114.5f,-58.3125f,0.0f,114.5f,0.0f,0.0f,0.0f,-58.3125f,0.0f,0.0f,0.0f,0.0f,114.5f,0.0f,0.0f,114.5f,-58.3125f,7.75f,114.5f,-58.3125f,0.0f,114.5f,-49.0625f,7.75f,114.5f,-9.25f,7.75f,114.5f,0.0f,7.75f,114.5f,0.0f,7.75f,114.5f,0.0f,0.0f,114.5f,-9.25f,7.75f,114.5f,-49.0625f,7.75f,114.5f,-58.3125f,7.75f,114.5f,-58.3125f,0.0f,114.5f,-58.3125f,7.75f,0.0f,-58.3125f,0.0f,114.5f,-58.3125f,0.0f,0.0f,-58.3125f,7.75f,105.25f,-58.3125f,7.75f,9.25f,-58.3125f,7.75f,9.25f,-58.3125f,7.75f,105.25f,-58.3125f,7.75f,0.0f,-58.3125f,7.75f,114.5f,-58.3125f,7.75f,0.0f,-58.3125f,0.0f,114.5f,-58.3125f,0.0f,0.0f,-49.0625f,7.75f,0.0f,-58.3125f,0.0f,0.0f,-58.3125f,7.75f,0.0f,0.0f,0.0f,0.0f,-9.25f,7.75f,0.0f,0.0f,7.75f,0.0f,0.0f,7.75f,0.0f,-9.25f,7.75f,0.0f,0.0f,0.0f,0.0f,-49.0625f,7.75f,0.0f,-58.3125f,0.0f,0.0f,-58.3125f,7.75f,0.0f,0.0f,7.75f,114.5f,0.0f,0.0f,0.0f,0.0f,0.0f,114.5f,0.0f,7.75f,9.25f,0.0f,7.75f,105.25f,0.0f,7.75f,105.25f,0.0f,7.75f,9.25f,0.0f,7.75f,114.5f,0.0f,7.75f,0.0f,0.0f,7.75f,114.5f,0.0f,0.0f,0.0f,0.0f,0.0f,114.5f,-9.25f,44.75f,114.5f,0.0f,44.75f,114.5f,0.0f,44.75f,114.5f,-9.25f,44.75f,114.5f,-49.0625f,7.75f,105.25f,-9.25f,7.75f,105.25f,-49.0625f,7.75f,114.5f,-9.25f,7.75f,105.25f,-58.3125f,7.75f,9.25f,-49.0625f,7.75f,9.25f,-58.3125f,7.75f,9.25f,-9.25f,7.75f,9.25f,0.0f,7.75f,105.25f,0.0f,7.75f,0.0f,-9.25f,7.75f,0.0f,-49.0625f,7.75f,9.25f,-9.25f,7.75f,9.25f,-49.0625f,7.75f,0.0f,-9.25f,7.75f,0.0f,-49.0625f,7.75f,105.25f,-9.25f,7.75f,105.25f,-49.0625f,7.75f,105.25f,0.0f,7.75f,105.25f,-58.3125f,7.75f,9.25f,0.0f,7.75f,9.25f,-58.3125f,7.75f,114.5f,-9.25f,7.75f,114.5f,-49.0625f,7.75f,114.5f,-58.3125f,44.75f,114.5f,-49.0625f,44.75f,114.5f,-49.0625f,44.75f,114.5f,-58.3125f,44.75f,114.5f,-58.3125f,7.75f,114.5f,-58.3125f,7.75f,114.5f,-58.3125f,44.75f,105.25f,-58.3125f,44.75f,105.25f,-58.3125f,44.75f,114.5f,-58.3125f,44.75f,9.25f,-58.3125f,44.75f,0.0f,-58.3125f,44.75f,0.0f,-58.3125f,44.75f,9.25f,-58.3125f,44.75f,0.0f,-58.3125f,7.75f,0.0f,-58.3125f,7.75f,0.0f,-49.0625f,44.75f,0.0f,-58.3125f,44.75f,0.0f,-49.0625f,44.75f,0.0f,-58.3125f,44.75f,0.0f,0.0f,7.75f,0.0f,0.0f,7.75f,0.0f,0.0f,44.75f,0.0f,-9.25f,44.75f,0.0f,0.0f,44.75f,0.0f,-9.25f,44.75f,0.0f,0.0f,44.75f,9.25f,0.0f,44.75f,9.25f,0.0f,44.75f,0.0f,0.0f,44.75f,105.25f,0.0f,44.75f,114.5f,0.0f,44.75f,114.5f,0.0f,44.75f,105.25f,0.0f,44.75f,114.5f,-9.25f,44.75f,105.25f,-9.25f,7.75f,114.5f,-9.25f,7.75f,105.25f,-9.25f,44.75f,105.25f,-9.25f,44.75f,114.5f,-9.25f,44.75f,105.25f,-9.25f,7.75f,114.5f,-9.25f,7.75f,114.5f,-9.25f,44.75f,105.25f,0.0f,44.75f,105.25f,-9.25f,44.75f,114.5f,0.0f,44.75f,114.5f,0.0f,44.75f,114.5f,-9.25f,44.75f,105.25f,0.0f,44.75f,105.25f,-9.25f,44.75f,0.0f,-49.0625f,44.75f,9.25f,-49.0625f,7.75f,0.0f,-49.0625f,7.75f,9.25f,-49.0625f,44.75f,9.25f,-49.0625f,44.75f,0.0f,-49.0625f,44.75f,9.25f,-49.0625f,7.75f,0.0f,-49.0625f,7.75f,9.25f,-49.0625f,7.75f,9.25f,-58.3125f,44.75f,9.25f,-58.3125f,7.75f,9.25f,-49.0625f,44.75f,9.25f,-49.0625f,44.75f,9.25f,-49.0625f,7.75f,9.25f,-58.3125f,44.75f,9.25f,-58.3125f,7.75f,105.25f,-49.0625f,44.75f,105.25f,-58.3125f,7.75f,105.25f,-58.3125f,44.75f,105.25f,-49.0625f,7.75f,105.25f,-49.0625f,7.75f,105.25f,-49.0625f,44.75f,105.25f,-58.3125f,7.75f,105.25f,-58.3125f,44.75f,105.25f,-49.0625f,44.75f,114.5f,-49.0625f,7.75f,105.25f,-49.0625f,7.75f,114.5f,-49.0625f,44.75f,114.5f,-49.0625f,44.75f,105.25f,-49.0625f,44.75f,114.5f,-49.0625f,7.75f,105.25f,-49.0625f,7.75f,105.25f,0.0f,44.75f,105.25f,-9.25f,7.75f,105.25f,-9.25f,44.75f,105.25f,0.0f,7.75f,105.25f,0.0f,7.75f,105.25f,0.0f,44.75f,105.25f,-9.25f,7.75f,105.25f,-9.25f,44.75f,9.25f,0.0f,7.75f,9.25f,-9.25f,44.75f,9.25f,-9.25f,7.75f,9.25f,0.0f,44.75f,9.25f,0.0f,44.75f,9.25f,0.0f,7.75f,9.25f,-9.25f,44.75f,9.25f,-9.25f,7.75f,9.25f,-9.25f,44.75f,0.0f,-9.25f,7.75f,9.25f,-9.25f,7.75f,0.0f,-9.25f,44.75f,0.0f,-9.25f,44.75f,9.25f,-9.25f,44.75f,0.0f,-9.25f,7.75f,9.25f,-9.25f,7.75f,114.5f,-58.3125f,44.75f,105.25f,-49.0625f,44.75f,105.25f,-58.3125f,44.75f,114.5f,-49.0625f,44.75f,114.5f,-49.0625f,44.75f,114.5f,-58.3125f,44.75f,105.25f,-49.0625f,44.75f,105.25f,-58.3125f,44.75f,9.25f,-58.3125f,44.75f,0.0f,-49.0625f,44.75f,0.0f,-58.3125f,44.75f,9.25f,-49.0625f,44.75f,9.25f,-49.0625f,44.75f,9.25f,-58.3125f,44.75f,0.0f,-49.0625f,44.75f,0.0f,-58.3125f,44.75f,9.25f,-9.25f,44.75f,0.0f,0.0f,44.75f,0.0f,-9.25f,44.75f,9.25f,0.0f,44.75f,9.25f,0.0f,44.75f,9.25f,-9.25f,44.75f,0.0f,0.0f,44.75f,0.0f,-9.25f,44.75f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID5.bind();
texcoordArray = new float[] {
-1.9083333f,0.0f,0.0f,-0.971875f,0.0f,0.0f,-1.9083333f,-0.971875f,-0.971875f,0.1291667f,-0.971875f,0.0f,-0.8177083f,0.1291667f,-0.1541667f,0.1291667f,0.0f,0.1291667f,1.9083333f,0.1291667f,1.9083333f,0.0f,1.7541667f,0.1291667f,0.1541667f,0.1291667f,0.8177083f,0.1291667f,0.971875f,0.0f,0.971875f,0.1291667f,-1.9083333f,0.1291667f,-1.7541667f,0.1291667f,-0.1541667f,0.7458333f,0.0f,0.7458333f,1.9083333f,-0.8177083f,1.7541667f,-0.1541667f,1.7541667f,-0.8177083f,1.9083333f,-0.1541667f,1.7541667f,-0.971875f,0.1541667f,-0.8177083f,0.1541667f,-0.971875f,0.1541667f,-0.1541667f,0.1541667f,0.0f,1.7541667f,0.0f,0.0f,-0.1541667f,0.0f,-0.8177083f,-0.1541667f,0.7458333f,-0.1541667f,0.1291667f,1.9083333f,-0.971875f,1.9083333f,0.7458333f,1.7541667f,0.7458333f,0.1541667f,0.1291667f,0.1541667f,0.7458333f,0.1541667f,0.7458333f,-1.7541667f,0.7458333f,-1.9083333f,0.7458333f,1.9083333f,-0.1541667f,1.7541667f,-0.1541667f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,4,3,5,0,6,1,7,2,6,1,5,0,8,2,9,4,10,5,9,4,8,2,11,6,11,6,8,2,12,7,12,7,8,2,13,8,14,8,15,2,16,7,16,7,15,2,17,6,17,6,15,2,18,4,19,5,18,4,15,2,20,9,21,2,22,10,21,2,20,9,23,8,23,8,20,9,24,11,23,8,24,11,25,12,26,12,27,11,28,8,27,11,29,9,28,8,28,8,29,9,30,2,31,10,30,2,29,9,32,13,33,14,34,15,33,14,32,13,35,2,35,2,32,13,36,12,35,2,36,12,37,8,38,8,39,12,40,2,39,12,41,13,40,2,40,2,41,13,42,14,43,15,42,14,41,13,44,8,45,0,46,2,45,0,44,8,47,16,47,16,44,8,48,7,47,16,48,7,49,17,50,17,51,7,52,16,51,7,53,8,52,16,52,16,53,8,54,0,55,2,54,0,53,8,13,8,56,18,12,7,56,18,13,8,57,19,58,19,14,8,59,18,16,7,59,18,14,8,60,20,61,21,62,22,61,21,60,20,63,23,64,24,65,25,66,26,65,25,64,24,67,27,67,27,64,24,68,28,68,28,64,24,69,29,69,29,64,24,62,22,69,29,62,22,61,21,65,25,70,30,71,31,70,30,65,25,67,27,72,27,73,25,74,30,75,31,74,30,73,25,76,21,77,22,78,29,77,22,79,24,78,29,78,29,79,24,80,28,80,28,79,24,72,27,72,27,79,24,73,25,81,26,73,25,79,24,82,23,83,20,76,21,77,22,76,21,83,20,11,8,84,32,9,33,84,32,11,8,85,19,86,19,17,8,87,32,18,33,87,32,17,8,88,34,62,22,64,24,62,22,88,34,60,20,83,20,89,34,77,22,79,24,77,22,89,34,90,35,24,11,20,9,24,11,90,35,91,36,92,36,93,35,27,11,29,9,27,11,93,35,94,35,23,11,25,9,23,11,94,35,95,36,96,36,97,35,28,11,26,9,28,11,97,35,66,26,71,31,98,1,71,31,66,26,65,25,73,25,81,26,75,31,99,1,75,31,81,26,100,19,34,37,101,38,34,37,100,19,32,8,41,8,102,19,43,37,103,38,43,37,102,19,67,27,104,2,70,30,104,2,67,27,68,28,80,28,72,27,105,2,74,30,105,2,72,27,106,19,36,12,107,39,36,12,106,19,37,8,38,8,108,19,39,12,109,39,39,12,108,19,110,40,48,16,44,17,48,16,110,40,111,41,112,41,113,40,51,16,53,17,51,16,113,40,114,40,47,16,49,17,47,16,114,40,115,41,116,41,117,40,52,16,50,17,52,16,117,40,118,35,119,11,120,9,119,11,118,35,121,36,122,36,123,35,124,11,125,9,124,11,123,35,126,23,127,29,128,21,127,29,126,23,129,10,130,10,131,23,132,29,133,21,132,29,131,23,134,40,135,16,136,17,135,16,134,40,137,41,138,41,139,40,140,16,141,17,140,16,139,40,142,8,143,32,144,33,143,32,142,8,145,19,146,19,147,8,148,32,149,33,148,32,147,8,150,19,151,37,152,38,151,37,150,19,153,8,154,8,155,19,156,37,157,38,156,37,155,19,158,40,159,16,160,17,159,16,158,40,161,41,162,41,163,40,164,16,165,17,164,16,163,40,166,19,167,12,168,39,167,12,166,19,169,8,170,8,171,19,172,12,173,39,172,12,171,19,174,8,175,18,176,7,175,18,174,8,177,19,178,19,179,8,180,18,181,7,180,18,179,8,182,35,183,11,184,9,183,11,182,35,185,36,186,36,187,35,188,11,189,9,188,11,187,35,190,42,191,29,192,43,191,29,190,42,193,10,194,10,195,42,196,29,197,43,196,29,195,42,198,42,199,29,200,43,199,29,198,42,201,10,202,10,203,42,204,29,205,43,204,29,203,42,206,23,207,29,208,21,207,29,206,23,209,10,210,10,211,23,212,29,213,21,212,29,211,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID15(GL2 gl){
float[] positionsArray = {
114.5f,-9.25f,7.75f,105.25f,0.0f,7.75f,105.25f,-9.25f,7.75f,114.5f,0.0f,7.75f,};
FloatBuffer fbv = GLBuffers.newDirectFloatBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_FLOAT, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
FloatBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
}
