//Header


package SketchupModels;
import javax.media.opengl.GL2;
import javax.media.opengl.glu.GLU;
import Buildings.Building;
import java.nio.DoubleBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;
import com.jogamp.opengl.util.GLBuffers;
import java.util.HashMap;
import java.util.Map;
public class LeZhangLion
{
private int displayList = -1;
private Map<String, com.jogamp.opengl.util.texture.Texture> imageMap = new HashMap<String, com.jogamp.opengl.util.texture.Texture>(); // map of ID's to textures
public LeZhangLion(GL2 gl, GLU glu) {
    generate(gl, glu);
}
public void draw(GL2 gl, GLU glu) {
  gl.glCallList(displayList);
}
private com.jogamp.opengl.util.texture.Texture ID20;
private com.jogamp.opengl.util.texture.Texture ID184;
private void generate(GL2 gl, GLU glu){
ID20 = Building.setupTexture(gl, "LeZhangLion/texture0.png", "SketchupModels");
ID184 = Building.setupTexture(gl, "LeZhangLion/texture1.jpg", "SketchupModels");

displayList = gl.glGenLists(1);
gl.glNewList(displayList, GL2.GL_COMPILE);
  gl.glPushAttrib(GL2.GL_POLYGON_BIT);
    gl.glFrontFace(GL2.GL_CCW);
    gl.glCullFace(GL2.GL_BACK);
    gl.glEnable(GL2.GL_CULL_FACE);
gl.glPushMatrix();
gl.glScaled(0.08333333333333333, 0.08333333333333333, 0.08333333333333333);
gl.glRotatef(-90,1,0,0);
{gl.glPushMatrix();
double[] darr = {1.0, 0.0, 0.0,  0.0,
        0.0, 1.0, 0.0, 0.0,
        0.0, 0.0, 1.0, 0.0,
        -27.1204154, -8.1786402, 0.0, 1.0 };
gl.glMultMatrixd(darr, 0);}
ID3(gl);
ID11(gl);
ID17(gl);
ID30(gl);
ID38(gl);
ID46(gl);
ID52(gl);
ID58(gl);
ID64(gl);
ID70(gl);
ID76(gl);
ID84(gl);
ID90(gl);
ID96(gl);
ID102(gl);
ID108(gl);
ID114(gl);
ID120(gl);
ID126(gl);
ID134(gl);
ID140(gl);
ID148(gl);
ID156(gl);
ID164(gl);
ID172(gl);
ID178(gl);
ID191(gl);
ID199(gl);
ID205(gl);
ID211(gl);
ID217(gl);
gl.glPopMatrix();
       gl.glPopMatrix();
   gl.glPopAttrib();
gl.glEndList();
}
//Trailer


private void ID3(GL2 gl){
double[] positionsArray = {
31.4638413,5.4110972,18.6084902,29.5759507,3.3300746,14.7487273,27.7551989,4.5104802,15.6806054,31.4638413,5.4110972,18.6084902,27.7551989,4.5104802,15.6806054,28.0495839,5.7847906,16.7476646,33.95391,5.919434,19.3663247,29.5759507,3.3300746,14.7487273,31.4638413,5.4110972,18.6084902,33.95391,5.919434,19.3663247,32.9845191,2.9456164,12.552409,29.5759507,3.3300746,14.7487273,39.0143093,5.7690922,19.6206682,32.9845191,2.9456164,12.552409,33.95391,5.919434,19.3663247,39.0143093,5.7690922,19.6206682,32.9845191,2.1884932,12.3534644,32.9845191,2.9456164,12.552409,39.0143093,5.7690922,19.6206682,37.1628027,2.1884932,11.4111312,32.9845191,2.1884932,12.3534644,37.722994,0.8993991,13.8950064,38.1448323,0.9285288,15.7654274,37.9342242,0.8209015,14.8315961,37.519029,1.1610905,12.9906302,38.3469543,1.2182621,16.6616314,37.3299451,1.5962042,12.1522367,38.5330429,1.679283,17.4867441,37.1628027,2.1884932,11.4111312,38.6961498,2.2943772,18.2099562,39.0143093,5.7690922,19.6206682,38.8301845,3.0405771,18.8042631,38.9301423,3.8900199,19.2474737,38.9922908,4.8109878,19.5230385,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,22,21,24,22,24,25,25,24,26,25,26,27,27,26,28,27,28,29,29,28,30,29,30,31,31,30,32,32,30,33,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 54, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID11(GL2 gl){
double[] positionsArray = {
27.9739138,5.234543,16.9360377,28.0495839,5.7847906,16.7476646,27.9079761,4.9899468,16.9524368,28.0205235,5.4537983,16.895286,28.0460648,5.6395259,16.8317037,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 9, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID17(GL2 gl){
double[] positionsArray = {
35.2785863,2.1884932,7.5315788,32.9845191,2.1884932,1.5625,37.043412,2.1884932,1.5625,32.9845191,2.1884932,9.4375,37.1628027,2.1884932,11.4111312,32.9845191,2.1884932,12.3534644,32.9845191,2.1884932,12.3534644,37.1628027,2.1884932,11.4111312,32.9845191,2.1884932,9.4375,35.2785863,2.1884932,7.5315788,32.9845191,2.1884932,1.5625,37.043412,2.1884932,1.5625,35.2785863,4.5318961,7.5315788,37.1628027,2.1884932,11.4111312,35.2785863,2.1884932,7.5315788,39.0470191,2.1884932,15.2906836,39.0470191,4.5318961,15.2906836,38.6934797,4.5318961,14.562755,39.0143093,4.5318961,15.2233349,39.0143093,4.5318961,15.2233349,38.6934797,4.5318961,14.562755,39.0470191,4.5318961,15.2906836,35.2785863,4.5318961,7.5315788,39.0470191,2.1884932,15.2906836,37.1628027,2.1884932,11.4111312,35.2785863,2.1884932,7.5315788,32.9845191,4.5318961,9.4375,37.043412,4.5318961,1.5625,32.9845191,4.5318961,1.5625,35.2785863,4.5318961,7.5315788,38.6934797,4.5318961,14.562755,32.9845191,4.5318961,14.562755,32.9845191,4.5318961,14.562755,32.9845191,4.5318961,9.4375,38.6934797,4.5318961,14.562755,35.2785863,4.5318961,7.5315788,37.043412,4.5318961,1.5625,32.9845191,4.5318961,1.5625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID20.bind();
texcoordArray = new float[] {
3.0444818f,0.4213471f,2.9807737f,0.0874126f,3.0934923f,0.0874126f,2.9807737f,0.527972f,3.096808f,0.638385f,2.9807737f,0.6911029f,0.7192575f,3.0584219f,0.6541793f,3.2997036f,0.6541793f,3.0584219f,0.6541793f,3.540985f,0.7192575f,3.540985f,0.7192575f,3.495713f,0.7192575f,3.5367966f,-2.9807737f,0.527972f,-3.0934923f,0.0874126f,-2.9807737f,0.0874126f,-3.0444818f,0.4213471f,-3.139316f,0.8146996f,-2.9807737f,0.8146996f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,3,3,0,0,4,4,3,3,4,4,5,5,6,5,7,4,8,3,7,4,9,0,8,3,8,3,9,0,10,1,11,2,10,1,9,0,12,6,13,7,14,8,13,7,12,6,15,9,15,9,12,6,16,10,16,10,12,6,17,11,16,10,17,11,18,12,19,12,20,11,21,10,20,11,22,6,21,10,21,10,22,6,23,9,23,9,22,6,24,7,25,8,24,7,22,6,26,13,27,14,28,15,27,14,26,13,29,16,29,16,26,13,30,17,30,17,26,13,31,18,32,18,33,13,34,17,34,17,33,13,35,16,35,16,33,13,36,14,37,15,36,14,33,13,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID30(GL2 gl){
double[] positionsArray = {
37.043412,4.5318961,1.5625,35.2785863,2.1884932,7.5315788,37.043412,2.1884932,1.5625,35.2785863,4.5318961,7.5315788,32.7504122,3.966712,1.5625,32.7504122,2.7536774,1.5625,32.6705627,3.3601947,1.5625,32.9845191,4.5318961,1.5625,32.9845191,2.1884932,1.5625,37.277519,3.966712,1.5625,37.043412,2.1884932,1.5625,37.043412,4.5318961,1.5625,37.277519,2.7536774,1.5625,37.3573685,3.3601947,1.5625,33.3569295,5.0172308,1.5625,33.8422641,5.3896411,1.5625,34.4074483,5.6237481,1.5625,35.0139656,5.7035976,1.5625,35.6204829,5.6237481,1.5625,36.185667,5.3896411,1.5625,36.6710017,5.0172308,1.5625,36.6710017,5.0172308,1.5625,36.185667,5.3896411,1.5625,37.043412,4.5318961,1.5625,35.6204829,5.6237481,1.5625,35.0139656,5.7035976,1.5625,34.4074483,5.6237481,1.5625,33.8422641,5.3896411,1.5625,33.3569295,5.0172308,1.5625,32.9845191,4.5318961,1.5625,37.3573685,3.3601947,1.5625,37.277519,3.966712,1.5625,37.277519,2.7536774,1.5625,37.043412,2.1884932,1.5625,32.9845191,2.1884932,1.5625,32.7504122,2.7536774,1.5625,32.7504122,3.966712,1.5625,32.6705627,3.3601947,1.5625,38.136882,2.8668147,0.0,37.043412,2.1884932,1.5625,37.855912,2.1884932,0.0,37.277519,2.7536774,1.5625,32.9845191,4.5318961,9.4375,32.9845191,2.1884932,1.5625,32.9845191,2.1884932,9.4375,32.9845191,4.5318961,1.5625,32.7504122,2.7536774,1.5625,32.9845191,2.1884932,0.0,32.9845191,2.1884932,1.5625,32.7035492,2.8668147,0.0,32.6705627,3.3601947,1.5625,32.6077156,3.5947432,0.0,32.7504122,3.966712,1.5625,32.7035492,4.3226718,0.0,32.9845191,4.5318961,1.5625,32.9845191,5.0009932,0.0,33.3569295,5.0172308,1.5625,33.4314778,5.5834811,0.0,34.0139656,6.0304397,0.0,33.8422641,5.3896411,1.5625,34.692287,6.3114096,0.0,34.4074483,5.6237481,1.5625,35.4202156,6.4072432,0.0,35.0139656,5.7035976,1.5625,36.1481441,6.3114096,0.0,35.6204829,5.6237481,1.5625,36.8264656,6.0304397,0.0,36.185667,5.3896411,1.5625,37.4089534,5.5834811,0.0,36.6710017,5.0172308,1.5625,37.855912,5.0009932,0.0,37.043412,4.5318961,1.5625,38.136882,4.3226718,0.0,37.277519,3.966712,1.5625,38.2327156,3.5947432,0.0,37.3573685,3.3601947,1.5625,36.6710017,1.7031586,1.5625,37.4089534,1.6060054,0.0,33.3569295,1.7031586,1.5625,33.4314778,1.6060054,0.0,33.3569295,1.7031586,1.5625,33.8422641,1.3307482,1.5625,34.4074483,1.0966413,1.5625,35.0139656,1.0167918,1.5625,35.6204829,1.0966413,1.5625,36.185667,1.3307482,1.5625,36.6710017,1.7031586,1.5625,36.6710017,1.7031586,1.5625,36.185667,1.3307482,1.5625,35.6204829,1.0966413,1.5625,35.0139656,1.0167918,1.5625,34.4074483,1.0966413,1.5625,33.8422641,1.3307482,1.5625,33.3569295,1.7031586,1.5625,36.8264656,1.1590468,0.0,36.185667,1.3307482,1.5625,33.8422641,1.3307482,1.5625,34.0139656,1.1590468,0.0,36.1481441,0.8780768,0.0,35.6204829,1.0966413,1.5625,35.4202156,0.7822432,0.0,35.0139656,1.0167918,1.5625,34.692287,0.8780768,0.0,34.4074483,1.0966413,1.5625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID20.bind();
texcoordArray = new float[] {
0.7192575f,-1.6830724f,0.6541793f,-1.3348482f,0.6541793f,-1.6830724f,0.7192575f,-1.3348482f,-3.0831501f,1.4760906f,-3.069672f,1.4969248f,-3.0934923f,1.448939f,-3.0539763f,1.5100216f,-3.037133f,1.5144887f,-3.0202894f,1.5100216f,-3.0045938f,1.4969248f,-2.9911158f,1.4760906f,-2.9807737f,1.448939f,-3.102211f,1.3833894f,-3.0999937f,1.4173203f,-3.0999937f,1.3494582f,-3.0934923f,1.3178395f,-2.9807737f,1.3178395f,-2.9742723f,1.3494582f,-2.9742723f,1.4173203f,-2.9720547f,1.3833894f,1.8172355f,-2.2929852f,1.7882112f,-2.1960084f,1.7968459f,-2.2929852f,1.8052f,-2.1960084f,-0.7192575f,0.527972f,-0.6541793f,0.0874126f,-0.6541793f,0.527972f,-0.7192575f,0.0874126f,0.519321f,0.0874126f,0.5363098f,-0.0f,0.5363098f,0.0874126f,0.5159202f,-0.0f,-0.2929124f,0.2114405f,-0.2792085f,0.1240099f,-0.2759236f,0.2114405f,-0.2995981f,0.1240099f,-1.0857632f,0.4289364f,-1.0750045f,0.3413693f,-1.0687743f,0.4289364f,-1.0953941f,0.3413693f,-1.8052f,0.6567587f,-1.7968459f,0.5687711f,-1.7882112f,0.6567587f,-1.8172355f,0.5687711f,-2.4021943f,0.7838853f,-2.3955405f,0.6950248f,-2.3852055f,0.7838853f,-2.41593f,0.6950248f,-2.819073f,0.7095087f,-2.8506777f,0.6192235f,-2.8302882f,0.6192235f,-2.8360617f,0.7095087f,-3.0602462f,0.3807658f,-3.0918512f,0.2885274f,-3.0714617f,0.2885274f,-3.0772352f,0.3807658f,-3.0922902f,-0.1872692f,-3.123015f,-0.2818281f,-3.1026254f,-0.2818281f,-3.109279f,-0.1872692f,-2.9130206f,-0.9172485f,-2.9420452f,-1.0142252f,-2.9216554f,-1.0142252f,-2.9300096f,-0.9172485f,-2.5346549f,-1.693824f,-2.5612745f,-1.7929949f,-2.540885f,-1.7929949f,-2.5516436f,-1.693824f,-1.9829775f,-2.392759f,-2.006652f,-2.4935927f,-1.9862624f,-2.4935927f,-1.9999663f,-2.392759f,-1.3159742f,-3.0068266f,-1.2955847f,-2.9050972f,-1.3125736f,-2.9050972f,-1.2955847f,-3.0068266f,-0.5363098f,-3.2553484f,-0.519321f,-3.153619f,-0.5363098f,-3.153619f,-0.5159202f,-3.2553484f,0.2792085f,-3.2036448f,0.2929124f,-3.102811f,0.2759236f,-3.102811f,0.2995981f,-3.2036448f,1.0750045f,-2.8632f,1.0857632f,-2.7640293f,1.0687743f,-2.7640293f,1.0953941f,-2.8632f,2.41593f,-1.5932859f,2.3852055f,-1.4987268f,2.3955405f,-1.5932859f,2.4021943f,-1.4987268f,1.3125736f,0.0874126f,1.2955847f,0.0f,1.3159742f,0.0f,1.2955847f,0.0874126f,-3.0831501f,1.2906879f,-3.069672f,1.2698538f,-3.0539763f,1.2567569f,-3.037133f,1.2522898f,-3.0202894f,1.2567569f,-3.0045938f,1.2698538f,-2.9911158f,1.2906879f,2.8360617f,-0.7972549f,2.8302882f,-0.8894932f,2.8506777f,-0.8894932f,2.819073f,-0.7972549f,1.9999663f,0.1825527f,1.9862624f,0.0951221f,2.006652f,0.0951221f,1.9829775f,0.1825527f,3.0772352f,-0.2139734f,3.0714617f,-0.3042586f,3.0918512f,-0.3042586f,3.0602462f,-0.2139734f,3.109279f,0.1656298f,3.1026254f,0.0767693f,3.123015f,0.0767693f,3.0922902f,0.1656298f,2.9300096f,0.319705f,2.9216554f,0.2317174f,2.9420452f,0.2317174f,2.9130206f,0.319705f,2.5516436f,0.2944164f,2.540885f,0.2068494f,2.5612745f,0.2068494f,2.5346549f,0.2944164f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,21,4,22,5,23,6,22,5,24,7,23,6,24,7,25,8,23,6,25,8,26,9,23,6,26,9,27,10,23,6,27,10,28,11,23,6,29,12,23,6,28,11,30,13,31,14,32,15,32,15,31,14,33,16,23,6,33,16,31,14,34,17,29,12,35,18,29,12,36,19,35,18,37,20,35,18,36,19,38,21,39,22,40,23,39,22,38,21,41,24,42,25,43,26,44,27,43,26,42,25,45,28,46,29,47,30,48,31,47,30,46,29,49,32,50,33,49,34,46,35,49,34,50,33,51,36,52,37,51,38,50,39,51,38,52,37,53,40,54,41,53,42,52,43,53,42,54,41,55,44,56,45,55,46,54,47,55,46,56,45,57,48,56,49,58,50,57,51,58,50,56,49,59,52,59,53,60,54,58,55,60,54,59,53,61,56,61,57,62,58,60,59,62,58,61,57,63,60,63,61,64,62,62,63,64,62,63,61,65,64,65,65,66,66,64,67,66,66,65,65,67,68,67,69,68,70,66,71,68,70,67,69,69,72,70,73,69,74,71,75,69,74,70,73,68,76,72,77,71,78,73,79,71,78,72,77,70,80,74,81,73,82,75,83,73,82,74,81,72,84,38,85,75,86,41,87,75,86,38,85,74,88,40,89,76,90,77,91,76,90,40,89,39,92,78,93,47,94,79,95,47,94,78,93,48,96,87,97,33,16,88,98,88,98,33,16,89,99,89,99,33,16,90,100,90,100,33,16,91,101,91,101,33,16,92,102,92,102,33,16,93,103,34,17,93,103,33,16,76,104,94,105,77,106,94,105,76,104,95,107,96,108,79,109,97,110,79,109,96,108,78,111,95,112,98,113,94,114,98,113,95,112,99,115,99,116,100,117,98,118,100,117,99,116,101,119,101,120,102,121,100,122,102,121,101,120,103,123,103,124,97,125,102,126,97,125,103,124,96,127,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
4,5,6,5,4,7,5,7,8,9,10,11,10,9,12,12,9,13,14,11,7,11,14,15,11,15,16,11,16,17,11,17,18,11,18,19,11,19,20,10,80,8,80,10,81,81,10,82,82,10,83,83,10,84,84,10,85,85,10,86,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 60, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID38(GL2 gl){
double[] positionsArray = {
9.5768093,5.531864,15.9612251,9.5768093,5.531864,14.620142,9.5768093,5.4435855,15.2906836,9.5768093,5.7906834,16.5860703,9.5768093,5.7906834,13.9952968,9.5768093,6.2024055,17.122637,9.5768093,6.2024055,13.4587301,9.5768093,6.7389723,17.5343592,9.5768093,6.5610435,13.1835375,9.5768093,6.7389723,13.0470079,9.5768093,7.3638175,17.7931786,9.5768093,7.3638175,12.7881886,9.5768093,7.6843959,15.3488468,9.5768093,7.6993034,15.4620801,9.5768093,8.034359,17.881457,9.5768093,7.7430098,15.5675968,9.5768093,7.8125367,15.658206,9.5768093,7.9031459,15.7277329,9.5768093,8.0086626,15.7714393,9.5768093,8.1218959,15.7863468,9.5768093,8.7049005,17.7931786,9.5768093,8.2351293,15.7714393,9.5768093,8.3406459,15.7277329,9.5768093,8.4312552,15.658206,9.5768093,8.500782,15.5675968,9.5768093,8.5444885,15.4620801,9.5768093,8.5593959,15.3488468,9.5768093,7.6993034,15.2356134,9.5768093,8.034359,12.6999101,9.5768093,7.7430098,15.1300968,9.5768093,7.8125367,15.0394876,9.5768093,7.9031459,14.9699607,9.5768093,8.0086626,14.9262542,9.5768093,8.1218959,14.9113468,9.5768093,8.7049005,12.7881886,9.5768093,8.2351293,14.9262542,9.5768093,8.3406459,14.9699607,9.5768093,8.4312552,15.0394876,9.5768093,8.500782,15.1300968,9.5768093,8.5444885,15.2356134,9.5768093,9.3297458,17.5343592,9.5768093,9.3297458,13.0470079,9.5768093,9.8663125,17.122637,9.5768093,9.5076745,13.1835375,9.5768093,9.8663125,13.4587301,9.5768093,10.2780347,16.5860703,9.5768093,10.2780347,13.9952968,9.5768093,10.536854,15.9612251,9.5768093,10.536854,14.620142,9.5768093,10.6251325,15.2906836,11.0143093,7.1030514,18.7663711,9.5768093,8.034359,17.881457,9.5768093,7.3638175,17.7931786,11.0143093,8.034359,18.88898,9.5768093,8.7049005,17.7931786,11.0143093,8.9656667,18.7663711,9.5768093,9.3297458,17.5343592,11.0143093,9.8335073,18.4068997,9.5768093,9.8663125,17.122637,11.0143093,10.5787389,17.8350634,9.5768093,9.8663125,17.122637,11.0143093,11.1505752,17.0898318,9.5768093,10.2780347,16.5860703,11.0143093,10.5787389,17.8350634,11.0143093,11.5100465,16.2219912,9.5768093,10.536854,15.9612251,9.5768093,10.6251325,15.2906836,11.0143093,11.6326555,15.2906836,9.5768093,10.536854,14.620142,11.0143093,11.6326555,15.2906836,11.0143093,11.5100465,14.3593759,9.5768093,10.6251325,15.2906836,9.5768093,10.2780347,13.9952968,11.0143093,11.1505752,13.4915353,9.5768093,9.8663125,13.4587301,11.0143093,10.5787389,12.7463037,9.5768093,9.5076745,13.1835375,11.0143093,10.0806306,12.3640918,11.0143093,5.9880875,12.3640918,9.5768093,6.2024055,13.4587301,9.5768093,6.5610435,13.1835375,11.0143093,5.4899792,12.7463037,11.0143093,4.9181428,13.4915353,9.5768093,5.7906834,13.9952968,11.0143093,4.5586715,14.3593759,9.5768093,5.531864,14.620142,11.0143093,4.4360625,15.2906836,9.5768093,5.4435855,15.2906836,11.0143093,4.5586715,16.2219912,9.5768093,5.4435855,15.2906836,11.0143093,4.4360625,15.2906836,9.5768093,5.531864,15.9612251,9.5768093,5.7906834,16.5860703,11.0143093,4.9181428,17.0898318,9.5768093,6.2024055,17.122637,11.0143093,5.4899792,17.8350634,11.0143093,5.4899792,17.8350634,9.5768093,6.7389723,17.5343592,9.5768093,6.2024055,17.122637,11.0143093,6.2352108,18.4068997,39.0143093,8.034359,20.3664193,11.0143093,7.1030514,18.7663711,11.0143093,8.034359,18.88898,11.0143093,8.034359,18.88898,11.0143093,7.1030514,18.7663711,39.0143093,8.034359,20.3664193,11.0143093,8.9656667,18.7663711,11.0143093,8.9656667,18.7663711,39.0143093,9.2267912,20.1751865,11.0143093,9.8335073,18.4068997,11.0143093,9.8335073,18.4068997,39.0143093,9.2267912,20.1751865,15.712461,10.5319062,18.134672,11.0143093,10.5787389,17.8350634,39.0143093,10.2996258,19.6206682,39.0143093,10.2996258,19.6206682,15.712461,10.5319062,18.134672,11.0143093,10.5787389,17.8350634,39.0143093,11.1452604,18.758481,11.0143093,10.5787389,17.8350634,11.0143093,11.1505752,17.0898318,11.0143093,11.1505752,17.0898318,11.0143093,10.5787389,17.8350634,39.0143093,11.1452604,18.758481,11.0143093,13.9760584,15.2906836,11.0143093,11.1505752,17.0898318,11.0143093,10.5787389,17.8350634,11.0143093,11.5100465,16.2219912,11.0143093,11.6326555,15.2906836,39.0143093,11.6788803,17.6751,11.0143093,11.5100465,16.2219912,11.0143093,11.5100465,16.2219912,39.0143093,11.6788803,17.6751,18.305745,11.6884634,15.6001794,11.0143093,11.6326555,15.2906836,39.0143093,11.8469648,16.4791852,39.0143093,11.8469648,16.4791852,18.305745,11.6884634,15.6001794,11.0143093,11.6326555,15.2906836,11.0143093,10.5787389,12.7463037,11.0143093,11.6326555,12.3640918,11.0143093,10.0806306,12.3640918,11.0143093,11.1505752,13.4915353,11.0143093,11.5100465,14.3593759,29.8962823,11.6326555,15.2906836,18.7643093,11.6326555,15.2906836,39.0143093,11.6326555,15.2906836,11.0143093,11.5100465,14.3593759,39.0143093,11.5100465,14.3593759,11.0143093,11.6326555,15.2906836,18.7643093,11.6326555,15.2906836,39.0143093,11.6326555,15.2906836,11.0143093,11.6326555,15.2906836,11.0143093,11.5100465,14.3593759,39.0143093,11.5100465,14.3593759,29.8962823,11.6326555,15.2906836,11.0143093,11.1505752,13.4915353,39.0143093,11.1505752,13.4915353,11.0143093,11.1505752,13.4915353,39.0143093,11.1505752,13.4915353,11.0143093,10.5787389,12.7463037,39.0143093,10.5787389,12.7463037,11.0143093,10.5787389,12.7463037,39.0143093,10.5787389,12.7463037,39.0143093,10.0806306,12.3640918,11.0143093,10.0806306,12.3640918,39.0143093,10.0806306,12.3640918,11.0143093,10.0806306,12.3640918,39.0143093,5.4899792,12.7463037,11.0143093,5.9880875,12.3640918,11.0143093,5.4899792,12.7463037,39.0143093,5.9880875,12.3640918,39.0143093,5.9880875,12.3640918,39.0143093,5.4899792,12.7463037,11.0143093,5.9880875,12.3640918,11.0143093,5.4899792,12.7463037,11.0143093,4.5586715,14.3593759,11.0143093,4.4360625,12.3640918,11.0143093,4.4360625,15.2906836,11.0143093,4.9181428,13.4915353,11.0143093,5.4899792,12.7463037,11.0143093,5.9880875,12.3640918,11.0143093,4.9181428,13.4915353,39.0143093,4.9181428,13.4915353,39.0143093,4.9181428,13.4915353,11.0143093,4.9181428,13.4915353,11.0143093,4.5586715,14.3593759,39.0143093,4.5586715,14.3593759,18.3292984,4.5586715,14.3593759,18.3292984,4.5586715,14.3593759,11.0143093,4.5586715,14.3593759,39.0143093,4.5586715,14.3593759,29.8962823,4.4360625,15.2906836,32.9845191,4.4718037,15.0192024,32.9845191,4.4360625,15.2906836,11.0143093,4.4360625,15.2906836,11.0143093,4.4360625,15.2906836,32.9845191,4.4360625,15.2906836,29.8962823,4.4360625,15.2906836,32.9845191,4.4718037,15.0192024,39.0143093,4.2217533,16.4791852,11.0143093,4.4360625,15.2906836,11.0143093,4.5586715,16.2219912,11.0143093,4.5586715,16.2219912,11.0143093,4.4360625,15.2906836,39.0143093,4.2217533,16.4791852,11.0143093,2.0926596,15.2906836,11.0143093,4.5586715,16.2219912,11.0143093,4.9181428,17.0898318,11.0143093,5.4899792,17.8350634,39.0143093,4.3898377,17.6751,11.0143093,4.9181428,17.0898318,11.0143093,4.9181428,17.0898318,39.0143093,4.3898377,17.6751,39.0143093,4.9234576,18.758481,11.0143093,5.4899792,17.8350634,11.0143093,5.4899792,17.8350634,39.0143093,4.9234576,18.758481,11.0143093,6.2352108,18.4068997,15.712461,5.5368119,18.134672,11.0143093,5.4899792,17.8350634,39.0143093,5.7690922,19.6206682,39.0143093,5.7690922,19.6206682,11.0143093,6.2352108,18.4068997,15.712461,5.5368119,18.134672,11.0143093,5.4899792,17.8350634,39.0143093,6.8419268,20.1751865,39.0143093,6.8419268,20.1751865,17.0768093,13.9760584,15.2906836,11.0143093,10.5787389,17.8350634,15.712461,10.5319062,18.134672,17.0768093,13.9760584,15.2906836,11.0143093,13.9760584,15.2906836,11.0143093,10.5787389,17.8350634,11.0143093,11.6326555,9.4375,11.0143093,13.9760584,9.4375,29.8962823,11.6326555,15.2906836,18.7643093,11.6326555,15.2906836,26.090155,11.6509818,15.3923165,26.090155,11.6509818,15.3923165,29.8962823,11.6326555,15.2906836,18.7643093,11.6326555,15.2906836,29.8962823,11.6326555,15.2906836,39.0143093,11.6326555,15.2906836,26.090155,11.6509818,15.3923165,26.090155,11.6509818,15.3923165,29.8962823,11.6326555,15.2906836,39.0143093,11.6326555,15.2906836,13.3083765,11.6326555,7.5315788,11.0143093,11.6326555,1.5625,15.0732022,11.6326555,1.5625,11.0143093,11.6326555,9.4375,18.7643093,11.6326555,15.2906836,11.0143093,11.6326555,12.3640918,11.0143093,11.6326555,15.2906836,11.0143093,2.0926596,9.4375,11.0143093,4.4360625,9.4375,32.9845191,4.5318961,14.562755,32.9845191,4.4718037,15.0192024,39.0143093,4.5318961,14.562755,38.6934797,4.5318961,14.562755,38.6934797,4.5318961,14.562755,32.9845191,4.5318961,14.562755,39.0143093,4.5318961,14.562755,32.9845191,4.4718037,15.0192024,18.3292984,4.5586715,14.3593759,18.3292984,4.5586715,14.3593759,11.0143093,4.4360625,12.3640918,18.3292984,4.5586715,14.3593759,11.0143093,4.4360625,9.4375,11.0143093,4.4360625,15.2906836,17.0768093,2.0926596,15.2906836,11.0143093,5.4899792,17.8350634,11.0143093,2.0926596,15.2906836,17.0768093,2.0926596,15.2906836,15.712461,5.5368119,18.134672,11.0143093,5.4899792,17.8350634,18.7643093,11.6326555,15.2906836,17.0768093,13.9760584,15.2906836,15.712461,10.5319062,18.134672,11.0143093,13.9760584,9.4375,15.0732022,13.9760584,1.5625,11.0143093,13.9760584,1.5625,13.3083765,13.9760584,7.5315788,17.0768093,13.9760584,15.2906836,11.0143093,13.9760584,15.2906836,11.0143093,11.6326555,1.5625,11.0143093,13.9760584,1.5625,15.0732022,13.9760584,1.5625,13.3083765,11.6326555,7.5315788,15.0732022,11.6326555,1.5625,13.3083765,13.9760584,7.5315788,13.3083765,13.9760584,7.5315788,18.7643093,11.6326555,15.2906836,13.3083765,11.6326555,7.5315788,15.0732022,11.6326555,1.5625,11.3867197,11.1473209,1.5625,11.0143093,11.6326555,1.5625,11.8720543,10.7749105,1.5625,12.4372385,10.5408036,1.5625,13.0437558,10.460954,1.5625,13.6502731,10.5408036,1.5625,14.2154572,10.7749105,1.5625,14.7007919,11.1473209,1.5625,14.7007919,11.1473209,1.5625,15.0732022,11.6326555,1.5625,14.2154572,10.7749105,1.5625,13.6502731,10.5408036,1.5625,13.0437558,10.460954,1.5625,12.4372385,10.5408036,1.5625,11.8720543,10.7749105,1.5625,11.3867197,11.1473209,1.5625,11.0143093,11.6326555,1.5625,13.3083765,2.0926596,7.5315788,11.0143093,2.0926596,1.5625,15.0732022,2.0926596,1.5625,11.0143093,2.0926596,9.4375,17.0768093,2.0926596,15.2906836,11.0143093,2.0926596,15.2906836,11.0143093,2.0926596,1.5625,11.0143093,4.4360625,1.5625,32.9845191,4.4718037,15.0192024,39.0143093,4.4360625,15.2906836,39.0143093,4.4360625,15.2906836,32.9845191,4.4718037,15.0192024,18.3292984,4.5586715,14.3593759,13.3083765,4.4360625,7.5315788,11.0143093,4.4360625,9.4375,15.712461,5.5368119,18.134672,17.0768093,2.0926596,15.2906836,18.3292984,4.5586715,14.3593759,17.0768093,13.9760584,15.2906836,18.7643093,11.6326555,15.2906836,13.3083765,13.9760584,7.5315788,10.7802024,13.4108743,1.5625,10.7802024,12.1978397,1.5625,10.7003529,12.804357,1.5625,11.0143093,13.9760584,1.5625,15.3073092,13.4108743,1.5625,15.0732022,13.9760584,1.5625,15.3073092,12.1978397,1.5625,15.3871587,12.804357,1.5625,11.3867197,14.461393,1.5625,11.8720543,14.8338034,1.5625,12.4372385,15.0679103,1.5625,13.0437558,15.1477599,1.5625,13.6502731,15.0679103,1.5625,14.2154572,14.8338034,1.5625,14.7007919,14.461393,1.5625,14.7007919,14.461393,1.5625,14.2154572,14.8338034,1.5625,15.0732022,13.9760584,1.5625,13.6502731,15.0679103,1.5625,13.0437558,15.1477599,1.5625,12.4372385,15.0679103,1.5625,11.8720543,14.8338034,1.5625,11.3867197,14.461393,1.5625,11.0143093,13.9760584,1.5625,15.3871587,12.804357,1.5625,15.3073092,13.4108743,1.5625,15.3073092,12.1978397,1.5625,10.7802024,12.1978397,1.5625,10.7802024,13.4108743,1.5625,10.7003529,12.804357,1.5625,11.3867197,11.1473209,1.5625,11.0143093,11.6326555,0.0,11.4612679,11.0501677,0.0,11.0143093,11.6326555,1.5625,15.8857022,11.6326555,0.0,14.7007919,11.1473209,1.5625,15.4387436,11.0501677,0.0,15.0732022,11.6326555,1.5625,14.8562558,10.6032091,0.0,14.2154572,10.7749105,1.5625,14.1779343,10.3222391,0.0,13.6502731,10.5408036,1.5625,13.4500058,10.2264055,0.0,13.0437558,10.460954,1.5625,12.7220772,10.3222391,0.0,12.4372385,10.5408036,1.5625,12.0437558,10.6032091,0.0,11.8720543,10.7749105,1.5625,15.0732022,4.4360625,1.5625,13.3083765,2.0926596,7.5315788,15.0732022,2.0926596,1.5625,13.3083765,4.4360625,7.5315788,18.3292984,4.5586715,14.3593759,17.0768093,2.0926596,15.2906836,13.3083765,2.0926596,7.5315788,15.0732022,2.0926596,1.5625,11.3867197,1.607325,1.5625,11.0143093,2.0926596,1.5625,11.8720543,1.2349146,1.5625,12.4372385,1.0008077,1.5625,13.0437558,0.9209582,1.5625,13.6502731,1.0008077,1.5625,14.2154572,1.2349146,1.5625,14.7007919,1.607325,1.5625,14.7007919,1.607325,1.5625,15.0732022,2.0926596,1.5625,14.2154572,1.2349146,1.5625,13.6502731,1.0008077,1.5625,13.0437558,0.9209582,1.5625,12.4372385,1.0008077,1.5625,11.8720543,1.2349146,1.5625,11.3867197,1.607325,1.5625,11.0143093,2.0926596,1.5625,11.0143093,4.4360625,9.4375,15.0732022,4.4360625,1.5625,11.0143093,4.4360625,1.5625,13.3083765,4.4360625,7.5315788,10.7802024,3.8708784,1.5625,10.7802024,2.6578438,1.5625,10.7003529,3.2643611,1.5625,11.0143093,4.4360625,1.5625,15.3073092,3.8708784,1.5625,15.0732022,4.4360625,1.5625,15.3073092,2.6578438,1.5625,15.3871587,3.2643611,1.5625,11.3867197,4.9213972,1.5625,11.8720543,5.2938075,1.5625,12.4372385,5.5279145,1.5625,13.0437558,5.607764,1.5625,13.6502731,5.5279145,1.5625,14.2154572,5.2938075,1.5625,14.7007919,4.9213972,1.5625,14.7007919,4.9213972,1.5625,14.2154572,5.2938075,1.5625,15.0732022,4.4360625,1.5625,13.6502731,5.5279145,1.5625,13.0437558,5.607764,1.5625,12.4372385,5.5279145,1.5625,11.8720543,5.2938075,1.5625,11.3867197,4.9213972,1.5625,11.0143093,4.4360625,1.5625,15.3871587,3.2643611,1.5625,15.3073092,3.8708784,1.5625,15.3073092,2.6578438,1.5625,10.7802024,2.6578438,1.5625,10.7802024,3.8708784,1.5625,10.7003529,3.2643611,1.5625,32.9845191,4.4360625,15.2906836,32.9845191,4.4360625,15.2906836,18.3292984,4.5586715,14.3593759,13.3083765,2.0926596,7.5315788,13.3083765,4.4360625,7.5315788,16.1666722,12.3109769,0.0,15.3073092,12.1978397,1.5625,10.7802024,12.1978397,1.5625,10.7333394,12.3109769,0.0,10.7003529,12.804357,1.5625,10.6375058,13.0389055,0.0,10.7802024,13.4108743,1.5625,10.7333394,13.7668341,0.0,11.0143093,13.9760584,1.5625,11.0143093,14.4451555,0.0,11.3867197,14.461393,1.5625,11.4612679,15.0276433,0.0,12.0437558,15.4746019,0.0,11.8720543,14.8338034,1.5625,12.7220772,15.7555719,0.0,12.4372385,15.0679103,1.5625,13.4500058,15.8514055,0.0,13.0437558,15.1477599,1.5625,14.1779343,15.7555719,0.0,13.6502731,15.0679103,1.5625,14.8562558,15.4746019,0.0,14.2154572,14.8338034,1.5625,15.4387436,15.0276433,0.0,14.7007919,14.461393,1.5625,15.8857022,14.4451555,0.0,15.0732022,13.9760584,1.5625,16.1666722,13.7668341,0.0,15.3073092,13.4108743,1.5625,16.2625058,13.0389055,0.0,15.3871587,12.804357,1.5625,11.3867197,1.607325,1.5625,11.0143093,2.0926596,0.0,11.4612679,1.5101718,0.0,11.0143093,2.0926596,1.5625,15.8857022,2.0926596,0.0,14.7007919,1.607325,1.5625,15.4387436,1.5101718,0.0,15.0732022,2.0926596,1.5625,14.8562558,1.0632132,0.0,14.2154572,1.2349146,1.5625,14.1779343,0.7822432,0.0,13.6502731,1.0008077,1.5625,13.4500058,0.6864096,0.0,13.0437558,0.9209582,1.5625,12.7220772,0.7822432,0.0,12.4372385,1.0008077,1.5625,12.0437558,1.0632132,0.0,11.8720543,1.2349146,1.5625,16.1666722,2.7709811,0.0,15.3073092,2.6578438,1.5625,10.7802024,2.6578438,1.5625,10.7333394,2.7709811,0.0,10.7003529,3.2643611,1.5625,10.6375058,3.4989096,0.0,10.7802024,3.8708784,1.5625,10.7333394,4.2268382,0.0,11.0143093,4.4360625,1.5625,11.0143093,4.9051596,0.0,11.3867197,4.9213972,1.5625,11.4612679,5.4876474,0.0,12.0437558,5.9346061,0.0,11.8720543,5.2938075,1.5625,12.7220772,6.215576,0.0,12.4372385,5.5279145,1.5625,13.4500058,6.3114096,0.0,13.0437558,5.607764,1.5625,14.1779343,6.215576,0.0,13.6502731,5.5279145,1.5625,14.8562558,5.9346061,0.0,14.2154572,5.2938075,1.5625,15.4387436,5.4876474,0.0,14.7007919,4.9213972,1.5625,15.8857022,4.9051596,0.0,15.0732022,4.4360625,1.5625,16.1666722,4.2268382,0.0,15.3073092,3.8708784,1.5625,16.2625058,3.4989096,0.0,15.3871587,3.2643611,1.5625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID20.bind();
texcoordArray = new float[] {
-0.7470274f,0.8929357f,-0.7470274f,0.81791f,-0.7445758f,0.8554229f,-0.754215f,0.927892f,-0.754215f,0.7829537f,-0.7656489f,0.9579098f,-0.7656489f,0.7529359f,-0.7805497f,0.9809432f,-0.7756085f,0.7375406f,-0.7805497f,0.7299025f,-0.7979022f,0.9954226f,-0.7979022f,0.7154231f,-0.8068049f,0.8586767f,-0.8072189f,0.8650115f,-0.8165237f,1.0003612f,-0.8084327f,0.8709145f,-0.8103635f,0.8759836f,-0.8128798f,0.8798732f,-0.81581f,0.8823183f,-0.8189546f,0.8831523f,-0.8351451f,0.9954226f,-0.8220992f,0.8823183f,-0.8250295f,0.8798732f,-0.8275458f,0.8759836f,-0.8294766f,0.8709145f,-0.8306903f,0.8650115f,-0.8311043f,0.8586767f,-0.8072189f,0.852342f,-0.8165237f,0.7104845f,-0.8084327f,0.846439f,-0.8103635f,0.8413699f,-0.8128798f,0.8374803f,-0.81581f,0.8350352f,-0.8189546f,0.8342012f,-0.8351451f,0.7154231f,-0.8220992f,0.8350352f,-0.8250295f,0.8374803f,-0.8275458f,0.8413699f,-0.8294766f,0.846439f,-0.8306903f,0.852342f,-0.8524976f,0.9809432f,-0.8524976f,0.7299025f,-0.8673984f,0.9579098f,-0.8574388f,0.7375406f,-0.8673984f,0.7529359f,-0.8788323f,0.927892f,-0.8788323f,0.7829537f,-0.8860199f,0.8929357f,-0.8860199f,0.81791f,-0.8884715f,0.8554229f,-0.339429f,4.670348f,-0.3722173f,4.585085f,-0.3539159f,4.576579f,-0.3648476f,4.682162f,-1.240131f,4.187699f,-1.2510628f,4.082116f,-1.2327614f,4.090622f,-1.2655495f,4.175885f,-1.8814824f,3.236638f,-1.8710814f,3.130838f,-1.8558815f,3.1530643f,-1.9025934f,3.205768f,-2.2139025f,2.3721447f,-2.1882818f,2.2774408f,-2.1770737f,2.307802f,-2.2294693f,2.3299763f,-2.3247895f,1.7190468f,-2.3783185f,1.7169276f,-2.332323f,1.6843873f,-2.3678553f,1.7650659f,-2.3909228f,1.3231751f,-2.4433923f,1.3017201f,-2.3952434f,1.2863533f,-2.4373918f,1.3528616f,-2.4185455f,0.9822449f,-2.4653409f,1.034648f,-2.4672952f,0.9822449f,-2.4171386f,1.0199751f,-2.4171386f,0.6810141f,-2.4672952f,0.7187443f,-2.4653409f,0.6663412f,-2.4185455f,0.7187443f,-2.3909228f,0.3009944f,-2.4433923f,0.3224494f,-2.4373918f,0.2713079f,-2.3952434f,0.3378163f,-2.3247895f,-0.2373261f,-2.3783185f,-0.235207f,-2.3678553f,-0.2833452f,-2.332323f,-0.2026666f,-2.2294693f,-1.0320467f,-2.1807902f,-0.9998043f,-2.1882818f,-0.9795111f,-2.2190645f,-1.0602317f,0.9907136f,-2.472556f,0.959931f,-2.3918357f,0.9524395f,-2.4121287f,1.0011185f,-2.4443712f,1.3023311f,-1.4723483f,1.248802f,-1.4744674f,1.2918679f,-1.5204865f,1.2563356f,-1.4398079f,1.461775f,-0.5037702f,1.4093056f,-0.5252252f,1.4557744f,-0.5549117f,1.413626f,-0.4884034f,1.5300093f,0.4299846f,1.4798527f,0.3922544f,1.528055f,0.3775816f,1.4812598f,0.4299846f,1.528055f,1.3234076f,1.4812598f,1.2710046f,1.5300093f,1.2710046f,1.4798527f,1.3087347f,1.461775f,2.1279397f,1.4093056f,2.1493948f,1.413626f,2.112573f,1.4557744f,2.1790812f,1.3023311f,2.954069f,1.248802f,2.9561882f,1.2563356f,2.9215286f,1.2918679f,3.0022073f,1.0011185f,3.7423007f,0.9487228f,3.7201264f,0.959931f,3.6897652f,0.9855515f,3.7844691f,0.4721212f,4.4097853f,0.4254093f,4.3570814f,0.4406092f,4.334855f,0.4510102f,4.440655f,-1.8967146f,3.4191418f,-1.9063364f,3.3702965f,-2.6184833f,4.0077295f,2.5138738f,0.3469257f,2.5042522f,0.3957711f,3.2260208f,0.9843589f,2.4629984f,-0.628611f,2.4598727f,-0.5764389f,3.2318282f,-0.3719695f,3.2039893f,-0.3643824f,2.559073f,-0.5007139f,2.4275343f,-0.4757386f,2.429044f,-0.5282012f,2.409271f,-0.2146358f,2.4085486f,-0.1621052f,3.1860416f,-0.0970145f,-0.9815293f,0.8554229f,-0.9030634f,0.9560745f,-0.8871831f,0.9977658f,-0.9130462f,0.907524f,-0.9164512f,0.8554229f,2.394869f,0.1853743f,2.3945944f,0.2379221f,3.1722858f,0.2733602f,3.1601632f,0.6824886f,2.585062f,0.6328892f,2.3825252f,0.667976f,2.3825705f,0.6154253f,-0.8871831f,0.7130799f,-0.9164512f,0.6916974f,-0.8733502f,0.6916974f,-0.9030634f,0.7547712f,-0.9130462f,0.8033217f,2.5858672f,1.08908f,3.1482258f,1.08908f,2.3706436f,1.08908f,2.3706436f,1.0365293f,3.1482258f,1.0365293f,2.895011f,1.08908f,2.3706436f,1.4460517f,3.1482258f,1.4460517f,2.3706436f,1.393501f,3.1482258f,1.393501f,2.3706436f,1.706268f,3.1482258f,1.706268f,2.3706436f,1.6537173f,3.1482258f,1.6537173f,3.1482258f,1.8519956f,3.1482258f,1.816871f,2.3706436f,1.8519956f,2.3706436f,1.816871f,-3.1482258f,-0.7930726f,-3.1482258f,-0.757948f,-2.3706436f,-0.7930726f,-2.3706436f,-0.757948f,-0.7200011f,0.8033217f,-0.7165961f,0.6916974f,-0.7165961f,0.8554229f,-0.7299839f,0.7547712f,-0.7458642f,0.7130799f,-0.7596971f,0.6916974f,-3.1482258f,-0.2964122f,-2.3706436f,-0.2964122f,-3.1482258f,-0.3489629f,-2.3706436f,-0.3489629f,-2.5737865f,0.1871143f,-2.3706436f,0.1871143f,-3.1482258f,0.1871143f,-3.1482258f,0.1345636f,-2.3706436f,0.1345636f,-2.3706436f,0.6071292f,-2.5737865f,0.6071292f,-2.3706436f,0.6596799f,-2.9807737f,0.6596799f,-2.895011f,0.6596799f,-2.9807737f,0.6443611f,-2.3609023f,1.0973014f,-2.3609474f,1.0447508f,-3.13854f,1.111814f,-0.651518f,0.8554229f,-0.7200011f,0.907524f,-0.7299839f,0.9560745f,-0.7458642f,0.9977658f,-2.34966f,1.4959761f,-2.3499346f,1.4434283f,-3.1273513f,1.5314142f,-2.3342588f,1.8371973f,-2.3349812f,1.7846667f,-3.1117516f,1.9022878f,-3.0848656f,2.2360318f,-2.308411f,2.1246755f,-2.4399495f,2.0997002f,-2.3099205f,2.072213f,-2.2480795f,2.4334674f,-2.2512052f,2.3812952f,-3.020035f,2.6379368f,-2.7447548f,3.655378f,-2.0127788f,3.1167579f,-2.754935f,3.591004f,3.2569654f,0.5040843f,2.5148091f,0.0298383f,3.2467854f,0.5684586f,3.2203944f,-0.4953877f,2.4454162f,-0.6426871f,3.2174146f,-0.4280929f,3.1900587f,-0.220746f,3.1912918f,-0.2882622f,2.5441794f,-0.3371115f,2.4139564f,-0.3605733f,-2.5975366f,-0.6960875f,-2.4233892f,-0.4762225f,-2.553499f,-0.4503327f,3.1736407f,0.1525182f,2.3959613f,0.1160227f,3.1732087f,0.2200745f,-2.539004f,-1.0698458f,-2.3706436f,-1.0698458f,-2.3706436f,-0.8323921f,-0.9164512f,0.527972f,-0.9815293f,0.527972f,3.1602352f,0.666123f,2.3825972f,0.6515931f,3.160173f,0.7336848f,2.7893116f,1.1752418f,2.895011f,1.1694643f,2.5731325f,1.187058f,2.3706436f,1.1694643f,2.5858672f,1.1694643f,2.5731325f,1.187058f,3.1482258f,1.2370262f,2.7893116f,1.1752418f,2.895011f,1.1694643f,3.1482258f,1.1694643f,2.4343517f,0.4213471f,2.3706436f,0.0874126f,2.4833622f,0.0874126f,2.3706436f,0.527972f,2.5858672f,0.8554229f,2.3706436f,0.6916974f,2.3706436f,0.8554229f,-0.651518f,0.527972f,-0.7165961f,0.527972f,-3.139316f,0.6186052f,-2.9807737f,0.6186052f,-3.1482258f,0.6186052f,-3.1482258f,0.6071292f,-2.9807737f,0.6443611f,-2.5737865f,0.6071292f,-2.3695304f,0.640156f,-2.572668f,0.5875188f,-3.147121f,0.7073297f,-2.38232f,0.6916974f,-2.5854917f,0.8033217f,-2.38232f,0.527972f,-2.38232f,0.8554229f,-2.3608408f,1.1093847f,-3.1384785f,1.1239146f,-3.1384163f,1.1914763f,2.539004f,1.5633061f,2.3706436f,1.8007598f,2.3706436f,1.5633061f,-2.3483562f,1.56852f,-3.1260355f,1.6050155f,-3.1256037f,1.6725718f,-3.1043134f,2.0780163f,-2.4584339f,1.9616507f,-3.1055465f,2.0105f,-2.3282108f,1.9381889f,2.4911833f,1.8058537f,2.4471457f,2.0516086f,2.317036f,2.0257187f,-3.0540922f,2.4766276f,-2.2820938f,2.2620335f,-3.057072f,2.409333f,-0.7673878f,-3.345001f,-0.6871922f,-3.345001f,-0.7426681f,-3.1088314f,-2.3706436f,0.527972f,-2.4833622f,0.0874126f,-2.3706436f,0.0874126f,-2.4343517f,0.4213471f,-2.539004f,0.8554229f,-2.3706436f,0.8554229f,-0.9164512f,0.0874126f,-0.9815293f,0.0874126f,0.9815293f,-1.3345869f,0.9164512f,-0.9863626f,0.9164512f,-1.3345869f,0.9815293f,-0.9863626f,0.9815293f,3.1654332f,0.9164512f,3.6960793f,0.9164512f,3.1654332f,-2.47302f,1.8190327f,-2.4833622f,1.8461843f,-2.459542f,1.7981985f,-2.4438462f,1.7851017f,-2.427003f,1.7806345f,-2.4101593f,1.7851017f,-2.3944638f,1.7981985f,-2.3809857f,1.8190327f,-2.3706436f,1.8461843f,2.539004f,0.8554229f,-0.651518f,0.0874126f,-0.7165961f,0.0874126f,-3.1497884f,0.5881404f,-3.1497753f,0.6557023f,-2.982339f,0.5727077f,-2.575358f,0.535199f,-2.580344f,0.8189024f,-2.4408834f,0.436904f,-2.377178f,0.5435356f,1.276215f,-1.8937362f,1.1911736f,-2.0910091f,1.2656069f,-2.1556091f,-0.6871922f,2.7414439f,-0.7673878f,2.7414439f,-0.6260374f,2.274871f,-2.47302f,2.0044353f,-2.459542f,2.0252695f,-2.4833622f,1.9772837f,-2.4438462f,2.0383663f,-2.427003f,2.0428336f,-2.4101593f,2.0383663f,-2.3944638f,2.0252695f,-2.3809857f,2.0044353f,-2.3706436f,1.9772837f,-2.492081f,1.911734f,-2.4898634f,1.945665f,-2.4898634f,1.877803f,-2.3641422f,1.877803f,-2.3641422f,1.945665f,-2.3619246f,1.911734f,0.7330755f,0.0874126f,0.7160867f,0.0f,0.7364763f,0.0f,0.7160867f,0.0874126f,2.2525806f,-1.0987507f,2.2218559f,-1.0041918f,2.232191f,-1.0987507f,2.2388446f,-1.0041918f,2.511674f,-0.4246021f,2.5059004f,-0.5168405f,2.5262902f,-0.5168405f,2.4946852f,-0.4246021f,2.6139154f,0.0258808f,2.6081421f,-0.0644044f,2.6285317f,-0.0644044f,2.5969267f,0.0258808f,2.538602f,0.288649f,2.5319483f,0.1997885f,2.552338f,0.1997885f,2.5216131f,0.288649f,2.290866f,0.3611826f,2.2825117f,0.2731949f,2.3029015f,0.2731949f,2.273877f,0.3611826f,1.8875898f,0.2954713f,1.876831f,0.2079043f,1.8972207f,0.2079043f,1.870601f,0.2954713f,1.3562566f,0.1758791f,1.3425527f,0.0884485f,1.3629423f,0.0884485f,1.3392678f,0.1758791f,0.7165961f,-1.3345869f,0.651518f,-0.9863626f,0.651518f,-1.3345869f,0.7165961f,-0.9863626f,2.055865f,2.0222616f,1.9797533f,2.0783668f,1.9202415f,1.6109324f,-2.47302f,1.2853266f,-2.4833622f,1.3124782f,-2.459542f,1.2644925f,-2.4438462f,1.2513956f,-2.427003f,1.2469285f,-2.4101593f,1.2513956f,-2.3944638f,1.2644925f,-2.3809857f,1.2853266f,-2.3706436f,1.3124782f,-2.47302f,1.4707294f,-2.459542f,1.4915634f,-2.4833622f,1.4435776f,-2.4438462f,1.5046602f,-2.427003f,1.5091274f,-2.4101593f,1.5046602f,-2.3944638f,1.4915634f,-2.3809857f,1.4707294f,-2.3706436f,1.4435776f,-2.492081f,1.3780279f,-2.4898634f,1.411959f,-2.4898634f,1.3440969f,-2.3641422f,1.3440969f,-2.3641422f,1.411959f,-2.3619246f,1.3780279f,2.9807737f,0.6443611f,2.9807737f,0.6596799f,3.1482258f,0.6596799f,0.7200011f,3.7188368f,0.651518f,3.2447016f,0.7165961f,3.2447016f,1.8260564f,-1.7136983f,1.7970321f,-1.6167215f,1.8056668f,-1.7136983f,1.8140209f,-1.6167215f,0.0435267f,0.0874126f,0.0605155f,-0.0f,0.0605155f,0.0874126f,0.0401259f,-0.0f,-0.6325785f,0.1881256f,-0.6188746f,0.100695f,-0.6155897f,0.1881256f,-0.6392642f,0.100695f,-1.2661535f,0.3524989f,-1.2553946f,0.2649319f,-1.2491646f,0.3524989f,-1.2757843f,0.2649319f,-1.8140209f,0.5040711f,-1.8056668f,0.4160834f,-1.7970321f,0.5040711f,-1.8260564f,0.4160834f,-2.2388446f,0.5507485f,-2.232191f,0.461888f,-2.2218559f,0.5507485f,-2.2525806f,0.461888f,-2.4946852f,0.4173762f,-2.5262902f,0.327091f,-2.5059004f,0.327091f,-2.511674f,0.4173762f,-2.5969267f,0.0748008f,-2.6285317f,-0.0174375f,-2.6081421f,-0.0174375f,-2.6139154f,0.0748008f,-2.5216131f,-0.4482203f,-2.552338f,-0.5427793f,-2.5319483f,-0.5427793f,-2.538602f,-0.4482203f,-2.273877f,-1.0746117f,-2.3029015f,-1.1715885f,-2.2825117f,-1.1715885f,-2.290866f,-1.0746117f,-1.870601f,-1.7022167f,-1.8972207f,-1.8013875f,-1.876831f,-1.8013875f,-1.8875898f,-1.7022167f,-1.3392678f,-2.228724f,-1.3629423f,-2.329558f,-1.3425527f,-2.329558f,-1.3562566f,-2.228724f,-0.7364763f,-2.672555f,-0.7160867f,-2.5708258f,-0.7330755f,-2.5708258f,-0.7160867f,-2.672555f,-0.0605155f,-2.777912f,-0.0435267f,-2.6761825f,-0.0605155f,-2.6761825f,-0.0401259f,-2.777912f,0.6188746f,-2.630573f,0.6325785f,-2.5297394f,0.6155897f,-2.5297394f,0.6392642f,-2.630573f,1.2553946f,-2.2550838f,1.2661535f,-2.155913f,1.2491646f,-2.155913f,1.2757843f,-2.2550838f,0.9432612f,0.0874126f,0.9262724f,0.0f,0.946662f,0.0f,0.9262724f,0.0874126f,2.042395f,-1.2226562f,2.0116704f,-1.1280973f,2.0220053f,-1.2226562f,2.028659f,-1.1280973f,2.3503928f,-0.5597644f,2.3446193f,-0.6520028f,2.3650088f,-0.6520028f,2.333404f,-0.5597644f,2.51253f,-0.0975092f,2.5067565f,-0.1877944f,2.527146f,-0.1877944f,2.495541f,-0.0975092f,2.5040214f,0.1935171f,2.4973676f,0.1046567f,2.5177572f,0.1046567f,2.4870324f,0.1935171f,2.3254466f,0.3007869f,2.3170924f,0.2127993f,2.3374822f,0.2127993f,2.3084579f,0.3007869f,1.9889754f,0.2661989f,1.9782166f,0.1786318f,1.9986062f,0.1786318f,1.9719867f,0.2661989f,1.5175377f,0.167292f,1.5038338f,0.0798614f,1.5242234f,0.0798614f,1.500549f,0.167292f,1.5812901f,-1.8021419f,1.5522656f,-1.7051651f,1.5609004f,-1.8021419f,1.5692545f,-1.7051651f,0.2882931f,0.0874126f,0.3052819f,-0.0f,0.3052819f,0.0874126f,0.2848923f,-0.0f,-0.3699118f,0.1867128f,-0.3562079f,0.0992823f,-0.352923f,0.1867128f,-0.3765975f,0.0992823f,-1.0034868f,0.3566345f,-0.9927279f,0.2690675f,-0.9864979f,0.3566345f,-1.0131176f,0.2690675f,-1.5692545f,0.5273829f,-1.5609004f,0.4393953f,-1.5522656f,0.5273829f,-1.5812901f,0.4393953f,-2.028659f,0.6091608f,-2.0220053f,0.5203003f,-2.0116704f,0.6091608f,-2.042395f,0.5203003f,-2.333404f,0.5233335f,-2.3650088f,0.4330483f,-2.3446193f,0.4330483f,-2.3503928f,0.5233335f,-2.495541f,0.2322007f,-2.527146f,0.1399623f,-2.5067565f,0.1399623f,-2.51253f,0.2322007f,-2.4870324f,-0.2464246f,-2.5177572f,-0.3409835f,-2.4973676f,-0.3409835f,-2.5040214f,-0.2464246f,-2.3084579f,-0.8454746f,-2.3374822f,-0.9424514f,-2.3170924f,-0.9424514f,-2.3254466f,-0.8454746f,-1.9719867f,-1.4693328f,-1.9986062f,-1.5685035f,-1.9782166f,-1.5685035f,-1.9889754f,-1.4693328f,-1.500549f,-2.0176563f,-1.5242234f,-2.1184902f,-1.5038338f,-2.1184902f,-1.5175377f,-2.0176563f,-0.946662f,-2.5063598f,-0.9262724f,-2.4046304f,-0.9432612f,-2.4046304f,-0.9262724f,-2.5063598f,-0.3052819f,-2.673437f,-0.2882931f,-2.571708f,-0.3052819f,-2.571708f,-0.2848923f,-2.673437f,0.3562079f,-2.5958471f,0.3699118f,-2.4950135f,0.352923f,-2.4950135f,0.3765975f,-2.5958471f,0.9927279f,-2.2879858f,1.0034868f,-2.188815f,0.9864979f,-2.188815f,1.0131176f,-2.2879858f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,1,1,3,3,4,4,4,4,3,3,5,5,4,4,5,5,6,6,6,6,5,5,7,7,6,6,7,7,8,8,8,8,7,7,9,9,9,9,7,7,10,10,9,9,10,10,11,11,11,11,10,10,12,12,12,12,10,10,13,13,13,13,10,10,14,14,13,13,14,14,15,15,15,15,14,14,16,16,16,16,14,14,17,17,17,17,14,14,18,18,18,18,14,14,19,19,19,19,14,14,20,20,19,19,20,20,21,21,21,21,20,20,22,22,22,22,20,20,23,23,23,23,20,20,24,24,24,24,20,20,25,25,25,25,20,20,26,26,11,11,27,27,28,28,27,27,11,11,12,12,28,28,27,27,29,29,28,28,29,29,30,30,28,28,30,30,31,31,28,28,31,31,32,32,28,28,32,32,33,33,28,28,33,33,34,34,34,34,33,33,35,35,34,34,35,35,36,36,34,34,36,36,37,37,34,34,37,37,38,38,34,34,38,38,39,39,34,34,39,39,26,26,34,34,26,26,20,20,34,34,20,20,40,40,34,34,40,40,41,41,41,41,40,40,42,42,41,41,42,42,43,43,43,43,42,42,44,44,44,44,42,42,45,45,44,44,45,45,46,46,46,46,45,45,47,47,46,46,47,47,48,48,48,48,47,47,49,49,50,50,51,51,52,52,51,51,50,50,53,53,53,54,54,55,51,56,54,55,53,54,55,57,55,58,56,59,54,60,56,59,55,58,57,61,57,62,58,63,56,64,58,63,57,62,59,65,60,66,61,67,62,68,61,67,60,66,63,69,62,70,64,71,65,72,64,71,62,70,61,73,66,74,64,75,67,76,64,75,66,74,65,77,68,78,69,79,70,80,69,79,68,78,71,81,72,82,70,83,73,84,70,83,72,82,68,85,74,86,73,87,75,88,73,87,74,86,72,89,75,90,76,91,74,92,76,91,75,90,77,93,78,94,79,95,80,96,79,95,78,94,81,97,82,98,79,99,81,100,79,99,82,98,83,101,84,102,83,103,82,104,83,103,84,102,85,105,86,106,85,107,84,108,85,107,86,106,87,109,88,110,89,111,90,112,89,111,88,110,91,113,88,114,92,115,91,116,92,115,88,114,93,117,93,118,94,119,92,120,94,119,93,118,95,121,96,122,97,123,98,124,97,123,96,122,99,125,99,126,52,127,97,128,52,127,99,126,50,129,103,130,104,131,105,132,107,133,103,134,105,135,110,136,107,137,111,138,115,139,116,140,110,141,117,142,110,141,116,140,121,143,122,144,123,145,124,146,125,147,126,148,125,147,124,146,127,149,127,149,124,146,128,150,131,151,121,152,132,153,136,154,137,155,131,156,138,157,131,156,137,155,139,158,140,159,141,160,140,159,139,158,142,161,140,159,142,161,143,162,140,159,143,162,128,150,150,163,151,164,152,165,152,165,151,164,153,166,154,167,153,166,151,164,151,164,150,163,155,168,153,169,154,170,158,171,159,172,158,171,154,170,158,173,159,174,162,175,163,176,162,175,159,174,163,177,166,178,162,179,167,180,162,179,166,178,172,181,173,182,174,183,175,184,174,183,173,182,176,185,177,186,178,187,177,186,176,185,179,188,177,186,179,188,180,189,177,186,180,189,181,190,184,191,185,192,173,193,175,194,173,193,185,192,189,195,190,196,191,197,191,197,190,196,184,198,185,199,184,198,190,196,190,200,189,201,196,202,197,203,198,204,199,205,189,201,199,205,198,204,203,206,204,207,205,208,206,209,207,210,178,187,207,210,206,209,208,211,208,211,206,209,209,212,212,213,203,214,213,215,216,216,212,217,217,218,222,219,223,220,224,221,225,222,224,221,223,220,104,223,223,224,227,225,105,226,104,227,227,228,111,229,107,230,105,231,115,232,110,233,111,234,115,235,123,236,116,237,122,238,116,237,123,236,228,239,229,240,230,241,132,242,121,243,123,244,231,245,232,246,233,247,124,146,140,159,128,150,140,159,124,146,234,248,234,248,124,146,235,249,136,250,131,251,132,252,239,253,240,254,137,255,137,255,240,254,138,256,241,257,138,256,240,254,137,258,136,259,245,260,245,260,136,259,246,261,247,262,246,261,136,259,248,263,249,264,250,265,249,264,248,263,251,266,251,266,248,263,252,267,251,266,252,267,253,268,253,268,252,267,254,269,178,187,255,270,206,209,255,270,178,187,256,271,256,271,178,187,177,186,261,272,262,273,263,274,191,275,263,274,262,273,264,276,189,277,262,273,191,275,262,273,189,277,204,278,266,279,205,280,267,281,268,282,269,283,268,282,267,281,270,284,203,285,205,286,213,287,271,288,272,289,273,290,212,291,213,292,217,293,222,294,224,295,217,296,216,297,217,296,224,295,274,298,275,299,276,300,227,301,223,302,222,303,277,304,278,305,279,306,280,307,281,308,282,309,281,308,280,307,283,310,283,310,280,307,284,311,284,311,280,307,285,312,235,249,286,313,234,248,286,313,235,249,287,314,288,315,289,316,290,317,289,316,288,315,291,318,292,319,293,320,294,321,304,322,305,323,306,324,306,324,305,323,307,325,307,325,305,323,308,326,308,326,305,323,309,327,309,327,305,323,310,328,310,328,305,323,311,329,312,330,311,329,305,323,313,263,314,264,315,265,314,264,313,263,316,266,316,266,313,263,317,331,316,266,317,331,318,269,256,271,319,332,255,270,319,332,256,271,320,333,323,334,205,335,324,336,266,337,324,336,205,335,325,338,326,339,327,340,328,341,329,342,330,343,331,344,332,345,333,346,349,347,350,348,351,349,350,348,352,350,351,349,352,350,353,351,351,349,353,351,354,352,351,349,354,352,355,353,351,349,355,353,356,354,351,349,357,355,351,349,356,354,358,356,359,357,360,358,360,358,359,357,305,323,351,349,305,323,359,357,312,330,357,355,361,359,357,355,362,360,361,359,363,361,361,359,362,360,364,362,365,363,366,364,365,363,364,362,367,365,368,366,369,367,370,368,369,367,368,366,371,369,369,370,372,371,370,372,372,371,369,370,373,373,373,374,374,375,372,376,374,375,373,374,375,377,375,378,376,379,374,380,376,379,375,378,377,381,377,382,378,383,376,384,378,383,377,382,379,385,379,386,380,387,378,388,380,387,379,386,381,389,381,390,366,391,380,392,366,391,381,390,364,393,382,394,383,395,384,396,383,395,382,394,385,397,386,398,387,399,388,400,398,401,399,402,400,403,400,403,399,402,401,404,401,404,399,402,402,405,402,405,399,402,403,406,403,406,399,402,404,407,404,407,399,402,405,408,406,409,405,408,399,402,407,307,408,308,409,309,408,308,407,307,410,310,426,410,427,411,428,412,427,411,429,413,428,412,429,413,430,414,428,412,430,414,431,415,428,412,431,415,432,416,428,412,432,416,433,417,428,412,434,418,428,412,433,417,435,419,436,420,437,421,437,421,436,420,399,402,428,412,399,402,436,420,406,409,434,418,438,422,434,418,439,423,438,422,440,424,438,422,439,423,321,425,442,426,322,427,443,428,444,429,445,430,446,431,371,432,368,433,371,432,446,431,447,434,448,435,365,436,367,437,365,436,448,435,449,438,450,439,449,440,448,441,449,440,450,439,451,442,452,443,451,444,450,445,451,444,452,443,453,446,454,447,453,448,452,449,453,448,454,447,455,450,456,451,455,452,454,453,455,452,456,451,457,454,456,455,458,456,457,457,458,456,456,455,459,458,459,459,460,460,458,461,460,460,459,459,461,462,461,463,462,464,460,465,462,464,461,463,463,466,463,467,464,468,462,469,464,468,463,467,465,470,465,471,466,472,464,473,466,472,465,471,467,474,467,475,468,476,466,477,468,476,467,475,469,478,470,479,469,480,471,481,469,480,470,479,468,482,472,483,471,484,473,485,471,484,472,483,470,486,474,487,473,488,475,489,473,488,474,487,472,490,446,491,475,492,447,493,475,492,446,491,474,494,476,495,477,496,478,497,477,496,476,495,479,498,480,499,481,500,482,501,481,500,480,499,483,502,481,503,484,504,482,505,484,504,481,503,485,506,485,507,486,508,484,509,486,508,485,507,487,510,487,511,488,512,486,513,488,512,487,511,489,514,489,515,490,516,488,517,490,516,489,515,491,518,491,519,492,520,490,521,492,520,491,519,493,522,493,523,478,524,492,525,478,524,493,523,476,526,494,527,483,528,480,529,483,528,494,527,495,530,496,531,477,532,479,533,477,532,496,531,497,534,498,535,497,536,496,537,497,536,498,535,499,538,500,539,499,540,498,541,499,540,500,539,501,542,502,543,501,544,500,545,501,544,502,543,503,546,504,547,503,548,502,549,503,548,504,547,505,550,504,551,506,552,505,553,506,552,504,551,507,554,507,555,508,556,506,557,508,556,507,555,509,558,509,559,510,560,508,561,510,560,509,559,511,562,511,563,512,564,510,565,512,564,511,563,513,566,513,567,514,568,512,569,514,568,513,567,515,570,515,571,516,572,514,573,516,572,515,571,517,574,518,575,517,576,519,577,517,576,518,575,516,578,520,579,519,580,521,581,519,580,520,579,518,582,522,583,521,584,523,585,521,584,522,583,520,586,494,587,523,588,495,589,523,588,494,587,522,590,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
100,101,102,100,102,106,108,106,109,112,109,113,109,112,114,118,119,120,129,120,130,133,130,134,130,133,135,144,145,146,146,147,148,147,146,149,149,146,145,148,156,157,156,148,147,157,160,161,160,157,156,164,160,165,160,164,161,168,169,170,169,168,171,182,168,170,168,182,183,186,183,182,183,186,187,187,186,188,192,193,188,193,192,194,195,188,186,200,201,202,210,202,211,214,211,215,218,219,220,219,218,221,226,218,101,226,101,100,100,106,108,108,109,114,118,112,119,112,118,114,118,120,129,129,130,135,236,134,237,134,236,133,133,236,238,135,242,243,242,135,244,244,135,133,188,257,187,257,188,258,257,259,187,259,257,260,200,265,201,210,200,202,214,210,211,219,214,215,214,219,221,221,218,226,295,296,297,296,295,298,298,295,299,299,295,300,300,295,301,301,295,302,302,295,303,200,321,265,321,200,322,334,335,336,335,334,337,335,337,297,338,295,339,295,338,340,340,338,341,342,339,337,339,342,343,339,343,344,339,344,345,339,345,346,339,346,347,339,347,348,389,390,391,390,389,392,392,389,393,393,389,394,394,389,395,395,389,396,396,389,397,411,412,413,412,411,414,412,414,391,415,389,416,389,415,417,417,415,418,419,416,414,416,419,420,416,420,421,416,421,422,416,422,423,416,423,424,416,424,425,323,441,324,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 303, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID46(GL2 gl){
double[] positionsArray = {
10.7333394,4.2268382,0.0,10.7333394,2.7709811,0.0,10.6375058,3.4989096,0.0,11.0143093,4.9051596,0.0,11.0143093,2.0926596,0.0,11.4612679,5.4876474,0.0,11.4612679,1.5101718,0.0,12.0437558,5.9346061,0.0,12.0437558,1.0632132,0.0,12.7220772,6.215576,0.0,12.7220772,0.7822432,0.0,13.4500058,0.6864096,0.0,13.4500058,6.3114096,0.0,14.1779343,6.215576,0.0,14.1779343,0.7822432,0.0,14.8562558,5.9346061,0.0,14.8562558,1.0632132,0.0,15.4387436,5.4876474,0.0,15.4387436,1.5101718,0.0,15.8857022,4.9051596,0.0,15.8857022,2.0926596,0.0,16.1666722,4.2268382,0.0,16.1666722,2.7709811,0.0,16.2625058,3.4989096,0.0,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,11,9,12,11,12,13,11,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID52(GL2 gl){
double[] positionsArray = {
15.0732022,4.4360625,1.5625,11.0143093,2.0926596,1.5625,11.0143093,4.4360625,1.5625,15.0732022,2.0926596,1.5625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID58(GL2 gl){
double[] positionsArray = {
32.7035492,4.3226718,0.0,32.7035492,2.8668147,0.0,32.6077156,3.5947432,0.0,32.9845191,5.0009932,0.0,32.9845191,2.1884932,0.0,33.4314778,5.5834811,0.0,33.4314778,1.6060054,0.0,34.0139656,6.0304397,0.0,34.0139656,1.1590468,0.0,34.692287,6.3114096,0.0,34.692287,0.8780768,0.0,35.4202156,0.7822432,0.0,35.4202156,6.4072432,0.0,36.1481441,6.3114096,0.0,36.1481441,0.8780768,0.0,36.8264656,6.0304397,0.0,36.8264656,1.1590468,0.0,37.4089534,5.5834811,0.0,37.4089534,1.6060054,0.0,37.855912,5.0009932,0.0,37.855912,2.1884932,0.0,38.136882,4.3226718,0.0,38.136882,2.8668147,0.0,38.2327156,3.5947432,0.0,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,11,9,12,11,12,13,11,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID64(GL2 gl){
double[] positionsArray = {
39.0470191,4.5318961,15.2906836,39.0143093,4.5318961,15.2233349,39.0143093,4.5318961,15.2906836,32.9845191,4.5318961,15.2906836,38.6934797,4.5318961,14.562755,32.9845191,4.5318961,14.562755,39.0143093,11.6326555,15.2906836,39.0143093,4.5318961,15.2233349,39.0143093,4.5318961,15.2906836,39.0143093,4.5318961,14.562755,39.0143093,4.5586715,14.3593759,39.0143093,4.9181428,13.4915353,39.0143093,5.4899792,12.7463037,39.0143093,5.9880875,12.3640918,39.0143093,10.0806306,12.3640918,39.0143093,10.5787389,12.7463037,39.0143093,11.1505752,13.4915353,39.0143093,11.5100465,14.3593759,39.0143093,4.5318961,14.562755,32.9845191,4.5318961,15.2906836,32.9845191,4.4718037,15.0192024,32.9845191,4.4360625,15.2906836,32.9845191,4.5318961,14.562755,32.9845191,4.4360625,15.2906836,29.8962823,11.6326555,15.2906836,29.8962823,4.4360625,15.2906836,32.9845191,4.5318961,15.2906836,39.0143093,11.6326555,15.2906836,39.0143093,4.5318961,15.2906836,39.0143093,4.4360625,15.2906836,32.9845191,4.5318961,15.2906836,32.9845191,4.4360625,15.2906836,39.0143093,4.5318961,15.2906836,39.0143093,4.3898377,17.6751,39.0143093,4.4360625,15.2906836,39.0143093,4.2217533,16.4791852,39.0143093,4.9234576,18.758481,39.0143093,5.7690922,19.6206682,39.0143093,6.8419268,20.1751865,39.0143093,8.034359,20.3664193,39.0143093,9.2267912,20.1751865,39.0143093,10.2996258,19.6206682,39.0143093,11.1452604,18.758481,39.0143093,11.6788803,17.6751,39.0143093,11.8469648,16.4791852,39.0143093,6.2352108,12.1744674,39.0143093,7.1030514,11.8149961,39.0143093,8.034359,11.6923871,39.0143093,8.9656667,11.8149961,39.0143093,9.8335073,12.1744674,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,3,4,5,4,3,1,1,3,2,6,7,8,7,6,9,9,6,10,10,6,11,11,6,12,12,6,13,13,6,14,14,6,15,15,6,16,16,6,17,1,18,4,19,20,21,20,19,22,23,24,25,24,23,26,24,26,27,27,26,28,29,30,31,30,29,32,33,34,35,34,33,36,34,36,8,8,36,6,6,36,37,6,37,38,6,38,39,6,39,40,6,40,41,6,41,42,6,42,43,6,43,44,14,45,13,45,14,46,46,14,47,47,14,48,48,14,49,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 120, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID70(GL2 gl){
double[] positionsArray = {
37.043412,4.5318961,1.5625,32.9845191,2.1884932,1.5625,32.9845191,4.5318961,1.5625,37.043412,2.1884932,1.5625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID76(GL2 gl){
double[] positionsArray = {
38.136882,13.8626677,0.0,37.043412,14.071892,1.5625,37.277519,13.5067079,1.5625,37.855912,14.5409891,0.0,38.2327156,13.1347391,0.0,37.3573685,12.9001906,1.5625,36.6710017,14.5572267,1.5625,37.4089534,15.1234769,0.0,32.7504122,13.5067079,1.5625,32.7504122,12.2936733,1.5625,32.6705627,12.9001906,1.5625,32.9845191,14.071892,1.5625,32.9845191,11.7284891,1.5625,37.277519,13.5067079,1.5625,37.043412,11.7284891,1.5625,37.043412,14.071892,1.5625,37.277519,12.2936733,1.5625,37.3573685,12.9001906,1.5625,33.3569295,14.5572267,1.5625,33.8422641,14.929637,1.5625,34.4074483,15.163744,1.5625,35.0139656,15.2435935,1.5625,35.6204829,15.163744,1.5625,36.185667,14.929637,1.5625,36.6710017,14.5572267,1.5625,36.6710017,14.5572267,1.5625,36.185667,14.929637,1.5625,37.043412,14.071892,1.5625,35.6204829,15.163744,1.5625,35.0139656,15.2435935,1.5625,34.4074483,15.163744,1.5625,33.8422641,14.929637,1.5625,33.3569295,14.5572267,1.5625,32.9845191,14.071892,1.5625,37.3573685,12.9001906,1.5625,37.277519,13.5067079,1.5625,37.277519,12.2936733,1.5625,37.043412,11.7284891,1.5625,32.9845191,11.7284891,1.5625,32.7504122,12.2936733,1.5625,32.7504122,13.5067079,1.5625,32.6705627,12.9001906,1.5625,38.136882,12.4068106,0.0,37.277519,12.2936733,1.5625,36.185667,14.929637,1.5625,36.8264656,15.5704356,0.0,37.043412,11.7284891,1.5625,37.855912,11.7284891,0.0,37.043412,14.071892,1.5625,35.2785863,11.7284891,7.5315788,37.043412,11.7284891,1.5625,35.2785863,14.071892,7.5315788,32.9845191,14.071892,9.4375,37.043412,14.071892,1.5625,32.9845191,14.071892,1.5625,35.2785863,14.071892,7.5315788,37.1628027,14.071892,11.4111312,32.9845191,14.071892,15.2906836,39.0470191,14.071892,15.2906836,32.9845191,14.071892,9.4375,32.9845191,11.7284891,1.5625,32.9845191,11.7284891,9.4375,32.9845191,14.071892,1.5625,32.7504122,12.2936733,1.5625,32.9845191,11.7284891,0.0,32.9845191,11.7284891,1.5625,32.7035492,12.4068106,0.0,32.6705627,12.9001906,1.5625,32.6077156,13.1347391,0.0,32.7504122,13.5067079,1.5625,32.7035492,13.8626677,0.0,32.9845191,14.071892,1.5625,32.9845191,14.5409891,0.0,33.3569295,14.5572267,1.5625,33.4314778,15.1234769,0.0,34.0139656,15.5704356,0.0,33.8422641,14.929637,1.5625,34.692287,15.8514055,0.0,34.4074483,15.163744,1.5625,35.4202156,15.9472391,0.0,35.0139656,15.2435935,1.5625,36.1481441,15.8514055,0.0,35.6204829,15.163744,1.5625,36.6710017,11.2431545,1.5625,37.4089534,11.1460013,0.0,35.2785863,11.7284891,7.5315788,32.9845191,11.7284891,1.5625,37.043412,11.7284891,1.5625,32.9845191,11.7284891,9.4375,39.0470191,11.7284891,15.2906836,32.9845191,11.7284891,15.2906836,32.9845191,14.071892,15.2906836,32.9845191,11.7284891,9.4375,32.9845191,11.7284891,15.2906836,32.9845191,14.071892,9.4375,33.3569295,11.2431545,1.5625,33.4314778,11.1460013,0.0,33.3569295,11.2431545,1.5625,33.8422641,10.8707441,1.5625,34.4074483,10.6366372,1.5625,35.0139656,10.5567877,1.5625,35.6204829,10.6366372,1.5625,36.185667,10.8707441,1.5625,36.6710017,11.2431545,1.5625,36.6710017,11.2431545,1.5625,36.185667,10.8707441,1.5625,35.6204829,10.6366372,1.5625,35.0139656,10.5567877,1.5625,34.4074483,10.6366372,1.5625,33.8422641,10.8707441,1.5625,33.3569295,11.2431545,1.5625,36.8264656,10.6990427,0.0,36.185667,10.8707441,1.5625,33.8422641,10.8707441,1.5625,34.0139656,10.6990427,0.0,36.1481441,10.4180727,0.0,35.6204829,10.6366372,1.5625,35.4202156,10.3222391,0.0,35.0139656,10.5567877,1.5625,34.692287,10.4180727,0.0,34.4074483,10.6366372,1.5625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID20.bind();
texcoordArray = new float[] {
-0.2915434f,-3.359823f,-0.2745546f,-3.2580938f,-0.2915434f,-3.2580938f,-0.2711538f,-3.359823f,0.5418752f,-3.2383707f,0.5555791f,-3.137537f,0.5385903f,-3.137537f,0.5622648f,-3.2383707f,-1.1057886f,-3.1730218f,-1.085399f,-3.0712924f,-1.1023878f,-3.0712924f,-1.085399f,-3.1730218f,-3.0831501f,2.0097966f,-3.069672f,2.0306308f,-3.0934923f,1.9826452f,-3.0539763f,2.0437276f,-3.037133f,2.048195f,-3.0202894f,2.0437276f,-3.0045938f,2.0306308f,-2.9911158f,2.0097966f,-2.9807737f,1.9826452f,-3.102211f,1.9170953f,-3.0999937f,1.9510264f,-3.0999937f,1.8831643f,-3.0934923f,1.8515456f,-2.9807737f,1.8515456f,-2.9742723f,1.8831643f,-2.9742723f,1.9510264f,-2.9720547f,1.9170953f,1.3376712f,-2.830298f,1.3484299f,-2.7311273f,1.331441f,-2.7311273f,1.3580608f,-2.830298f,-1.8216964f,-2.6038268f,-1.8453709f,-2.7046604f,-1.8249813f,-2.7046604f,-1.8386852f,-2.6038268f,2.062002f,-2.2045417f,2.0329776f,-2.107565f,2.0416124f,-2.2045417f,2.0499663f,-2.107565f,0.9841907f,-1.6830724f,0.9191126f,-1.3348482f,0.9191126f,-1.6830724f,0.9841907f,-1.3348482f,-2.9807737f,0.527972f,-3.0934923f,0.0874126f,-2.9807737f,0.0874126f,-3.0444818f,0.4213471f,-3.096808f,0.638385f,-2.9807737f,0.8554229f,-3.1491342f,0.8554229f,-0.9841907f,0.527972f,-0.9191126f,0.0874126f,-0.9191126f,0.527972f,-0.9841907f,0.0874126f,0.2745546f,0.0874126f,0.2915434f,-0.0f,0.2915434f,0.0874126f,0.2711538f,-0.0f,-0.5555791f,0.2128533f,-0.5418752f,0.1254227f,-0.5385903f,0.2128533f,-0.5622648f,0.1254227f,-1.3484299f,0.4248007f,-1.3376712f,0.3372337f,-1.331441f,0.4248007f,-1.3580608f,0.3372337f,-2.0499663f,0.6334468f,-2.0416124f,0.5454592f,-2.0329776f,0.6334468f,-2.062002f,0.5454592f,-2.6123798f,0.725473f,-2.6057262f,0.6366125f,-2.595391f,0.725473f,-2.6261158f,0.6366125f,-2.980354f,0.6035513f,-3.0119588f,0.5132661f,-2.9915695f,0.5132661f,-2.9973428f,0.6035513f,-3.1616318f,0.223366f,-3.1932368f,0.1311276f,-3.1728473f,0.1311276f,-3.1786208f,0.223366f,-3.1268709f,-0.389065f,-3.1575956f,-0.4836239f,-3.137206f,-0.4836239f,-3.1438596f,-0.389065f,-2.87844f,-1.1463856f,-2.9074645f,-1.2433624f,-2.8870747f,-1.2433624f,-2.895429f,-1.1463856f,-2.4332693f,-1.9267082f,-2.459889f,-2.025879f,-2.4394994f,-2.025879f,-2.450258f,-1.9267082f,2.6261158f,-1.4693804f,2.595391f,-1.3748214f,2.6057262f,-1.4693804f,2.6123798f,-1.3748214f,3.0444818f,0.4213471f,2.9807737f,0.0874126f,3.0934923f,0.0874126f,2.9807737f,0.527972f,3.1491342f,0.8554229f,2.9807737f,0.8554229f,-0.9841907f,0.8554229f,-0.9191126f,0.8554229f,1.1023878f,0.0874126f,1.085399f,0.0f,1.1057886f,0.0f,1.085399f,0.0874126f,-3.0831501f,1.824394f,-3.069672f,1.8035599f,-3.0539763f,1.790463f,-3.037133f,1.7859958f,-3.0202894f,1.790463f,-3.0045938f,1.8035599f,-2.9911158f,1.824394f,2.9973428f,-0.6620926f,2.9915695f,-0.754331f,3.0119588f,-0.754331f,2.980354f,-0.6620926f,1.8386852f,0.1911398f,1.8249813f,0.1037092f,1.8453709f,0.1037092f,1.8216964f,0.1911398f,3.1786208f,-0.0905834f,3.1728473f,-0.1808686f,3.1932368f,-0.1808686f,3.1616318f,-0.0905834f,3.1438596f,0.2607616f,3.137206f,0.1719011f,3.1575956f,0.1719011f,3.1268709f,0.2607616f,2.895429f,0.3801006f,2.8870747f,0.292113f,2.9074645f,0.292113f,2.87844f,0.3801006f,2.450258f,0.3236889f,2.4394994f,0.2361219f,2.459889f,0.2361219f,2.4332693f,0.3236889f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,4,4,2,5,5,6,2,5,4,4,0,7,3,8,6,9,1,10,6,9,3,8,7,11,25,12,26,13,27,14,26,13,28,15,27,14,28,15,29,16,27,14,29,16,30,17,27,14,30,17,31,18,27,14,31,18,32,19,27,14,33,20,27,14,32,19,34,21,35,22,36,23,36,23,35,22,37,24,27,14,37,24,35,22,38,25,33,20,39,26,33,20,40,27,39,26,41,28,39,26,40,27,42,29,5,30,43,31,5,30,42,29,4,32,44,33,7,34,45,35,7,34,44,33,6,36,42,37,46,38,47,39,46,38,42,37,43,40,48,41,49,42,50,43,49,42,48,41,51,44,52,45,53,46,54,47,53,46,52,45,55,48,55,48,52,45,56,49,56,49,52,45,57,50,56,49,57,50,58,51,59,52,60,53,61,54,60,53,59,52,62,55,63,56,64,57,65,58,64,57,63,56,66,59,67,60,66,61,63,62,66,61,67,60,68,63,69,64,68,65,67,66,68,65,69,64,70,67,71,68,70,69,69,70,70,69,71,68,72,71,73,72,72,73,71,74,72,73,73,72,74,75,73,76,75,77,74,78,75,77,73,76,76,79,76,80,77,81,75,82,77,81,76,80,78,83,78,84,79,85,77,86,79,85,78,84,80,87,80,88,81,89,79,90,81,89,80,88,82,91,82,92,45,93,81,94,45,93,82,92,44,95,47,96,83,97,84,98,83,97,47,96,46,99,85,100,86,101,87,102,86,101,85,100,88,103,88,103,85,100,89,104,88,103,89,104,90,105,91,106,92,54,93,107,92,54,91,106,94,52,95,108,64,109,96,110,64,109,95,108,65,111,104,112,37,24,105,113,105,113,37,24,106,114,106,114,37,24,107,115,107,115,37,24,108,116,108,116,37,24,109,117,109,117,37,24,110,118,38,25,110,118,37,24,83,119,111,120,84,121,111,120,83,119,112,122,113,123,96,124,114,125,96,124,113,123,95,126,112,127,115,128,111,129,115,128,112,127,116,130,116,131,117,132,115,133,117,132,116,131,118,134,118,135,119,136,117,137,119,136,118,135,120,138,120,139,114,140,119,141,114,140,120,139,113,142,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
8,9,10,9,8,11,9,11,12,13,14,15,14,13,16,16,13,17,18,15,11,15,18,19,15,19,20,15,20,21,15,21,22,15,22,23,15,23,24,14,97,12,97,14,98,98,14,99,99,14,100,100,14,101,101,14,102,102,14,103,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 60, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID84(GL2 gl){
double[] positionsArray = {
37.043412,14.071892,1.5625,32.9845191,11.7284891,1.5625,32.9845191,14.071892,1.5625,37.043412,11.7284891,1.5625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID90(GL2 gl){
double[] positionsArray = {
32.7035492,13.8626677,0.0,32.7035492,12.4068106,0.0,32.6077156,13.1347391,0.0,32.9845191,14.5409891,0.0,32.9845191,11.7284891,0.0,33.4314778,15.1234769,0.0,33.4314778,11.1460013,0.0,34.0139656,15.5704356,0.0,34.0139656,10.6990427,0.0,34.692287,15.8514055,0.0,34.692287,10.4180727,0.0,35.4202156,10.3222391,0.0,35.4202156,15.9472391,0.0,36.1481441,15.8514055,0.0,36.1481441,10.4180727,0.0,36.8264656,15.5704356,0.0,36.8264656,10.6990427,0.0,37.4089534,15.1234769,0.0,37.4089534,11.1460013,0.0,37.855912,14.5409891,0.0,37.855912,11.7284891,0.0,38.136882,13.8626677,0.0,38.136882,12.4068106,0.0,38.2327156,13.1347391,0.0,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,11,9,12,11,12,13,11,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID96(GL2 gl){
double[] positionsArray = {
10.7333394,13.7668341,0.0,10.7333394,12.3109769,0.0,10.6375058,13.0389055,0.0,11.0143093,14.4451555,0.0,11.0143093,11.6326555,0.0,11.4612679,15.0276433,0.0,11.4612679,11.0501677,0.0,12.0437558,15.4746019,0.0,12.0437558,10.6032091,0.0,12.7220772,15.7555719,0.0,12.7220772,10.3222391,0.0,13.4500058,10.2264055,0.0,13.4500058,15.8514055,0.0,14.1779343,15.7555719,0.0,14.1779343,10.3222391,0.0,14.8562558,15.4746019,0.0,14.8562558,10.6032091,0.0,15.4387436,15.0276433,0.0,15.4387436,11.0501677,0.0,15.8857022,14.4451555,0.0,15.8857022,11.6326555,0.0,16.1666722,13.7668341,0.0,16.1666722,12.3109769,0.0,16.2625058,13.0389055,0.0,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,11,9,12,11,12,13,11,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID102(GL2 gl){
double[] positionsArray = {
15.0732022,13.9760584,1.5625,11.0143093,11.6326555,1.5625,11.0143093,13.9760584,1.5625,15.0732022,11.6326555,1.5625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID108(GL2 gl){
double[] positionsArray = {
39.0470191,11.7284891,15.2906836,32.9845191,14.071892,15.2906836,32.9845191,11.7284891,15.2906836,39.0470191,14.071892,15.2906836,35.2785863,14.071892,7.5315788,39.0470191,11.7284891,15.2906836,35.2785863,11.7284891,7.5315788,39.0470191,14.071892,15.2906836,37.1628027,14.071892,11.4111312,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,4,5,6,5,4,7,7,4,8,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 15, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID114(GL2 gl){
double[] positionsArray = {
18.3292984,4.5586715,14.3593759,11.0143093,4.4360625,15.2906836,11.0143093,2.0926596,15.2906836,18.3292984,4.5586715,14.3593759,11.0143093,2.0926596,15.2906836,17.0768093,2.0926596,15.2906836,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,3,4,5,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID120(GL2 gl){
double[] positionsArray = {
33.7950446,9.8925825,19.2151182,29.9364849,12.5053816,14.1396674,32.2582941,13.0235635,12.4012025,39.0143093,10.2996258,19.6206682,32.2582941,13.0235635,12.4012025,37.1628027,14.071892,11.4111312,33.7950446,9.8925825,19.2151182,33.7950446,9.8925825,19.2151182,31.9582799,10.3784437,18.541457,29.9364849,12.5053816,14.1396674,37.1628027,14.071892,11.4111312,38.9255934,11.2610945,19.5482769,39.0143093,10.2996258,19.6206682,38.8054293,12.1881472,19.295954,38.6582452,13.0466214,18.8729978,38.4894648,13.8048815,18.2949945,38.305308,14.4349852,17.5832442,37.2650167,14.6443593,12.1853188,38.112561,14.9137126,16.7639752,37.3969761,15.0577347,13.0509056,37.9183268,15.2234222,15.8673783,37.5538181,15.296785,13.975994,37.7297629,15.352701,14.9264938,31.9582799,10.3784437,18.541457,26.090155,11.6509818,15.3923165,29.9364849,12.5053816,14.1396674,26.7169115,10.9916311,16.7568713,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,3,4,5,4,3,6,7,8,9,10,11,12,11,10,13,13,10,14,14,10,15,15,10,16,16,10,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,23,24,25,24,23,26,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 51, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID126(GL2 gl){
double[] positionsArray = {
31.1840697,12.7101065,17.449031,33.0465935,13.7222746,16.844063,30.9735952,12.98003,17.0097553,26.4769063,11.7144466,16.4182192,30.9735952,12.98003,17.0097553,26.4116592,11.7981228,16.2820438,31.1840697,12.7101065,17.449031,33.2065735,13.3249308,17.5240563,32.8853791,13.9793336,16.0998876,26.6868801,11.1596852,16.7448387,26.090155,11.6509818,15.3923165,26.7169115,10.9916311,16.7568713,26.6462032,11.3217239,16.7028986,26.5963796,11.4717758,16.6325966,26.5392455,11.6043113,16.5365234,26.4769063,11.7144466,16.4182192,26.1247556,11.7510428,15.5209987,26.4116592,11.7981228,16.2820438,26.1694254,11.8232963,15.6648729,26.3459087,11.8522567,16.1330152,26.2225183,11.8650797,15.8186372,26.2820776,11.8748532,15.9766253,26.5392455,11.6043113,16.5365234,31.3851639,12.3548316,17.8306573,30.7614966,13.1546554,16.529018,26.3459087,11.8522567,16.1330152,33.0465935,13.7222746,16.844063,38.305308,14.4349852,17.5832442,38.112561,14.9137126,16.7639752,33.2065735,13.3249308,17.5240563,31.3851639,12.3548316,17.8306573,32.8853791,13.9793336,16.0998876,37.9183268,15.2234222,15.8673783,30.7614966,13.1546554,16.529018,26.7169115,10.9916311,16.7568713,31.8614045,10.9205539,18.5026422,26.6868801,11.1596852,16.7448387,31.9582799,10.3784437,18.541457,31.7301886,11.4432592,18.3673517,26.6462032,11.3217239,16.7028986,31.5694675,11.9272975,18.1405711,26.5963796,11.4717758,16.6325966,30.55559,13.2275474,16.0245346,26.2820776,11.8748532,15.9766253,26.2225183,11.8650797,15.8186372,30.363463,13.1960199,15.5148956,26.1694254,11.8232963,15.6648729,30.1921959,13.0612348,15.0188817,26.1247556,11.7510428,15.5209987,30.0480998,12.8281591,14.5547714,26.090155,11.6509818,15.3923165,29.9364849,12.5053816,14.1396674,33.3594237,12.8019448,18.1148091,38.4894648,13.8048815,18.2949945,33.3594237,12.8019448,18.1148091,32.728871,14.086635,15.3189535,37.7297629,15.352701,14.9264938,32.728871,14.086635,15.3189535,33.7214104,10.6906015,19.1550335,31.8614045,10.9205539,18.5026422,31.9582799,10.3784437,18.541457,33.6216742,11.4600553,18.9456054,31.7301886,11.4432592,18.3673517,33.4995113,12.1725888,18.5945518,31.5694675,11.9272975,18.1405711,30.55559,13.2275474,16.0245346,30.363463,13.1960199,15.5148956,32.5828369,14.0402247,14.5300387,30.1921959,13.0612348,15.0188817,32.4526581,13.8418129,13.7622153,30.0480998,12.8281591,14.5547714,32.3431318,13.4987113,13.0437782,29.9364849,12.5053816,14.1396674,33.4995113,12.1725888,18.5945518,38.6582452,13.0466214,18.8729978,32.5828369,14.0402247,14.5300387,37.5538181,15.296785,13.975994,33.7950446,9.8925825,19.2151182,32.2582941,13.0235635,12.4012025,33.6216742,11.4600553,18.9456054,38.8054293,12.1881472,19.295954,32.4526581,13.8418129,13.7622153,37.3969761,15.0577347,13.0509056,33.7950446,9.8925825,19.2151182,38.9255934,11.2610945,19.5482769,33.7214104,10.6906015,19.1550335,39.0143093,10.2996258,19.6206682,32.3431318,13.4987113,13.0437782,37.2650167,14.6443593,12.1853188,32.2582941,13.0235635,12.4012025,37.1628027,14.071892,11.4111312,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID20.bind();
texcoordArray = new float[] {
-3.0789576f,0.7057959f,-3.1365497f,0.6639807f,-3.075493f,0.6754333f,-2.942952f,0.9203973f,-3.0721004f,0.9616825f,-2.9421f,0.9108931f,-3.0748487f,0.992341f,-3.1384318f,0.848211f,-3.137655f,0.8032783f,-3.079742f,0.8432535f,-3.0765338f,0.8822395f,-3.1376545f,0.8722715f,-3.135602f,0.8275021f,-0.4741394f,2.9665146f,-0.4901049f,2.8855164f,-0.4694002f,2.967235f,-0.4787576f,2.964003f,-0.4830845f,2.9597929f,-0.4869608f,2.9540393f,-0.4902436f,2.9469545f,-0.4927091f,2.8932228f,-0.4928119f,2.9387994f,-0.4945078f,2.901839f,-0.4945711f,2.9298744f,-0.495435f,2.9110472f,-0.4954563f,2.9205086f,-2.925295f,1.164812f,-3.0551064f,1.239451f,-2.925028f,1.1551352f,-3.0559678f,1.2706665f,-2.9457572f,0.8468875f,-3.0722494f,0.8622508f,-2.9445143f,0.837617f,-3.0762591f,0.8921556f,-3.1236951f,0.485744f,-3.2705152f,0.5344378f,-3.2682128f,0.4804681f,-3.125606f,0.5305387f,-3.137822f,0.7691215f,-3.0791585f,0.7630296f,-3.0812173f,0.7940169f,-3.1219804f,0.6289591f,-3.2692733f,0.66877f,-3.2659347f,0.6150206f,-3.1247513f,0.6735711f,-3.0747793f,0.7714137f,-3.1334898f,0.7151379f,-3.0704677f,0.7416799f,-0.9890272f,5.597154f,-0.9916787f,5.901057f,-0.9936647f,5.5950594f,-0.9767188f,5.9078135f,-2.1113763f,4.2086983f,-2.1838787f,4.4670844f,-2.1148245f,4.202019f,-2.1727555f,4.4886293f,-2.664706f,2.6922598f,-2.7758f,2.8749926f,-2.6665542f,2.683324f,-2.7698386f,2.9038172f,-2.862092f,1.70013f,-2.987967f,1.8201522f,-2.8626888f,1.6905054f,-2.9860415f,1.8511995f,-2.9445336f,0.8591099f,-3.067518f,0.8528364f,-2.9430363f,0.8500658f,-3.0723484f,0.882011f,-2.9413073f,0.8797168f,-3.0674481f,0.891253f,-3.0620975f,0.8626986f,-2.942966f,0.8885687f,-2.9397464f,0.8646867f,-3.0622964f,0.856204f,-3.0566013f,0.8281496f,-2.9415119f,0.8733835f,-2.936054f,0.7435617f,-3.0546174f,0.713675f,-3.0486186f,0.6860506f,-2.9379134f,0.7521252f,-2.9230773f,0.4481129f,-3.036885f,0.3933542f,-3.0304549f,0.3662147f,-2.9250708f,0.4565262f,-3.1274512f,0.3931759f,-3.271456f,0.3527535f,-3.126551f,0.3482526f,-3.2725406f,0.406878f,-3.1349115f,0.9385095f,-3.1359384f,0.8935972f,-3.0791674f,0.9169067f,-3.1209984f,0.7478838f,-3.2685056f,0.7790589f,-3.2642453f,0.7255745f,-3.1245344f,0.7922759f,-3.0720427f,0.9267768f,-3.1352718f,0.9023153f,-3.1321406f,0.8578f,-0.9682686f,6.014679f,-0.9733051f,5.9041243f,-0.9583255f,5.9107018f,-2.3106663f,4.3732367f,-2.283534f,4.277022f,-2.2728927f,4.299533f,-2.9515574f,2.3774066f,-2.9046767f,2.3176346f,-2.900139f,2.347493f,-3.112462f,1.2328705f,-3.0575101f,1.2041905f,-3.057147f,1.2354707f,-3.0718975f,0.8661196f,-3.131728f,0.7962051f,-3.0670273f,0.8369718f,-3.06567f,0.910224f,-3.1305523f,0.8706464f,-3.0603623f,0.8816372f,-3.0496387f,0.8004012f,-3.11551f,0.7449619f,-3.043785f,0.7724797f,-3.0119188f,0.5063776f,-3.0775154f,0.4330332f,-3.0053442f,0.4792901f,-2.9296067f,-0.0240069f,-2.9927373f,-0.1181545f,-2.9219909f,-0.0498714f,-3.1305218f,0.3064423f,-3.2758932f,0.2783725f,-3.1308868f,0.2614884f,-3.2754536f,0.3325338f,-3.1203177f,0.8179208f,-3.2678258f,0.8401016f,-3.2627077f,0.7869233f,-3.1245656f,0.8620588f,-1.2183692f,5.822729f,-1.2401316f,5.8127575f,-1.2257138f,5.71093f,-2.4697585f,3.9974062f,-2.4855301f,3.9655952f,-2.4449112f,3.8983114f,-2.9764178f,2.2429578f,-2.9850385f,2.2014873f,-2.9332037f,2.1746478f,-3.107589f,1.3121387f,-3.111471f,1.2678641f,-3.0561533f,1.2702416f,-3.059795f,0.8704255f,-3.129986f,0.8594632f,-3.1257365f,0.8153259f,-3.0407016f,0.7255515f,-3.112407f,0.697826f,-3.1068585f,0.6542777f,-2.9974542f,0.3970027f,-3.0695236f,0.3501047f,-3.06226f,0.3075926f,-2.907876f,-0.1498675f,-2.9783745f,-0.2191852f,-2.9688334f,-0.2598296f,-3.1334798f,0.3621965f,-3.2800667f,0.3529407f,-3.1356282f,0.3174453f,-3.2774785f,0.4068577f,-3.1193018f,0.8157341f,-3.2666097f,0.8279398f,-3.260643f,0.7751217f,-3.124254f,0.8595732f,-2.5704155f,3.678676f,-2.689894f,3.8537772f,-2.5863016f,3.6470964f,-2.6707542f,3.8918245f,-3.116799f,0.8555507f,-3.263313f,0.8849063f,-3.1221938f,0.8119242f,-3.256813f,0.9374685f,-3.1167011f,0.7158762f,-3.2635765f,0.7163073f,-3.2566962f,0.663942f,-3.1224117f,0.7593394f,-3.109642f,0.4855409f,-3.2557342f,0.4711157f,-3.2477582f,0.4193851f,-3.1162622f,0.5284774f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,3,3,4,4,5,5,4,4,3,3,6,6,7,7,1,8,0,9,2,10,1,11,8,12,9,13,10,14,11,15,10,14,9,13,12,16,10,14,12,16,13,17,10,14,13,17,14,18,10,14,14,18,15,19,10,14,15,19,16,20,16,20,15,19,17,21,16,20,17,21,18,22,18,22,17,21,19,23,18,22,19,23,20,24,20,24,19,23,21,25,22,26,6,27,3,28,6,27,22,26,23,29,5,30,24,31,25,32,24,31,5,30,4,33,26,34,27,35,28,36,27,35,26,34,29,37,7,38,0,39,30,40,31,41,28,42,32,43,28,42,31,41,26,44,2,45,8,46,33,47,34,48,35,49,36,50,35,49,34,48,37,51,36,52,38,53,39,54,38,53,36,52,35,55,39,56,40,57,41,58,40,57,39,56,38,59,41,60,23,61,22,62,23,61,41,60,40,63,25,64,42,65,43,66,42,65,25,64,24,67,44,68,42,69,45,70,42,69,44,68,43,71,46,72,45,73,47,74,45,73,46,72,44,75,48,76,47,77,49,78,47,77,48,76,46,79,50,80,49,81,51,82,49,81,50,80,48,83,52,84,27,85,29,86,27,85,52,84,53,87,54,88,7,89,30,90,55,91,32,92,56,93,32,92,55,91,31,94,33,95,8,96,57,97,58,98,59,99,60,100,61,101,62,102,59,103,63,104,64,105,62,106,54,107,30,108,64,109,33,110,57,111,65,112,65,113,57,114,66,115,66,116,67,117,68,118,68,119,69,120,70,121,70,122,71,123,72,124,73,125,53,126,52,127,53,126,73,125,74,128,75,129,56,130,76,131,56,130,75,129,55,132,77,133,58,134,60,135,58,136,61,137,59,138,61,139,63,140,62,141,63,142,54,143,64,144,66,145,57,146,67,147,68,148,67,149,69,150,70,151,69,152,71,153,72,154,71,155,78,156,79,157,74,158,73,159,74,158,79,157,80,160,81,161,76,162,82,163,76,162,81,161,75,164,83,165,84,166,85,167,84,166,83,165,86,168,85,169,80,170,79,171,80,170,85,169,84,172,87,173,82,174,88,175,82,174,87,173,81,176,89,177,88,178,90,179,88,178,89,177,87,180,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID134(GL2 gl){
double[] positionsArray = {
18.7643093,11.6326555,15.2906836,11.0143093,13.9760584,15.2906836,11.0143093,11.6326555,15.2906836,17.0768093,13.9760584,15.2906836,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID140(GL2 gl){
double[] positionsArray = {
32.9845191,2.1884932,12.3534644,37.1628027,2.1884932,11.4111312,37.3299451,1.5962042,12.1522367,33.0720297,2.6177146,13.1675266,32.9845191,2.9456164,12.552409,37.519029,1.1610905,12.9906302,33.0720297,2.6177146,13.1675266,29.5759507,3.3300746,14.7487273,32.9845191,2.9456164,12.552409,29.6307673,3.1246769,15.1340369,33.1710281,2.3768279,13.8633932,33.1710281,2.3768279,13.8633932,29.6927799,2.9737855,15.5699278,37.722994,0.8993991,13.8950064,33.2778178,2.2319509,14.6140254,29.7596729,2.8830346,16.0401238,33.2778178,2.2319509,14.6140254,33.3884113,2.1884932,15.3913949,37.9342242,0.8209015,14.8315961,29.8289487,2.8558127,16.527068,29.7596729,2.8830346,16.0401238,33.3884113,2.1884932,15.3913949,33.3884113,2.1884932,15.3913949,29.8289487,2.8558127,16.527068,33.3884113,2.1884932,15.3913949,32.4516479,2.2480776,16.1664749,38.1448323,0.9285288,15.7654274,32.4516479,2.2480776,16.1664749,31.0361063,2.8931363,16.9648937,29.8289487,2.8558127,16.527068,32.4516479,2.2480776,16.1664749,38.3469543,1.2182621,16.6616314,31.0361063,2.8931363,16.9648937,27.6218489,4.1981064,16.8540452,29.8289487,2.8558127,16.527068,31.0361063,2.8931363,16.9648937,32.4516479,2.2480776,16.1664749,32.8008695,2.4678277,16.9103242,32.8008695,2.4678277,16.9103242,33.1238747,2.3949712,16.895845,31.1355392,3.0438496,17.3469704,27.6218489,4.1981064,16.8540452,31.0361063,2.8931363,16.9648937,29.8289487,2.8558127,16.527068,27.6218489,4.1981064,16.8540452,27.5527771,3.7257927,16.391887,31.1355392,3.0438496,17.3469704,38.5330429,1.679283,17.4867441,27.7285946,4.4618694,16.9106607,27.6218489,4.1981064,16.8540452,27.6065714,3.8907415,16.164648,27.5527771,3.7257927,16.391887,33.1223891,2.817492,17.5951678,33.1223891,2.817492,17.5951678,27.7285946,4.4618694,16.9106607,27.6595409,4.0813664,15.9656222,31.2270846,3.2836632,17.6987389,31.2270846,3.2836632,17.6987389,38.6961498,2.2943772,18.2099562,27.7097079,4.2905496,15.8022411,27.8251724,4.7291428,16.9438712,33.4042014,3.2840141,18.1954338,33.4042014,3.2840141,18.1954338,27.8251724,4.7291428,16.9438712,31.3073242,3.6036224,18.0070644,31.3073242,3.6036224,18.0070644,33.6357835,3.8499742,18.6887085,27.7551989,4.5104802,15.6806054,27.9079761,4.9899468,16.9524368,33.6357835,3.8499742,18.6887085,38.8301845,3.0405771,18.8042631,27.9079761,4.9899468,16.9524368,31.373262,3.9917801,18.260434,31.373262,3.9917801,18.260434,33.8084882,4.4942396,19.0565733,28.0495839,5.7847906,16.7476646,27.9739138,5.234543,16.9360377,31.4224357,4.4336427,18.449387,38.9301423,3.8900199,19.2474737,33.8084882,4.4942396,19.0565733,28.0205235,5.4537983,16.895286,31.4224357,4.4336427,18.449387,33.9158669,5.1927536,19.2852921,31.4530093,4.9127112,18.5668679,28.0460648,5.6395259,16.8317037,38.9922908,4.8109878,19.5230385,33.9158669,5.1927536,19.2852921,31.4530093,4.9127112,18.5668679,33.95391,5.919434,19.3663247,31.4638413,5.4110972,18.6084902,28.0495839,5.7847906,16.7476646,39.0143093,5.7690922,19.6206682,33.95391,5.919434,19.3663247,31.4638413,5.4110972,18.6084902,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID20.bind();
texcoordArray = new float[] {
2.8272827f,-0.8348789f,2.9416468f,-0.9007626f,2.9490025f,-0.8489478f,2.8911839f,1.5933242f,2.8900874f,1.5416545f,3.0118423f,1.5288823f,-0.5771568f,1.4451067f,-0.5561422f,1.4338908f,-0.567976f,1.4797854f,2.6027071f,-0.5628943f,2.7237382f,-0.6244347f,2.7326438f,-0.5736166f,2.4955876f,-0.7487026f,2.3983793f,-0.652167f,2.4898336f,-0.7862568f,2.4019835f,-0.628643f,2.6156037f,-0.1199004f,2.61085f,-0.1603491f,2.7407956f,-0.1706316f,2.6440556f,-0.1067654f,2.54408f,-0.0328203f,2.6394024f,-0.1472614f,2.5469947f,-0.0074536f,2.7715414f,0.1332442f,2.638638f,0.1314385f,2.7639172f,0.0815872f,2.7420733f,0.3946279f,2.640486f,0.4487266f,2.7382236f,0.3521463f,2.6428976f,0.4753371f,2.6420224f,0.379023f,2.637962f,0.336621f,2.7708657f,0.3384068f,2.70723f,0.8297115f,2.8065848f,0.7498998f,2.8098311f,0.7934053f,2.8065145f,0.7846695f,2.6713955f,0.7724963f,2.8002687f,0.732267f,2.7092636f,0.8569634f,2.70723f,0.8297115f,2.8098311f,0.7934053f,2.6745086f,0.8239392f,2.6712193f,0.7804467f,2.8063383f,0.7926194f,2.623999f,0.2571227f,2.7242956f,0.19185f,2.6987262f,0.2363976f,2.842881f,1.3584528f,2.706247f,1.337222f,2.8380501f,1.3054467f,2.7216325f,0.3111832f,2.747283f,0.2668252f,2.88391f,0.2882312f,2.7839818f,1.887078f,2.75104f,1.8594872f,2.8256235f,1.8367633f,2.9390922f,1.7303776f,2.7729702f,1.7009162f,2.9352155f,1.6770544f,2.433213f,3.3003182f,2.3317688f,3.290857f,2.4027398f,3.2629483f,2.702986f,1.8470165f,2.7452998f,1.7990307f,2.7533946f,1.8437368f,2.9367616f,1.7744062f,2.7789042f,1.7893137f,2.7706494f,1.7447264f,2.788098f,1.788444f,2.4705162f,2.330805f,2.3680036f,2.300419f,2.4695f,2.3072524f,2.3669403f,3.204332f,2.2957723f,3.2301245f,2.2993724f,3.1936688f,2.7067041f,1.954576f,2.7049377f,1.9312038f,2.7553453f,1.9278657f,2.9505615f,2.111611f,2.7993474f,2.0731952f,2.947982f,2.05797f,2.790155f,2.0741389f,1.2134005f,5.6179585f,1.1251649f,5.5101547f,1.1292508f,5.496166f,-1.3042227f,0.5490914f,-1.2957964f,0.5104167f,-1.2910013f,0.5231647f,2.808207f,2.0887225f,2.7528224f,2.0726092f,2.8012345f,2.0442615f,2.7969913f,2.1189885f,2.7901216f,2.0744627f,2.950528f,2.1119392f,-1.7705913f,0.5195889f,-1.7601178f,0.4665035f,-1.7626905f,0.5164087f,2.2840934f,3.1208994f,2.1828108f,3.066447f,2.2849152f,3.0965939f,-1.2652317f,0.5811421f,-1.2622666f,0.5313253f,-1.2567852f,0.5424854f,2.7338102f,2.2886121f,2.7326624f,2.2643602f,2.7879734f,2.2814717f,2.9586344f,2.4116175f,2.8038905f,2.3658526f,2.9574144f,2.3577816f,-1.3242397f,0.8543691f,-1.3194833f,0.7923502f,-1.31351f,0.8014918f,-0.2114339f,6.1138268f,-0.2660365f,5.933705f,-0.2591328f,5.9257803f,2.8019884f,2.4141967f,2.7426858f,2.3776612f,2.796833f,2.3700428f,2.962286f,2.381429f,2.812777f,2.3803623f,2.8074985f,2.3362675f,-1.6563947f,0.7665995f,-1.6438549f,0.702688f,-1.6485027f,0.7647403f,2.0131752f,3.9101808f,1.9159358f,3.82604f,2.0164182f,3.88578f,2.7350454f,2.7464364f,2.6764073f,2.7310038f,2.6764138f,2.7057436f,2.9610772f,2.56476f,2.8149467f,2.6069045f,2.8115687f,2.5634816f,-1.3093071f,1.0399472f,-1.3029608f,0.9692641f,-1.2967242f,0.97607f,-1.2630192f,5.5762367f,-1.2819805f,5.365992f,-1.2744251f,5.3642845f,2.7170558f,2.9251633f,2.6563404f,2.8647249f,2.7148924f,2.8814268f,2.9677436f,2.6107943f,2.8218079f,2.6003158f,2.9678466f,2.5569026f,-1.5569719f,0.9504751f,-1.5429971f,0.8793237f,-1.5493728f,0.9499959f,1.6294025f,4.6686115f,1.5408001f,4.54946f,1.6355498f,4.6455307f,2.568096f,3.4369648f,2.5078166f,3.3932345f,2.5098486f,3.3673632f,2.9530234f,2.75175f,2.808396f,2.780927f,2.8071456f,2.738387f,-1.2731313f,1.1889507f,-1.2368377f,1.129188f,-1.2507118f,1.2004193f,-1.8887844f,4.8064785f,-1.8797559f,4.5916333f,-1.8728307f,4.5942936f,2.319368f,4.1462827f,2.2574842f,4.114085f,2.2620375f,4.0886645f,2.9584153f,2.7832f,2.8155606f,2.7600346f,2.9601147f,2.729417f,2.4013407f,3.9335718f,2.3422656f,3.864137f,2.404719f,3.8915045f,-2.4227462f,3.753201f,-2.394216f,3.5424874f,-2.3887131f,3.5487776f,0.9880172f,5.3512664f,0.9130465f,5.1956153f,0.9975944f,5.332342f,2.9007528f,3.024698f,2.7569158f,3.0315497f,2.758468f,2.9901116f,1.5086272f,5.483973f,1.4557333f,5.3984776f,1.4649367f,5.377967f,-2.6831322f,2.968127f,-2.634577f,2.771017f,-2.6306484f,2.7787642f,2.8989084f,3.065096f,2.7592287f,3.0191636f,2.90306f,3.011857f,1.7406955f,5.1989765f,1.6950738f,5.087629f,1.7514601f,5.163528f,0.3582523f,5.739701f,0.3058633f,5.549265f,0.3703931f,5.726807f,2.4797618f,4.272357f,2.3410263f,4.1998224f,2.3491995f,4.162317f,0.0816072f,6.2859354f,0.0577963f,6.151402f,0.0710673f,6.1431284f,-2.8591504f,2.2382848f,-2.793259f,2.0611653f,-2.790971f,2.0693474f,2.4305193f,4.403903f,2.3043437f,4.278161f,2.4424195f,4.355637f,0.2491653f,6.2763996f,0.2403062f,6.1291127f,0.2679353f,6.2606506f,-0.3606306f,5.8025837f,-0.3830839f,5.58878f,-0.3469429f,5.7978015f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,3,3,0,4,2,5,4,6,0,7,3,8,3,9,2,10,5,11,6,12,7,13,8,14,7,13,6,12,9,15,10,16,3,17,5,18,11,19,9,20,6,21,9,20,11,19,12,22,13,23,10,24,5,25,14,26,12,27,11,28,12,27,14,26,15,29,16,30,10,31,13,32,15,33,14,34,17,35,18,36,16,37,13,38,19,39,20,40,21,41,22,42,16,43,18,44,23,45,24,46,25,47,26,48,22,49,18,50,27,51,22,52,26,53,28,54,29,55,30,56,31,57,27,58,26,59,32,60,33,61,34,62,35,63,36,64,37,65,31,66,38,67,27,68,38,67,31,66,39,69,40,70,41,71,42,72,43,73,44,74,45,75,46,76,35,77,37,78,47,79,39,80,31,81,39,80,47,79,38,82,40,83,48,84,41,85,49,86,50,87,51,88,52,89,46,90,37,91,53,92,38,93,47,94,54,95,55,96,49,97,56,98,48,99,40,100,49,101,55,102,50,103,57,104,46,105,52,106,58,107,53,108,47,109,54,110,59,111,55,112,56,113,60,114,48,115,61,116,57,117,52,118,58,119,62,120,53,121,63,122,59,123,54,124,64,125,60,126,56,127,61,128,65,129,57,130,58,131,66,132,62,133,63,134,67,135,59,136,64,137,68,138,60,139,69,140,65,141,61,142,70,143,66,144,58,145,71,146,67,147,63,148,72,149,68,150,64,151,69,152,73,153,65,154,70,155,74,156,66,157,75,158,67,159,71,160,72,161,76,162,68,163,69,164,77,165,73,166,78,167,74,168,70,169,79,170,77,171,69,172,72,173,80,174,76,175,81,176,80,177,72,178,78,179,82,180,74,181,79,182,83,183,77,184,81,185,84,186,80,187,85,188,82,189,78,190,86,191,83,192,79,193,87,194,84,195,81,196,85,197,88,198,82,199,86,200,89,201,83,202,87,203,90,204,84,205,91,206,88,207,85,208,92,209,89,210,86,211,93,212,90,213,87,214,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID148(GL2 gl){
double[] positionsArray = {
29.8289487,2.8558127,16.527068,27.6065714,3.8907415,16.164648,29.7596729,2.8830346,16.0401238,29.7596729,2.8830346,16.0401238,27.6065714,3.8907415,16.164648,29.8289487,2.8558127,16.527068,27.5527771,3.7257927,16.391887,27.5527771,3.7257927,16.391887,27.6595409,4.0813664,15.9656222,27.6595409,4.0813664,15.9656222,29.6927799,2.9737855,15.5699278,29.6927799,2.9737855,15.5699278,27.7097079,4.2905496,15.8022411,27.7097079,4.2905496,15.8022411,29.6307673,3.1246769,15.1340369,29.6307673,3.1246769,15.1340369,27.7551989,4.5104802,15.6806054,27.7551989,4.5104802,15.6806054,29.5759507,3.3300746,14.7487273,29.5759507,3.3300746,14.7487273,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID20.bind();
texcoordArray = new float[] {
2.336112f,0.9600137f,2.268031f,0.9397375f,2.334049f,0.9327708f,2.530452f,-1.1666836f,2.4628417f,-1.1761982f,2.462806f,-1.1921926f,2.236783f,-2.09463f,2.1708503f,-2.0849216f,2.1696641f,-2.1004386f,2.1834798f,0.4987598f,2.1163313f,0.494572f,2.1806211f,0.4723296f,1.7715344f,-3.0896385f,1.7085484f,-3.0554602f,1.7058651f,-3.0695722f,1.923699f,-0.017469f,1.98599f,-0.0556172f,1.9897923f,-0.0307319f,1.1059663f,-3.947361f,1.0487821f,-3.8846605f,1.044515f,-3.896074f,1.6831777f,-0.5969896f,1.7428951f,-0.6515975f,1.7477659f,-0.6290184f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,3,2,4,1,5,0,0,3,6,4,1,5,4,5,7,4,5,3,2,6,1,7,8,8,9,8,4,7,3,6,2,9,8,10,10,11,11,11,9,10,3,9,10,12,8,13,12,14,13,14,9,13,11,12,12,15,14,16,10,17,11,17,15,16,13,15,14,18,12,19,16,20,17,20,13,19,15,18,16,21,18,22,14,23,15,23,19,22,17,21,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID156(GL2 gl){
double[] positionsArray = {
39.0143093,8.9656667,11.8149961,9.5768093,9.3297458,13.0470079,9.5768093,8.7049005,12.7881886,39.0143093,9.8335073,12.1744674,39.0143093,9.8335073,12.1744674,39.0143093,8.9656667,11.8149961,9.5768093,9.3297458,13.0470079,9.5768093,8.7049005,12.7881886,39.0143093,8.034359,11.6923871,9.5768093,8.034359,12.6999101,39.0143093,8.034359,11.6923871,9.5768093,8.034359,12.6999101,9.5768093,9.5076745,13.1835375,9.5768093,9.5076745,13.1835375,39.0143093,7.1030514,11.8149961,9.5768093,7.3638175,12.7881886,39.0143093,7.1030514,11.8149961,9.5768093,7.3638175,12.7881886,11.0143093,10.0806306,12.3640918,11.0143093,10.0806306,12.3640918,39.0143093,6.2352108,12.1744674,9.5768093,6.7389723,13.0470079,39.0143093,6.2352108,12.1744674,9.5768093,6.7389723,13.0470079,39.0143093,10.0806306,12.3640918,39.0143093,10.0806306,12.3640918,11.0143093,5.9880875,12.3640918,11.0143093,5.9880875,12.3640918,9.5768093,6.5610435,13.1835375,9.5768093,6.5610435,13.1835375,39.0143093,5.9880875,12.3640918,39.0143093,5.9880875,12.3640918,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID20.bind();
texcoordArray = new float[] {
3.2103252f,1.2973486f,2.3969107f,1.4768543f,2.3953779f,1.439144f,3.2124538f,1.349724f,3.2523887f,0.0844504f,2.465871f,0.5392676f,2.4611857f,0.5026272f,3.258896f,0.1353398f,3.1915703f,1.5170419f,2.3748312f,1.6096832f,2.374556f,1.5971487f,-2.848009f,-3.0195336f,-2.0502987f,-2.652246f,-2.0549839f,-2.6156058f,-2.8415017f,-3.070423f,-2.318737f,-0.4522587f,-3.1360385f,-0.521926f,-2.3584354f,-0.5088341f,-3.0682154f,-1.6759996f,-2.2511394f,-1.5865797f,-2.2526722f,-1.5488694f,-3.0660868f,-1.7283751f,3.1482258f,1.816871f,2.3706436f,1.816871f,3.1482258f,1.7994449f,3.160449f,1.5300479f,2.3432887f,1.6038553f,2.3828597f,1.5460881f,-0.9907136f,-2.472556f,-0.9487228f,-2.4221966f,-0.9524395f,-2.4121287f,-3.1482258f,-0.8104987f,-2.3706436f,-0.7930726f,-3.1482258f,-0.7930726f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,4,3,5,0,6,1,7,2,6,1,5,0,8,4,2,5,9,6,2,5,8,4,0,7,5,7,10,4,7,5,11,6,7,5,10,4,3,8,12,9,1,10,6,10,13,9,4,8,14,11,9,12,15,13,9,12,14,11,8,14,10,14,16,11,11,12,17,13,11,12,16,11,12,15,3,16,18,17,19,17,4,16,13,15,20,18,15,19,21,20,15,19,20,18,14,21,16,21,22,18,17,19,23,20,17,19,22,18,24,22,19,23,3,24,4,24,18,23,25,22,20,25,21,26,26,27,27,27,23,26,22,25,26,28,21,29,28,30,29,30,23,29,27,28,20,31,26,32,30,33,31,33,27,32,22,31,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID164(GL2 gl){
double[] positionsArray = {
0.2077398,7.3780586,7.1067905,8.8002074,8.4831565,15.5008421,0.2707318,7.3698365,7.0443374,8.7372154,8.4913786,15.5632952,8.7372154,8.4913786,15.5632952,9.5768093,8.5593959,15.3488468,8.8002074,8.4831565,15.5008421,8.861053,8.4523551,15.4435266,0.3315774,7.3390352,6.9870219,0.1468942,7.3631412,7.170125,8.6763698,8.4764611,15.6266297,9.5768093,8.5444885,15.4620801,9.5768093,8.5444885,15.2356134,8.861053,8.4523551,15.4435266,8.9156056,8.4010736,15.3952545,0.3861301,7.2877536,6.9387498,8.6763698,8.4764611,15.6266297,0.0923416,7.3261007,7.2300249,8.6218171,8.4394207,15.6865296,9.5768093,8.500782,15.1300968,8.9156056,8.4010736,15.3952545,8.9601477,8.3328066,15.3593156,0.4306721,7.2194866,6.9028109,8.6218171,8.4394207,15.6865296,0.0477995,7.2694615,7.282408,8.5772751,8.3827815,15.7389127,9.5768093,8.4312552,15.0394876,8.9601477,8.3328066,15.3593156,0.4621681,7.1388865,6.8816544,8.9916437,8.2522065,15.3381591,9.5768093,8.500782,15.5675968,8.5772751,8.3827815,15.7389127,8.5457791,8.3104035,15.7802092,0.0163035,7.1970835,7.3237045,9.5768093,8.3406459,14.9699607,8.9916437,8.2522065,15.3381591,0.4784717,7.051446,6.8767219,9.0079472,8.1647659,15.3332266,9.5768093,8.4312552,15.658206,9.5768093,8.3406459,15.7277329,8.5457791,8.3104035,15.7802092,8.5294755,8.227219,15.8076049,0.0,7.113899,7.3511002,9.5768093,8.2351293,14.9262542,9.0079472,8.1647659,15.3332266,9.0079472,8.0764439,15.3448544,0.4784717,6.963124,6.8883497,9.5768093,8.2351293,15.7714393,8.5294755,8.227219,15.8076049,8.5294755,8.138897,15.8192327,0.0,7.025577,7.362728,9.5768093,8.1218959,14.9113468,9.0079472,8.0764439,15.3448544,9.5768093,8.0086626,14.9262542,8.9916437,7.9932595,15.3722501,0.4621681,6.8799395,6.9157454,9.5768093,8.1218959,15.7863468,8.5294755,8.138897,15.8192327,0.0163035,6.9381365,7.3577956,8.5457791,8.0514565,15.8143003,8.9916437,7.9932595,15.3722501,8.9601477,7.9208814,15.4135466,0.4306721,6.8075614,6.9570419,9.5768093,8.0086626,15.7714393,8.5457791,8.0514565,15.8143003,0.0477995,6.8575364,7.336639,8.5772751,7.9708563,15.7931437,9.5768093,7.9031459,14.9699607,8.9601477,7.9208814,15.4135466,0.3861301,6.7509223,7.009425,8.9156056,7.8642422,15.4659297,9.5768093,7.9031459,15.7277329,8.5772751,7.9708563,15.7931437,8.6218171,7.9025893,15.7572048,0.0923416,6.7892694,7.3007001,9.5768093,7.8125367,15.0394876,9.5768093,7.7430098,15.1300968,8.9156056,7.8642422,15.4659297,0.3315774,6.7138818,7.0693249,8.861053,7.8272018,15.5258296,9.5768093,7.8125367,15.658206,8.6218171,7.9025893,15.7572048,8.6763698,7.8513078,15.7089327,0.1468942,6.7379878,7.252428,9.5768093,7.6993034,15.2356134,8.861053,7.8272018,15.5258296,0.2707318,6.6989643,7.1326594,8.8002074,7.8122843,15.5891641,9.5768093,7.7430098,15.5675968,8.6763698,7.8513078,15.7089327,8.7372154,7.8205064,15.6516172,0.2077398,6.7071865,7.1951125,9.5768093,7.6843959,15.3488468,8.8002074,7.8122843,15.5891641,9.5768093,7.6993034,15.4620801,8.7372154,7.8205064,15.6516172,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID20.bind();
texcoordArray = new float[] {
0.0347342f,0.0f,0.0322532f,0.6748252f,0.0322532f,0.0f,0.0347342f,0.6748252f,-2.4069266f,1.0947906f,-2.430258f,1.0823189f,-2.4086206f,1.0911585f,0.0322532f,0.0f,0.0297722f,0.6748252f,0.0297722f,0.0f,0.0322532f,0.6748252f,0.0372152f,-0.0f,0.0347342f,0.6748252f,0.0347342f,-0.0f,0.0372152f,0.6748252f,-2.3440695f,0.6743745f,-2.3674295f,0.6686634f,-2.367449f,0.6622741f,-2.3935854f,1.000456f,-2.4152489f,0.9918805f,-2.415198f,0.9854919f,-2.4508576f,0.4921095f,-2.4714482f,0.4721356f,-2.4520943f,0.4877932f,0.0297722f,-0.0f,0.0272912f,0.6748252f,0.0272912f,0.0f,0.0297722f,0.6748252f,-2.3365803f,0.5698561f,-2.3616412f,0.5604727f,-2.338285f,0.5662445f,0.0396963f,0.0f,0.0372152f,0.6748252f,0.0372152f,-0.0f,0.0396963f,0.6748252f,-2.4424813f,0.9858161f,-2.4623876f,0.9732802f,-2.4620943f,0.9669182f,-2.2054482f,-1.4390446f,-2.190806f,-1.4116693f,-2.1907973f,-1.4066855f,0.0272912f,0.0f,0.0248102f,0.6748252f,0.0248102f,-0.0f,0.0272912f,0.6748252f,-2.2647228f,-0.2980176f,-2.2910862f,-0.313053f,-2.2661903f,-0.3020302f,0.0421773f,0.0f,0.0396963f,0.6748252f,0.0396963f,0.0f,0.0421773f,0.6748252f,-2.4465058f,0.461753f,-2.4643512f,0.4436671f,-2.4635465f,0.4374867f,-1.4841942f,-3.042284f,-1.4764835f,-3.0062375f,-1.4779248f,-3.002187f,0.0248102f,0.6748252f,0.0223291f,0.0f,0.0248102f,0.0f,0.0223291f,0.6748252f,-2.3145027f,0.1952302f,-2.341043f,0.1880285f,-2.3410583f,0.1816392f,-2.258418f,-0.9590907f,-2.2321126f,-0.9489776f,-2.231003f,-0.9445233f,0.0446583f,0.6748252f,0.0421773f,0.0f,0.0446583f,0.0f,0.0421773f,0.6748252f,-2.3175545f,-0.634804f,-2.3042734f,-0.6039984f,-2.3191679f,-0.629303f,-0.8826281f,-3.485977f,-0.8797694f,-3.4474115f,-0.8819853f,-3.4451954f,0.0223291f,0.6748252f,0.0198481f,-0.0f,0.0223291f,-0.0f,0.0198481f,0.6748252f,-2.291636f,-0.3524982f,-2.3193734f,-0.3581891f,-2.3193474f,-0.3645783f,-2.2749228f,-1.2765634f,-2.247146f,-1.2752774f,-2.246398f,-1.2705269f,0.0471393f,0.6748252f,0.0446583f,-0.0f,0.0471393f,0.0f,0.0446583f,0.6748252f,-1.9026153f,-1.9494987f,-1.8946744f,-1.9127876f,-1.9051294f,-1.9456033f,-0.5704949f,-3.466279f,-0.5702258f,-3.4269552f,-0.5726884f,-3.4264786f,0.0198481f,0.0f,0.0173671f,0.6748252f,0.0173671f,-0.0f,0.0198481f,0.6748252f,-2.2801085f,-0.9967327f,-2.2524714f,-0.9893234f,-2.280251f,-0.9903497f,-2.243751f,-1.5936376f,-2.215321f,-1.5859946f,-2.2440238f,-1.5872719f,-2.2380407f,-1.7364922f,-2.2093418f,-1.7349031f,-2.2091196f,-1.7299396f,0.0496203f,0.6748252f,0.0471393f,0.0f,0.0496203f,0.0f,0.0471393f,0.6748252f,-1.2187443f,-2.976282f,-1.2171185f,-2.9367237f,-1.2218392f,-2.9748843f,-0.4045071f,-3.3970957f,-0.4059897f,-3.3571143f,-0.4084057f,-3.3581867f,-0.4014097f,-3.3957207f,0.0173671f,-0.0f,0.0148861f,0.6748252f,0.0148861f,0.0f,0.0173671f,0.6748252f,-2.056432f,-2.6137612f,-2.0275247f,-2.604927f,-2.0281303f,-2.6000948f,-2.0556557f,-2.6199563f,0.0521013f,0.0f,0.0496203f,0.6748252f,0.0496203f,0.0f,0.0521013f,0.6748252f,-0.2520807f,-3.3913414f,-0.2554395f,-3.3507311f,-0.2575813f,-3.3532257f,0.0148861f,0.0f,0.0124051f,0.6748252f,0.0124051f,0.0f,0.0148861f,0.6748252f,2.4528916f,0.7044523f,2.4246018f,0.7182174f,2.4522092f,0.6982125f,2.3265028f,-1.6087683f,2.30613f,-1.5662369f,2.3049583f,-1.5706263f,0.0545823f,0.0f,0.0521013f,0.6748252f,0.0521013f,0.0f,0.0545823f,0.6748252f,0.4134882f,-3.175454f,0.4034505f,-3.1408892f,0.4109221f,-3.179209f,0.0028055f,-3.4292607f,-0.0033173f,-3.388581f,-0.0049254f,-3.3923683f,0.0124051f,0.6748252f,0.0099241f,-0.0f,0.0124051f,-0.0f,0.0099241f,0.6748252f,2.3746285f,1.5986855f,2.3461154f,1.6049421f,2.3744564f,1.5923055f,2.445261f,0.871368f,2.418003f,0.8914697f,2.4184191f,0.886557f,0.0570634f,0.6748252f,0.0545823f,0.0f,0.0570634f,0.0f,0.0545823f,0.6748252f,1.1130562f,-2.4199092f,1.0986499f,-2.391229f,1.1113079f,-2.42524f,0.7895455f,-3.2602797f,0.7756319f,-3.228948f,0.7751471f,-3.2338352f,0.0099241f,0.6748252f,0.007443f,-0.0f,0.0099241f,-0.0f,0.007443f,0.6748252f,2.3446226f,1.7692262f,2.316902f,1.7752368f,2.3445783f,1.7628374f,2.4094944f,1.348866f,2.382441f,1.3659586f,2.383448f,1.3614062f,0.0595444f,0.6748252f,0.0570634f,0.0f,0.0595444f,0.0f,0.0570634f,0.6748252f,1.508655f,-1.3890797f,1.5246956f,-1.4139923f,1.5257376f,-1.4079577f,1.8541793f,-0.3536328f,1.8724983f,-0.3737678f,1.8729429f,-0.3674415f,1.4723035f,-2.2561283f,1.453874f,-2.2328937f,1.4545474f,-2.237689f,0.007443f,0.6748252f,0.004962f,-0.0f,0.007443f,-0.0f,0.004962f,0.6748252f,2.2919612f,1.7377408f,2.3185446f,1.7243708f,2.3185163f,1.73076f,2.3726149f,1.5958627f,2.3463862f,1.6118244f,2.3478184f,1.6077608f,0.002481f,0.6748252f,-0.0f,0.0f,0.002481f,0.0f,0.0f,0.6748252f,2.067739f,0.525278f,2.0879045f,0.5089092f,2.0879982f,0.5152958f,1.9280097f,-0.6532071f,1.9294778f,-0.6572185f,1.949578f,-0.668428f,0.004962f,0.6748252f,0.002481f,0.0f,0.004962f,-0.0f,0.002481f,0.6748252f,2.2574365f,1.5338316f,2.2826374f,1.5188872f,2.2825704f,1.5252752f,2.28008f,1.5844123f,2.281795f,1.5808202f,2.3052025f,1.5689414f,2.1919522f,1.1487767f,2.213792f,1.1352181f,2.2137413f,1.1416067f,2.163382f,0.8344215f,2.1651459f,0.8309271f,2.1869397f,0.8238164f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,4,4,5,5,6,6,2,7,7,8,8,9,7,8,2,7,1,10,9,11,3,12,0,13,3,12,9,11,10,14,4,15,11,16,5,17,6,18,5,19,12,20,6,21,12,22,13,23,8,24,14,25,15,26,14,25,8,24,7,27,16,28,11,29,4,30,17,31,10,32,9,33,10,32,17,31,18,34,13,35,12,36,19,37,19,38,20,39,13,40,15,41,21,42,22,43,21,42,15,41,14,44,23,45,11,46,16,47,24,48,18,49,17,50,18,49,24,48,25,51,20,52,19,53,26,54,26,55,27,56,20,57,21,58,28,59,22,60,28,59,21,58,29,61,23,62,30,63,11,64,30,65,23,66,31,67,32,68,24,69,33,70,24,69,32,68,25,71,34,72,27,73,26,74,34,75,35,76,27,77,29,78,36,79,28,80,36,79,29,78,37,81,31,82,38,83,30,84,39,85,31,86,40,87,41,88,33,89,42,90,33,89,41,88,32,91,43,92,35,93,34,94,43,95,44,96,35,97,36,98,45,99,46,100,45,99,36,98,37,101,38,102,31,103,39,104,39,105,40,106,47,107,47,108,40,109,48,110,49,111,42,112,50,113,42,112,49,111,41,114,51,115,44,116,43,117,51,118,52,119,44,120,52,119,51,118,53,121,46,122,54,123,55,124,54,123,46,122,45,125,56,126,48,127,57,128,48,127,56,126,47,129,58,130,49,131,50,132,49,131,58,130,59,133,53,134,60,135,52,136,55,137,61,138,62,139,61,138,55,137,54,140,56,141,57,142,63,143,63,144,57,145,64,146,65,147,59,148,58,149,59,148,65,147,66,150,67,151,60,152,53,153,67,154,68,155,60,156,61,157,69,158,62,159,69,158,61,157,70,160,63,161,64,162,71,163,71,164,64,165,72,166,73,167,65,168,74,169,65,168,73,167,66,170,75,171,68,172,67,173,76,174,77,175,68,176,70,177,78,178,69,179,78,178,70,177,79,180,71,181,72,182,80,183,80,184,72,185,81,186,82,187,74,188,83,189,74,188,82,187,73,190,68,191,75,192,76,193,77,194,76,195,84,196,84,197,85,198,77,199,79,200,86,201,78,202,86,201,79,200,87,203,81,204,88,205,80,206,88,207,81,208,89,209,90,210,83,211,91,212,83,211,90,210,82,213,85,214,84,215,92,216,93,217,85,218,92,219,87,220,91,221,86,222,91,221,87,220,90,223,89,224,94,225,88,226,89,227,95,228,94,229,93,230,92,231,94,232,95,233,93,234,94,235,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID172(GL2 gl){
double[] positionsArray = {
0.2077398,6.7071865,7.1951125,0.3315774,6.7138818,7.0693249,0.2707318,6.6989643,7.1326594,0.1468942,6.7379878,7.252428,0.3861301,6.7509223,7.009425,0.0923416,6.7892694,7.3007001,0.4306721,6.8075614,6.9570419,0.0477995,6.8575364,7.336639,0.4621681,6.8799395,6.9157454,0.0163035,6.9381365,7.3577956,0.4784717,6.963124,6.8883497,0.0,7.025577,7.362728,0.4784717,7.051446,6.8767219,0.0,7.113899,7.3511002,0.4621681,7.1388865,6.8816544,0.0163035,7.1970835,7.3237045,0.4306721,7.2194866,6.9028109,0.0477995,7.2694615,7.282408,0.3861301,7.2877536,6.9387498,0.0923416,7.3261007,7.2300249,0.3315774,7.3390352,6.9870219,0.1468942,7.3631412,7.170125,0.2707318,7.3698365,7.0443374,0.2077398,7.3780586,7.1067905,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,1,3,4,4,3,5,4,5,6,6,5,7,6,7,8,8,7,9,8,9,10,10,9,11,10,11,12,12,11,13,12,13,14,14,13,15,14,15,16,16,15,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 66, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID178(GL2 gl){
double[] positionsArray = {
37.8871581,0.3265513,13.3633914,39.4410842,1.3951783,11.2699837,37.9119522,1.1678202,11.248219,39.5926833,0.5801363,13.3876668,39.5926833,0.5801363,13.3876668,37.8871581,0.3265513,13.3633914,39.4410842,1.3951783,11.2699837,37.9119522,1.1678202,11.248219,36.1832465,0.591641,13.3522771,36.3842669,1.4054932,11.2382541,36.1832465,0.591641,13.3522771,36.3842669,1.4054932,11.2382541,37.8623435,0.0,15.6478728,39.6280331,0.2625305,15.6730045,39.6280331,0.2625305,15.6730045,37.8623435,0.0,15.6478728,40.8674552,2.0720732,11.302065,41.1835933,1.3351145,13.4234489,41.1835933,1.3351145,13.4234489,40.8674552,2.0720732,11.302065,39.1835671,2.6521127,9.4642718,37.9350361,2.4664756,9.446501,39.1835671,2.6521127,9.4642718,37.9350361,2.4664756,9.446501,34.9621375,2.092,11.2407683,34.5970673,1.35734,13.3550813,34.5970673,1.35734,13.3550813,34.9621375,2.092,11.2407683,36.0983244,0.2744411,15.6363664,36.0983244,0.2744411,15.6363664,36.6876862,2.6605348,9.4383647,36.6876862,2.6605348,9.4383647,37.8391993,0.2104202,17.9459796,39.5447245,0.4640051,17.9702549,39.5447245,0.4640051,17.9702549,37.8391993,0.2104202,17.9459796,41.2750643,1.0441414,15.7100489,41.2750643,1.0441414,15.7100489,42.0938602,3.1523758,11.3422767,42.5514704,2.5400354,13.4682992,42.5514704,2.5400354,13.4682992,42.0938602,3.1523758,11.3422767,40.3481941,3.2047951,9.4904661,40.3481941,3.2047951,9.4904661,37.9548365,4.1340163,8.0810215,38.8376813,4.2652815,8.0935874,38.8376813,4.2652815,8.0935874,37.9548365,4.1340163,8.0810215,33.7424798,3.1805566,11.25559,33.2367159,2.571467,13.3716128,33.2367159,2.571467,13.3716128,33.7424798,3.1805566,11.25559,34.4561908,1.0671509,15.6392695,34.4561908,1.0671509,15.6392695,35.5265224,3.2210653,9.4404175,35.5265224,3.2210653,9.4404175,36.1352878,0.4755099,17.9348653,36.1352878,0.4755099,17.9348653,37.072827,4.2712368,8.0752683,37.072827,4.2712368,8.0752683,37.819303,0.9434721,20.1010994,39.348435,1.1708301,20.1228641,39.348435,1.1708301,20.1228641,37.819303,0.9434721,20.1010994,41.1356346,1.2189833,18.006037,41.1356346,1.2189833,18.006037,42.6911949,2.2915674,15.7564814,42.6911949,2.2915674,15.7564814,43.6030958,4.1127857,13.5191613,43.0367218,4.5624651,11.3878784,43.0367218,4.5624651,11.3878784,43.6030958,4.1127857,13.5191613,41.3495496,4.0868584,9.5232988,41.3495496,4.0868584,9.5232988,39.661197,4.656087,8.1121096,39.661197,4.656087,8.1121096,37.9700043,6.0568021,7.2448358,38.4269984,6.12475,7.2513404,38.4269984,6.12475,7.2513404,37.9700043,6.0568021,7.2448358,32.1948981,4.1512814,13.4007451,32.8084115,4.5969794,11.2817093,32.8084115,4.5969794,11.2817093,32.1948981,4.1512814,13.4007451,33.0478514,2.3241077,15.6563842,33.0478514,2.3241077,15.6563842,34.5306761,4.109868,9.4525194,34.5306761,4.109868,9.4525194,34.5491085,1.2412088,17.9376694,34.5491085,1.2412088,17.9376694,36.2517602,4.6675918,8.0767199,36.2517602,4.6675918,8.0767199,36.2916176,1.181145,20.0911346,36.2916176,1.181145,20.0911346,37.5134426,6.1278327,7.2418578,37.5134426,6.1278327,7.2418578,37.8040102,2.1491994,21.9663646,39.0525413,2.3348365,21.9841354,39.0525413,2.3348365,21.9841354,37.8040102,2.1491994,21.9663646,40.7748059,1.8477251,20.1549455,40.7748059,1.8477251,20.1549455,42.5035116,2.4239043,18.0508873,42.5035116,2.4239043,18.0508873,43.7799176,3.9197983,15.8091377,43.7799176,3.9197983,15.8091377,44.2668032,5.9461851,13.572569,43.6317855,6.206246,11.4357624,43.6317855,6.206246,11.4357624,44.2668032,5.9461851,13.572569,42.1193929,5.2381916,9.5605324,42.1193929,5.2381916,9.5605324,40.3692622,5.2798,8.1353258,40.3692622,5.2798,8.1353258,38.8532815,6.3270458,7.2609282,38.8532815,6.3270458,7.2609282,37.9795057,8.1037984,6.9949285,37.9795057,8.1037984,6.9949285,31.542612,5.9891214,13.4404928,32.2235878,6.2447417,11.3173462,32.2235878,6.2447417,11.3173462,31.542612,5.9891214,13.4404928,31.9692823,3.9596519,15.6865442,31.9692823,3.9596519,15.6865442,33.7680125,5.2663724,9.4738457,33.7680125,5.2663724,9.4738457,33.1238747,2.3949712,16.895845,33.1887572,2.4553358,17.9542009,33.1887572,2.4553358,17.9542009,33.1238747,2.3949712,16.895845,35.5475905,5.2960702,8.0852772,35.5475905,5.2960702,8.0852772,34.8694882,1.8676519,20.0936488,34.8694882,1.8676519,20.0936488,37.0884271,6.3330011,7.2426091,37.0884271,6.3330011,7.2426091,36.5566604,2.3432586,21.9582284,36.5566604,2.3432586,21.9582284,38.6772082,3.8766991,23.4272262,37.7943634,3.7454339,23.4146603,38.6772082,3.8766991,23.4272262,37.7943634,3.7454339,23.4146603,40.2171683,2.8875189,22.0103297,40.2171683,2.8875189,22.0103297,42.0012109,2.9280276,20.1951572,42.0012109,2.9280276,20.1951572,43.5551371,3.9966546,18.1017494,43.5551371,3.9966546,18.1017494,44.4670381,5.817873,15.8644293,44.4670381,5.817873,15.8644293,44.4973619,7.9152903,13.6248826,43.8384988,7.9716975,11.4826655,43.8384988,7.9716975,11.4826655,44.4973619,7.9152903,13.6248826,42.6052604,6.580333,9.5996295,42.6052604,6.580333,9.5996295,40.9136236,6.0939154,8.1616539,40.9136236,6.0939154,8.1616539,39.219803,6.6499034,7.2729458,39.219803,6.6499034,7.2729458,31.3243098,7.9597413,13.4881473,32.0278634,8.0115511,11.360072,32.0278634,8.0115511,11.360072,31.3243098,7.9597413,13.4881473,31.293986,5.8623239,15.7276941,31.293986,5.8623239,15.7276941,33.2905059,6.6117646,9.5029431,33.2905059,6.6117646,9.5029431,32.1469393,4.0351502,17.9833332,32.1469393,4.0351502,17.9833332,35.0083059,6.1138423,8.1003572,35.0083059,6.1138423,8.1003572,33.6498306,2.9562084,20.1084705,33.6498306,2.9562084,20.1084705,36.7239221,6.6583254,7.2470387,36.7239221,6.6583254,7.2470387,35.3954966,2.9037891,21.9602811,35.3954966,2.9037891,21.9602811,36.9123538,3.8826544,23.4089071,36.9123538,3.8826544,23.4089071,38.2480138,5.6913427,24.3537922,37.7910197,5.6233948,24.3472876,38.2480138,5.6913427,24.3537922,37.7910197,5.6233948,24.3472876,39.5007238,4.2675046,23.4457483,39.5007238,4.2675046,23.4457483,41.2185238,3.7695823,22.0431624,41.2185238,3.7695823,22.0431624,42.9440725,4.338117,20.2407589,42.9440725,4.338117,20.2407589,44.2188444,5.8300539,18.1551571,44.2188444,5.8300539,18.1551571,44.70573,7.8564407,15.9185884,44.70573,7.8564407,15.9185884,44.2790597,9.8859102,13.672537,43.6427744,9.7385069,11.5253913,43.6427744,9.7385069,11.5253913,44.2790597,9.8859102,13.672537,42.7740411,8.0218181,9.6379258,42.7740411,8.0218181,9.6379258,41.2571838,7.0429528,8.1892998,41.2571838,7.0429528,8.1892998,39.5015852,7.0713205,7.2865742,39.5015852,7.0713205,7.2865742,31.5548685,9.9288465,13.5404609,32.2345766,9.7770026,11.4069751,32.2345766,9.7770026,11.4069751,31.5548685,9.9288465,13.5404609,31.0679829,7.9024597,15.7770296,31.0679829,7.9024597,15.7770296,33.1306976,8.0543585,9.5378286,33.1306976,8.0543585,9.5378286,31.4946532,5.8729902,18.023081,31.4946532,5.8729902,18.023081,34.6706578,7.0651782,8.1209322,34.6706578,7.0651782,8.1209322,32.7157623,4.3726312,20.1345898,32.7157623,4.3726312,20.1345898,36.4447678,7.0816354,7.2548447,36.4447678,7.0816354,7.2548447,34.3996503,3.7925918,21.9723831,34.3996503,3.7925918,21.9723831,36.091287,4.2790094,23.4103587,36.091287,4.2790094,23.4103587,37.334458,5.6944253,24.3443095,37.334458,5.6944253,24.3443095,37.7942072,7.6551021,24.7006895,37.7942072,7.6551021,24.7006895,38.6742969,5.8936385,24.36338,38.6742969,5.8936385,24.36338,40.2087891,4.8912176,23.4689646,40.2087891,4.8912176,23.4689646,41.9883671,4.9209154,22.0803961,41.9883671,4.9209154,22.0803961,43.5391363,5.9818979,20.2886429,43.5391363,5.9818979,20.2886429,44.4494031,7.7991592,18.2074707,44.4494031,7.7991592,18.2074707,44.4797269,9.8965765,15.9679239,44.4797269,9.8965765,15.9679239,43.0579506,11.3862692,11.5610282,43.6267736,11.7237502,13.7122848,43.6267736,11.7237502,13.7122848,43.0579506,11.3862692,11.5610282,42.6142328,9.464412,9.6728113,42.6142328,9.464412,9.6728113,41.3765298,8.0622366,8.2163793,41.3765298,8.0622366,8.2163793,39.6794251,7.5625784,7.3008848,39.6794251,7.5625784,7.3008848,32.8296404,11.4207834,11.4548592,32.2185758,11.7622458,13.5938686,32.2185758,11.7622458,13.5938686,32.8296404,11.4207834,11.4548592,31.3066748,9.9410275,15.8311887,31.3066748,9.9410275,15.8311887,33.2994783,9.4958436,9.5761248,33.2994783,9.4958436,9.5761248,31.276351,7.8436101,18.0707355,31.276351,7.8436101,18.0707355,34.5576563,8.0852462,8.1455999,34.5576563,8.0852462,8.1455999,32.1309385,6.0203935,20.1702267,32.1309385,6.0203935,20.1702267,36.2699883,7.5740832,7.2654951,36.2699883,7.5740832,7.2654951,33.6369867,4.9490962,21.9937094,33.6369867,4.9490962,21.9937094,35.3871174,4.9074878,23.418916,35.3871174,4.9074878,23.418916,36.9094426,5.8995938,24.3450609,36.9094426,5.8995938,24.3450609,39.0408184,6.216496,24.3753976,39.0408184,6.216496,24.3753976,40.7531504,5.7053331,23.4952927,40.7531504,5.7053331,23.4952927,42.4742346,6.2630569,22.1194932,42.4742346,6.2630569,22.1194932,43.7458495,7.7473493,20.335546,43.7458495,7.7473493,20.335546,44.2311009,9.769779,18.2551252,44.2311009,9.769779,18.2551252,43.8044306,11.7992485,16.0090738,43.8044306,11.7992485,16.0090738,42.1238823,12.802692,11.5871475,42.5849557,13.3035646,13.7414171,42.5849557,13.3035646,13.7414171,42.1238823,12.802692,11.5871475,42.1367262,10.8098043,9.7019086,42.1367262,10.8098043,9.7019086,41.2635283,9.0823046,8.2410471,41.2635283,9.0823046,8.2410471,39.7412031,8.0901986,7.3149022,39.7412031,8.0901986,7.3149022,33.772502,12.8308728,11.5004608,33.2702013,13.3349961,13.6447307,33.2702013,13.3349961,13.6447307,33.772502,12.8308728,11.5004608,31.9937952,11.8391021,15.8864804,31.9937952,11.8391021,15.8864804,33.7853458,10.837985,9.615222,33.7853458,10.837985,9.615222,31.5069097,9.8127154,18.1230491,31.5069097,9.8127154,18.1230491,34.6770022,9.10453,8.1726795,34.6770022,9.10453,8.1726795,31.9352141,7.787203,20.2129525,31.9352141,7.787203,20.2129525,36.2114944,8.1021092,7.2782641,36.2114944,8.1021092,7.2782641,33.1594801,6.2944884,22.0228068,33.1594801,6.2944884,22.0228068,34.8478328,5.7252599,23.433996,34.8478328,5.7252599,23.433996,36.5449375,6.2249181,24.3494905,36.5449375,6.2249181,24.3494905,39.3226006,6.6379132,24.389026,39.3226006,6.6379132,24.389026,41.0967107,6.6543704,23.5229386,41.0967107,6.6543704,23.5229386,42.6430152,7.7045419,22.1577894,42.6430152,7.7045419,22.1577894,43.5501251,9.5141588,20.3782718,43.5501251,9.5141588,20.3782718,43.5788148,11.607619,18.2948729,43.5788148,11.607619,18.2948729,42.7258614,13.4347927,16.0392338,42.7258614,13.4347927,16.0392338,40.9042246,13.8912485,11.6019693,41.2246044,14.5176916,13.7579486,41.2246044,14.5176916,13.7579486,40.9042246,13.8912485,11.6019693,41.3740626,11.9663087,9.723235,41.3740626,11.9663087,9.723235,40.9258801,10.0336405,8.261622,40.9258801,10.0336405,8.261622,39.6827092,8.6182246,7.3276712,39.6827092,8.6182246,7.3276712,34.998907,13.9111754,11.5406725,34.6380783,14.5399171,13.689581,34.6380783,14.5399171,13.689581,34.998907,13.9111754,11.5406725,33.082518,13.4673331,15.9391367,33.082518,13.4673331,15.9391367,34.5551891,11.9893182,9.6524556,34.5551891,11.9893182,9.6524556,32.170617,11.6461147,18.1764568,32.170617,11.6461147,18.1764568,35.0205624,10.0535674,8.2003253,35.0205624,10.0535674,8.2003253,32.1419274,9.5526544,20.2598556,32.1419274,9.5526544,20.2598556,36.2732724,8.6297293,7.2922815,36.2732724,8.6297293,7.2922815,32.9996718,7.7370823,22.0576923,32.9996718,7.7370823,22.0576923,34.5101846,6.6765959,23.454571,34.5101846,6.6765959,23.454571,36.2657833,6.6482281,24.3572965,36.2657833,6.6482281,24.3572965,39.5004405,7.1291711,24.4033366,39.5004405,7.1291711,24.4033366,41.2160566,7.6736543,23.5500181,41.2160566,7.6736543,23.5500181,42.4832069,9.1471358,22.1926749,42.4832069,9.1471358,22.1926749,42.9653014,11.161921,20.4139087,42.9653014,11.161921,20.4139087,42.536997,13.1874334,18.3240053,42.536997,13.1874334,18.3240053,41.3175221,14.6917495,16.0563485,41.3175221,14.6917495,16.0563485,39.4820953,14.5777554,11.6044834,39.6384251,15.2833905,13.7607528,39.6384251,15.2833905,13.7607528,39.4820953,14.5777554,11.6044834,40.3782163,12.8551113,9.7353369,40.3782163,12.8551113,9.7353369,40.3865955,10.8514127,8.276702,40.3865955,10.8514127,8.276702,39.5079296,9.1106723,7.3383215,39.5079296,9.1106723,7.3383215,36.4252779,14.5880703,11.5727539,36.2289884,15.2948953,13.7253631,36.2289884,15.2948953,13.7253631,36.4252779,14.5880703,11.5727539,34.4986485,14.714759,15.9855691,34.4986485,14.714759,15.9855691,35.5565446,12.8713815,9.6852883,35.5565446,12.8713815,9.6852883,33.2222425,13.218865,18.2273188,33.2222425,13.218865,18.2273188,35.5649238,10.8676828,8.2266535,35.5649238,10.8676828,8.2266535,32.7369911,11.1964353,20.3077396,32.7369911,11.1964353,20.3077396,36.4511123,9.1209872,7.306592,36.4511123,9.1209872,7.306592,33.1684525,9.1785674,22.0959885,33.1684525,9.1785674,22.0959885,34.3971831,7.6966638,23.4792387,34.3971831,7.6966638,23.4792387,36.0910037,7.1406758,24.3679469,36.0910037,7.1406758,24.3679469,39.5622185,7.6567913,24.417354,39.5622185,7.6567913,24.417354,41.1030551,8.6937222,23.5746859,41.1030551,8.6937222,23.5746859,42.0057004,10.4925281,22.2217723,42.0057004,10.4925281,22.2217723,42.0312331,12.5783439,20.440028,42.0312331,12.5783439,20.440028,41.1766456,14.4015605,18.3405368,41.1766456,14.4015605,18.3405368,39.6753885,15.4844594,16.0592516,39.6753885,15.4844594,16.0592516,37.9345136,15.5484802,13.7496385,37.9544099,14.8154283,11.5945186,37.9345136,15.5484802,13.7496385,37.9544099,14.8154283,11.5945186,39.2170525,13.4156419,9.7373897,39.2170525,13.4156419,9.7373897,39.6824258,11.4798911,8.2852594,39.6824258,11.4798911,8.2852594,39.2287754,9.5339823,7.3461275,39.2287754,9.5339823,7.3461275,36.1456798,15.49637,16.0226135,36.1456798,15.49637,16.0226135,36.7211716,13.4240639,9.7114826,36.7211716,13.4240639,9.7114826,34.5901195,14.4237859,18.2721692,34.5901195,14.4237859,18.2721692,36.2729891,11.4913958,8.2498697,36.2729891,11.4913958,8.2498697,33.6798527,12.6065246,20.3533413,33.6798527,12.6065246,20.3533413,36.7328945,9.5424044,7.3202205,36.7328945,9.5424044,7.3202205,33.65432,10.5207088,22.1350856,33.65432,10.5207088,22.1350856,34.516529,8.7159477,23.5063182,34.516529,8.7159477,23.5063182,36.0325098,7.6687018,24.3807159,36.0325098,7.6687018,24.3807159,39.5037246,8.1848173,24.4301229,39.5037246,8.1848173,24.4301229,40.7654069,9.6450582,23.5952608,40.7654069,9.6450582,23.5952608,41.2430368,11.6490325,22.2430986,41.2430368,11.6490325,22.2430986,40.8115754,13.6669004,20.4548498,40.8115754,13.6669004,20.4548498,39.5904664,15.1672594,18.3433409,39.5904664,15.1672594,18.3433409,37.9113694,15.7589004,16.0477452,37.9113694,15.7589004,16.0477452,37.9697026,13.609701,9.7292534,37.9697026,13.609701,9.7292534,38.8613591,11.876246,8.2867109,38.8613591,11.876246,8.2867109,38.8642703,9.8593067,7.3505571,38.8642703,9.8593067,7.3505571,36.1810296,15.1787641,18.3079512,36.1810296,15.1787641,18.3079512,37.0965047,11.8822013,8.2683919,37.0965047,11.8822013,8.2683919,34.9062577,13.6868272,20.393553,34.9062577,13.6868272,20.393553,37.099416,9.865262,7.3322381,37.099416,9.865262,7.3322381,34.4241633,11.672042,22.1723192,34.4241633,11.672042,22.1723192,34.8600892,9.664985,23.5339641,34.8600892,9.664985,23.5339641,36.0942878,8.196322,24.3947333,36.0942878,8.196322,24.3947333,39.328945,8.677265,24.4407733,39.328945,8.677265,24.4407733,40.2261223,10.4628303,23.6103408,40.2261223,10.4628303,23.6103408,40.2471905,12.5378352,22.2552005,40.2471905,12.5378352,22.2552005,39.389446,14.3534073,20.4573639,39.389446,14.3534073,20.4573639,37.8865548,15.4323491,18.3322266,37.8865548,15.4323491,18.3322266,37.9793495,12.0134665,8.2809577,37.9793495,12.0134665,8.2809577,38.4392549,10.0644751,7.3513085,38.4392549,10.0644751,7.3513085,36.3326286,14.3637221,20.4256344,36.3326286,14.3637221,20.4256344,37.5256991,10.0675578,7.3418258,37.5256991,10.0675578,7.3418258,35.4255188,12.5541053,22.205152,35.4255188,12.5541053,22.205152,35.4044506,10.4791005,23.5602922,35.4044506,10.4791005,23.5602922,36.2721277,8.6875799,24.4090438,36.2721277,8.6875799,24.4090438,39.0497908,9.100575,24.4485793,39.0497908,9.100575,24.4485793,39.5219527,11.0913087,23.6188982,39.5219527,11.0913087,23.6188982,39.0860267,13.0983657,22.2572533,39.0860267,13.0983657,22.2572533,37.8617607,14.5910802,20.4473991,37.8617607,14.5910802,20.4473991,37.9826932,10.1355057,7.3483304,37.9826932,10.1355057,7.3483304,36.5901457,13.1067877,22.2313463,36.5901457,13.1067877,22.2313463,36.1125159,11.1028134,23.5835085,36.1125159,11.1028134,23.5835085,36.5539099,9.1089971,24.4226722,36.5539099,9.1089971,24.4226722,38.6852857,9.4258993,24.4530089,38.6852857,9.4258993,24.4530089,38.7008859,11.4876636,23.6203497,38.7008859,11.4876636,23.6203497,37.8386768,13.2924248,22.2491171,37.8386768,13.2924248,22.2491171,36.9360315,11.4936189,23.6020306,36.9360315,11.4936189,23.6020306,36.9204314,9.4318546,24.4346899,36.9204314,9.4318546,24.4346899,38.2602703,9.6310678,24.4537603,38.2602703,9.6310678,24.4537603,37.8188763,11.6248841,23.6145965,37.8188763,11.6248841,23.6145965,37.3467145,9.6341504,24.4442776,37.3467145,9.6341504,24.4442776,37.8037086,9.7020983,24.4507822,37.8037086,9.7020983,24.4507822,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,8,2,9,2,8,0,12,3,0,3,12,13,3,16,1,16,3,17,2,20,21,20,2,1,24,8,9,8,24,25,28,0,8,0,28,12,9,21,30,21,9,2,32,13,12,13,32,33,13,17,3,17,13,36,17,38,16,38,17,39,1,42,20,42,1,16,20,44,21,44,20,45,48,25,24,25,48,49,25,28,8,28,25,52,54,9,30,9,54,24,56,12,28,12,56,32,21,58,30,58,21,44,60,33,32,33,60,61,33,36,13,36,33,64,36,39,17,39,36,66,68,38,39,38,68,69,16,72,42,72,16,38,20,74,45,74,20,42,45,76,44,76,45,77,48,80,49,80,48,81,49,52,25,52,49,84,86,24,54,24,86,48,52,56,28,56,52,88,30,90,54,90,30,58,92,32,56,32,92,60,44,94,58,94,44,76,96,61,60,61,96,97,61,64,33,64,61,100,64,66,36,66,64,102,104,39,66,39,104,68,106,69,68,69,106,107,69,72,38,72,69,110,42,112,74,112,42,72,45,114,77,114,45,74,77,116,76,81,118,80,118,81,119,49,122,84,122,49,80,86,81,48,81,86,124,84,88,52,88,84,126,88,126,127,54,130,86,130,54,90,88,92,56,92,88,132,58,134,90,134,58,94,136,60,92,60,136,96,116,94,76,138,96,139,96,138,97,97,100,61,100,97,142,100,102,64,102,100,144,102,104,66,104,102,146,148,68,104,68,148,106,150,107,106,107,150,151,107,110,69,110,107,154,72,156,112,156,72,110,74,158,114,158,74,112,114,116,77,119,160,118,160,119,161,80,164,122,164,80,118,124,119,81,119,124,166,122,126,84,126,122,127,127,122,168,86,170,124,170,86,130,127,132,88,132,127,172,90,174,130,174,90,134,132,136,92,136,132,176,116,134,94,178,96,136,96,178,139,180,139,181,139,180,138,184,97,138,97,184,142,142,144,100,144,142,186,144,146,102,146,144,188,146,148,104,148,146,190,192,106,148,106,192,150,194,151,150,151,194,195,151,154,107,154,151,198,110,200,156,200,110,154,112,202,158,202,112,156,158,116,114,161,204,160,204,161,205,118,208,164,208,118,160,166,161,119,161,166,210,164,168,122,168,164,212,124,214,166,214,124,170,168,172,127,172,168,216,130,218,170,218,130,174,172,176,132,176,172,220,116,174,134,222,136,176,136,222,178,224,139,178,139,224,181,180,181,226,228,138,180,138,228,184,230,142,184,142,230,186,186,188,144,188,186,232,188,190,146,190,188,234,190,192,148,192,190,236,238,150,192,150,238,194,194,240,195,240,194,241,195,198,151,198,195,244,198,200,154,200,198,246,156,248,202,248,156,200,202,116,158,250,204,205,204,250,251,160,254,208,254,160,204,210,205,161,205,210,256,208,212,164,212,208,258,166,260,210,260,166,214,212,216,168,216,212,262,170,264,214,264,170,218,216,220,172,220,216,266,116,218,174,268,176,220,176,268,222,270,178,222,178,270,224,226,181,224,228,180,226,272,184,228,184,272,230,274,186,230,186,274,232,232,234,188,234,232,276,234,236,190,236,234,278,280,192,236,192,280,238,238,241,194,241,238,282,241,284,240,284,241,285,195,288,244,288,195,240,244,246,198,246,244,290,200,292,248,292,200,246,248,116,202,294,251,250,251,294,295,251,254,204,254,251,298,300,205,256,205,300,250,208,302,258,302,208,254,260,256,210,256,260,304,258,262,212,262,258,306,214,308,260,308,214,264,262,266,216,266,262,310,116,264,218,312,220,266,220,312,268,314,222,268,222,314,270,226,224,270,272,228,226,316,230,272,230,316,274,318,232,274,232,318,276,276,278,234,278,276,320,322,236,278,236,322,280,324,238,280,238,324,282,282,285,241,285,282,326,285,328,284,328,285,329,240,332,288,332,240,284,290,288,334,288,290,244,292,290,336,290,292,246,292,116,248,338,295,294,295,338,339,295,298,251,298,295,342,344,250,300,250,344,294,254,346,302,346,254,298,304,300,256,300,304,348,258,350,306,350,258,302,308,304,260,304,308,352,306,310,262,310,306,354,116,308,264,356,266,310,266,356,312,358,268,312,268,358,314,226,270,314,316,272,226,360,274,316,274,360,318,362,276,318,276,362,320,364,278,320,278,364,322,366,280,322,280,366,324,368,282,324,282,368,326,326,329,285,329,326,370,329,372,328,372,329,373,284,376,332,376,284,328,334,332,378,332,334,288,336,334,380,334,336,290,292,336,116,382,339,338,339,382,383,339,342,295,342,339,386,388,294,344,294,388,338,298,390,346,390,298,342,348,344,300,344,348,392,302,394,350,394,302,346,352,348,304,348,352,396,306,398,354,398,306,350,116,352,308,354,356,310,356,354,400,402,312,356,312,402,358,226,314,358,360,316,226,404,318,360,318,404,362,364,362,406,362,364,320,408,322,364,322,408,366,410,324,366,324,410,368,368,370,326,370,368,412,370,373,329,373,370,414,372,416,417,416,372,373,328,420,376,420,328,372,378,376,422,376,378,332,380,378,424,378,380,334,336,380,116,417,383,382,383,417,416,383,386,339,386,383,426,428,338,388,338,428,382,386,390,342,390,386,430,392,388,344,388,392,432,346,434,394,434,346,390,396,392,348,392,396,436,350,438,398,438,350,394,116,396,352,354,440,400,440,354,398,442,356,400,356,442,402,226,358,402,404,360,226,406,404,444,404,406,362,408,406,446,406,408,364,448,366,408,366,448,410,410,412,368,412,410,450,412,414,370,414,412,452,373,454,416,454,373,414,420,417,456,417,420,372,422,420,458,420,422,376,424,422,460,422,424,378,380,424,116,416,426,383,426,416,454,456,382,428,382,456,417,426,430,386,430,426,462,432,428,388,428,432,464,430,434,390,434,430,466,436,432,392,432,436,468,394,470,438,470,394,434,116,436,396,438,440,398,440,438,472,440,442,400,442,440,474,226,402,442,404,226,444,446,444,476,444,446,406,448,446,478,446,448,408,448,450,410,450,448,480,450,452,412,452,450,482,414,484,454,484,414,452,486,420,456,420,486,458,460,458,488,458,460,422,424,460,116,454,462,426,462,454,484,464,456,428,456,464,486,462,466,430,466,462,490,468,464,432,464,468,492,466,470,434,470,466,494,116,468,436,470,472,438,472,470,496,472,474,440,474,472,498,226,442,474,444,226,476,478,476,500,476,478,446,480,478,502,478,480,448,480,482,450,482,480,504,452,506,484,506,452,482,508,458,486,458,508,488,460,488,116,484,490,462,490,484,506,492,486,464,486,492,508,490,494,466,494,490,510,116,492,468,494,496,470,496,494,512,496,498,472,498,496,514,226,474,498,476,226,500,502,500,516,500,502,478,504,502,518,502,504,480,482,520,506,520,482,504,488,508,116,506,510,490,510,506,520,508,492,116,510,512,494,512,510,522,512,514,496,514,512,524,226,498,514,500,226,516,518,516,526,516,518,502,520,518,528,518,520,504,520,522,510,522,520,528,522,524,512,524,522,530,226,514,524,516,226,526,528,526,532,526,528,518,528,530,522,530,528,532,226,524,530,526,226,532,532,226,530,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 1590, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID184.bind();
texcoordArray = new float[] {
0.4373832f,0.4455306f,0.4910058f,0.444328f,0.4421496f,0.3406231f,0.4902263f,0.3395449f,0.5445776f,0.4437774f,0.5382574f,0.3390513f,0.4362718f,0.5587434f,0.491786f,0.5574984f,0.3873642f,0.4473032f,0.3973038f,0.3422124f,0.450246f,0.2511704f,0.4895005f,0.25029f,0.5944479f,0.4439163f,0.5829699f,0.3391758f,0.5472476f,0.5569284f,0.5287178f,0.249887f,0.4388911f,0.6725464f,0.4925136f,0.6713438f,0.3844883f,0.5605785f,0.3443575f,0.449525f,0.358745f,0.3442044f,0.4136296f,0.252468f,0.4611209f,0.1832683f,0.4888779f,0.1826458f,0.637218f,0.4447353f,0.6213165f,0.3399101f,0.5988771f,0.5570722f,0.5652254f,0.2499887f,0.5460855f,0.6707932f,0.5166088f,0.1823608f,0.4450625f,0.779184f,0.4931392f,0.7781058f,0.3888721f,0.674319f,0.3399645f,0.5628787f,0.3291009f,0.3464635f,0.3112939f,0.4520446f,0.3821465f,0.2540945f,0.4352291f,0.1841859f,0.4740329f,0.1415444f,0.4884011f,0.1412222f,0.6506841f,0.341204f,0.6699733f,0.4461785f,0.643156f,0.5579201f,0.5965353f,0.2505882f,0.5959557f,0.6709321f,0.5424235f,0.1824327f,0.5411704f,0.7776122f,0.5027556f,0.1410747f,0.4543656f,0.8713891f,0.49362f,0.8705088f,0.4002167f,0.7807733f,0.3458653f,0.6765408f,0.3057345f,0.5654873f,0.3103918f,0.3488356f,0.2904266f,0.4546904f,0.3579422f,0.255939f,0.4129672f,0.185336f,0.4606304f,0.1420194f,0.4881023f,0.1288421f,0.6690713f,0.3429694f,0.6904815f,0.4481475f,0.6770668f,0.5594141f,0.6205138f,0.2516446f,0.6387259f,0.6717511f,0.6407658f,0.6193214f,0.564563f,0.1828567f,0.5858828f,0.7777367f,0.5161183f,0.1411119f,0.5328373f,0.8701057f,0.4661662f,0.9428781f,0.4939233f,0.9422556f,0.4177491f,0.8726868f,0.3616579f,0.7827653f,0.3128017f,0.6790605f,0.2841311f,0.5682264f,0.3038927f,0.3511591f,0.2831777f,0.4572819f,0.3426663f,0.2578758f,0.3958522f,0.1866403f,0.4491068f,0.1426148f,0.6752249f,0.345086f,0.697345f,0.4505083f,0.6982984f,0.5614527f,0.6355268f,0.2530861f,0.6714811f,0.6731943f,0.5815183f,0.1836037f,0.6242295f,0.778471f,0.5275785f,0.1413313f,0.5693449f,0.8702074f,0.5216541f,0.9419706f,0.4796603f,0.988779f,0.4940284f,0.9884568f,0.4402745f,0.9437957f,0.386266f,0.8743133f,0.3320139f,0.7850244f,0.2919344f,0.6817062f,0.2766265f,0.5709093f,0.3100464f,0.3532757f,0.2900412f,0.4596427f,0.3373598f,0.259773f,0.3850505f,0.1880098f,0.4402474f,0.1432899f,0.6687258f,0.3474095f,0.6900961f,0.4530998f,0.7054041f,0.5638967f,0.6405513f,0.2548143f,0.6919893f,0.6751633f,0.5921342f,0.184623f,0.6535971f,0.7797649f,0.5363553f,0.141718f,0.6006548f,0.8708069f,0.5474689f,0.9420425f,0.508383f,0.9883093f,0.4939282f,1.0059639f,0.4662578f,0.989254f,0.4180126f,0.9449458f,0.3620617f,0.8761578f,0.3133048f,0.7873965f,0.2846855f,0.6842978f,0.2837321f,0.5733534f,0.3105494f,0.4616117f,0.3284335f,0.3550411f,0.3423842f,0.2615012f,0.3812982f,0.1893513f,0.434656f,0.1439988f,0.6692288f,0.4557456f,0.6500167f,0.3497816f,0.6978995f,0.5665797f,0.6352447f,0.2567114f,0.6988529f,0.6775241f,0.595687f,0.185845f,0.6719842f,0.7815303f,0.5418504f,0.1422457f,0.6246333f,0.8718634f,0.5696083f,0.9424664f,0.5217457f,0.9883465f,0.4547341f,0.9898493f,0.4008976f,0.94625f,0.3467858f,0.8780946f,0.3068056f,0.78972f,0.2915491f,0.6866585f,0.3049638f,0.5753919f,0.3433047f,0.4630549f,0.3578011f,0.356335f,0.3573973f,0.2629426f,0.384851f,0.1905733f,0.4327137f,0.1446932f,0.6361652f,0.4582652f,0.6203726f,0.3520407f,0.6762961f,0.5693187f,0.6199688f,0.2586483f,0.691604f,0.6801156f,0.5919347f,0.1871865f,0.6781379f,0.7836469f,0.5436895f,0.1428782f,0.6396463f,0.8733049f,0.5865637f,0.9432135f,0.5332059f,0.9885659f,0.4458748f,0.9905245f,0.3900959f,0.9476196f,0.3414793f,0.8799917f,0.3129593f,0.7918366f,0.3120573f,0.6886276f,0.3388746f,0.576886f,0.3860748f,0.4638739f,0.3961477f,0.3570693f,0.3813758f,0.2639991f,0.3954669f,0.1915926f,0.4345528f,0.1453258f,0.5931585f,0.460487f,0.5818138f,0.3540327f,0.6420661f,0.5719273f,0.5957646f,0.2604928f,0.6707367f,0.6827614f,0.581133f,0.188556f,0.6716387f,0.7859704f,0.5417472f,0.1435726f,0.6446708f,0.875033f,0.5971795f,0.9442327f,0.5419826f,0.9889526f,0.4402834f,0.9912334f,0.3863436f,0.948961f,0.3465037f,0.8817199f,0.3313464f,0.793602f,0.3448125f,0.6900707f,0.3831534f,0.5777338f,0.4359451f,0.4640128f,0.4408602f,0.3571938f,0.4126857f,0.2645986f,0.4124222f,0.1923396f,0.4400479f,0.1458534f,0.5431395f,0.4622596f,0.536968f,0.355622f,0.5975422f,0.5742275f,0.5642814f,0.2621193f,0.6376731f,0.685281f,0.564018f,0.1898603f,0.6529296f,0.7883425f,0.5361558f,0.1442815f,0.6393642f,0.8769302f,0.6007323f,0.9454547f,0.5474778f,0.9894802f,0.4383411f,0.9919278f,0.3898964f,0.9501831f,0.3615168f,0.8831614f,0.360714f,0.7948959f,0.3875827f,0.6908897f,0.4347829f,0.5778776f,0.4895169f,0.4634622f,0.4888914f,0.3567002f,0.4491933f,0.2647003f,0.4345617f,0.1927635f,0.4488247f,0.1462401f,0.5457587f,0.5760626f,0.527665f,0.2634169f,0.5946663f,0.6875029f,0.5417561f,0.1910104f,0.6232856f,0.7906016f,0.5272964f,0.1449567f,0.6240883f,0.878867f,0.59698f,0.9467962f,0.5493169f,0.9901128f,0.4401801f,0.9925604f,0.4005122f,0.9512023f,0.3854953f,0.8842179f,0.3990607f,0.7956302f,0.4374529f,0.6910286f,0.4902446f,0.5773076f,0.4884106f,0.2642972f,0.4603764f,0.1928354f,0.4602849f,0.1464595f,0.5446473f,0.6892755f,0.5158643f,0.1919279f,0.5847268f,0.7925936f,0.5157728f,0.145552f,0.5998841f,0.8807115f,0.5861783f,0.9481658f,0.5473745f,0.9908072f,0.4456753f,0.993088f,0.4174676f,0.9519494f,0.4168052f,0.8848174f,0.4437731f,0.7957547f,0.4910248f,0.690478f,0.4881072f,0.1925504f,0.4736476f,0.1464967f,0.539881f,0.7941829f,0.5023702f,0.146027f,0.568401f,0.882338f,0.5690634f,0.94947f,0.5417832f,0.9915161f,0.454452f,0.9934747f,0.439607f,0.9523733f,0.4533128f,0.8849191f,0.4918043f,0.7952611f,0.4880021f,0.1463492f,0.5317845f,0.8836357f,0.5468014f,0.9506201f,0.5329238f,0.9921913f,0.4659123f,0.9936941f,0.4654218f,0.9524452f,0.4925301f,0.884516f,0.5209097f,0.9515377f,0.5214002f,0.9927866f,0.479275f,0.9937313f,0.4931526f,0.9521602f,0.5079976f,0.9932616f,0.4936295f,0.9935838f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
4,0,5,1,6,2,7,3,6,2,5,1,5,1,10,4,7,3,11,5,7,3,10,4,14,6,15,7,4,0,5,1,4,0,15,7,18,8,4,0,19,9,6,2,19,9,4,0,6,2,7,3,22,10,23,11,22,10,7,3,26,12,27,13,10,4,11,5,10,4,27,13,15,7,29,14,5,1,10,4,5,1,29,14,7,3,11,5,23,11,31,15,23,11,11,5,34,16,35,17,14,6,15,7,14,6,35,17,37,18,14,6,18,8,4,0,18,8,14,6,40,19,18,8,41,20,19,9,41,20,18,8,19,9,6,2,43,21,22,10,43,21,6,2,46,22,22,10,47,23,23,11,47,23,22,10,50,24,51,25,26,12,27,13,26,12,51,25,53,26,26,12,29,14,10,4,29,14,26,12,27,13,55,27,11,5,31,15,11,5,55,27,35,17,57,28,15,7,29,14,15,7,57,28,47,23,23,11,59,29,31,15,59,29,23,11,62,30,63,31,34,16,35,17,34,16,63,31,65,32,34,16,37,18,14,6,37,18,34,16,67,33,37,18,40,19,18,8,40,19,37,18,70,34,71,35,41,20,40,19,41,20,71,35,41,20,19,9,73,36,43,21,73,36,19,9,43,21,22,10,75,37,46,22,75,37,22,10,78,38,46,22,79,39,47,23,79,39,46,22,82,40,51,25,83,41,50,24,83,41,51,25,85,42,50,24,53,26,26,12,53,26,50,24,51,25,87,43,27,13,55,27,27,13,87,43,89,44,53,26,57,28,29,14,57,28,53,26,59,29,31,15,91,45,55,27,91,45,31,15,63,31,93,46,35,17,57,28,35,17,93,46,79,39,47,23,95,47,59,29,95,47,47,23,98,48,99,49,62,30,63,31,62,30,99,49,101,50,62,30,65,32,34,16,65,32,62,30,103,51,65,32,67,33,37,18,67,33,65,32,71,35,105,52,40,19,67,33,40,19,105,52,108,53,109,54,70,34,71,35,70,34,109,54,111,55,70,34,73,36,41,20,73,36,70,34,73,36,43,21,113,56,75,37,113,56,43,21,75,37,46,22,115,57,78,38,115,57,46,22,79,39,117,58,78,38,120,59,82,40,121,60,83,41,121,60,82,40,83,41,50,24,123,61,85,42,123,61,50,24,125,62,87,43,82,40,51,25,82,40,87,43,128,63,129,64,89,44,129,64,85,42,89,44,53,26,89,44,85,42,91,45,55,27,131,65,87,43,131,65,55,27,133,66,89,44,93,46,57,28,93,46,89,44,95,47,59,29,135,67,91,45,135,67,59,29,99,49,137,68,63,31,93,46,63,31,137,68,79,39,95,47,117,58,98,48,140,69,99,49,141,70,99,49,140,69,143,71,98,48,101,50,62,30,101,50,98,48,145,72,101,50,103,51,65,32,103,51,101,50,147,73,103,51,105,52,67,33,105,52,103,51,109,54,149,74,71,35,105,52,71,35,149,74,152,75,153,76,108,53,109,54,108,53,153,76,155,77,108,53,111,55,70,34,111,55,108,53,111,55,73,36,157,78,113,56,157,78,73,36,113,56,75,37,159,79,115,57,159,79,75,37,78,38,117,58,115,57,162,80,120,59,163,81,121,60,163,81,120,59,121,60,83,41,165,82,123,61,165,82,83,41,167,83,125,62,120,59,82,40,120,59,125,62,169,84,123,61,128,63,128,63,123,61,129,64,85,42,129,64,123,61,131,65,87,43,171,85,125,62,171,85,87,43,173,86,128,63,133,66,89,44,133,66,128,63,135,67,91,45,175,87,131,65,175,87,91,45,177,88,133,66,137,68,93,46,137,68,133,66,95,47,135,67,117,58,141,70,179,89,99,49,137,68,99,49,179,89,140,69,182,90,141,70,183,91,141,70,182,90,143,71,185,92,98,48,140,69,98,48,185,92,187,93,143,71,145,72,101,50,145,72,143,71,189,94,145,72,147,73,103,51,147,73,145,72,191,95,147,73,149,74,105,52,149,74,147,73,153,76,193,96,109,54,149,74,109,54,193,96,196,97,197,98,152,75,153,76,152,75,197,98,199,99,152,75,155,77,108,53,155,77,152,75,155,77,111,55,201,100,157,78,201,100,111,55,157,78,113,56,203,101,159,79,203,101,113,56,115,57,117,58,159,79,206,102,162,80,207,103,163,81,207,103,162,80,163,81,121,60,209,104,165,82,209,104,121,60,211,105,167,83,162,80,120,59,162,80,167,83,213,106,165,82,169,84,123,61,169,84,165,82,171,85,125,62,215,107,167,83,215,107,125,62,217,108,169,84,173,86,128,63,173,86,169,84,175,87,131,65,219,109,171,85,219,109,131,65,221,110,173,86,177,88,133,66,177,88,173,86,135,67,175,87,117,58,179,89,223,111,137,68,177,88,137,68,223,111,183,91,225,112,141,70,179,89,141,70,225,112,227,113,183,91,182,90,185,92,229,114,140,69,182,90,140,69,229,114,187,93,231,115,143,71,185,92,143,71,231,115,233,116,187,93,189,94,145,72,189,94,187,93,235,117,189,94,191,95,147,73,191,95,189,94,237,118,191,95,193,96,149,74,193,96,191,95,197,98,239,119,153,76,193,96,153,76,239,119,242,120,197,98,243,121,196,97,243,121,197,98,245,122,196,97,199,99,152,75,199,99,196,97,247,123,199,99,201,100,155,77,201,100,199,99,201,100,157,78,249,124,203,101,249,124,157,78,159,79,117,58,203,101,252,125,253,126,207,103,206,102,207,103,253,126,207,103,163,81,255,127,209,104,255,127,163,81,257,128,211,105,206,102,162,80,206,102,211,105,259,129,209,104,213,106,165,82,213,106,209,104,215,107,167,83,261,130,211,105,261,130,167,83,263,131,213,106,217,108,169,84,217,108,213,106,219,109,171,85,265,132,215,107,265,132,171,85,267,133,217,108,221,110,173,86,221,110,217,108,175,87,219,109,117,58,223,111,269,134,177,88,221,110,177,88,269,134,225,112,271,135,179,89,223,111,179,89,271,135,225,112,183,91,227,113,227,113,182,90,229,114,231,115,273,136,185,92,229,114,185,92,273,136,233,116,275,137,187,93,231,115,187,93,275,137,277,138,233,116,235,117,189,94,235,117,233,116,279,139,235,117,237,118,191,95,237,118,235,117,239,119,281,140,193,96,237,118,193,96,281,140,283,141,239,119,242,120,197,98,242,120,239,119,286,142,242,120,287,143,243,121,287,143,242,120,243,121,196,97,289,144,245,122,289,144,196,97,291,145,245,122,247,123,199,99,247,123,245,122,247,123,201,100,293,146,249,124,293,146,201,100,203,101,117,58,249,124,296,147,297,148,252,125,253,126,252,125,297,148,299,149,252,125,255,127,207,103,255,127,252,125,253,126,301,150,206,102,257,128,206,102,301,150,255,127,209,104,303,151,259,129,303,151,209,104,305,152,261,130,257,128,211,105,257,128,261,130,307,153,259,129,263,131,213,106,263,131,259,129,265,132,215,107,309,154,261,130,309,154,215,107,311,155,263,131,267,133,217,108,267,133,263,131,219,109,265,132,117,58,269,134,313,156,221,110,267,133,221,110,313,156,271,135,315,157,223,111,269,134,223,111,315,157,271,135,225,112,227,113,227,113,229,114,273,136,275,137,317,158,231,115,273,136,231,115,317,158,277,138,319,159,233,116,275,137,233,116,319,159,321,160,277,138,279,139,235,117,279,139,277,138,281,140,323,161,237,118,279,139,237,118,323,161,283,141,325,162,239,119,281,140,239,119,325,162,327,163,283,141,286,142,242,120,286,142,283,141,330,164,286,142,331,165,287,143,331,165,286,142,287,143,243,121,333,166,289,144,333,166,243,121,245,122,291,145,289,144,335,167,289,144,291,145,247,123,293,146,291,145,337,168,291,145,293,146,249,124,117,58,293,146,340,169,341,170,296,147,297,148,296,147,341,170,343,171,296,147,299,149,252,125,299,149,296,147,297,148,345,172,253,126,301,150,253,126,345,172,299,149,255,127,347,173,303,151,347,173,255,127,349,174,305,152,301,150,257,128,301,150,305,152,303,151,259,129,351,175,307,153,351,175,259,129,353,176,309,154,305,152,261,130,305,152,309,154,355,177,307,153,311,155,263,131,311,155,307,153,265,132,309,154,117,58,313,156,357,178,267,133,311,155,267,133,357,178,315,157,359,179,269,134,313,156,269,134,359,179,315,157,271,135,227,113,227,113,273,136,317,158,319,159,361,180,275,137,317,158,275,137,361,180,321,160,363,181,277,138,319,159,277,138,363,181,323,161,365,182,279,139,321,160,279,139,365,182,325,162,367,183,281,140,323,161,281,140,367,183,327,163,369,184,283,141,325,162,283,141,369,184,371,185,327,163,330,164,286,142,330,164,327,163,374,186,330,164,375,187,331,165,375,187,330,164,331,165,287,143,377,188,333,166,377,188,287,143,289,144,335,167,333,166,379,189,333,166,335,167,291,145,337,168,335,167,381,190,335,167,337,168,117,58,337,168,293,146,384,191,385,192,340,169,341,170,340,169,385,192,387,193,340,169,343,171,296,147,343,171,340,169,341,170,389,194,297,148,345,172,297,148,389,194,343,171,299,149,391,195,347,173,391,195,299,149,393,196,349,174,345,172,301,150,345,172,349,174,347,173,303,151,395,197,351,175,395,197,303,151,397,198,353,176,349,174,305,152,349,174,353,176,351,175,307,153,399,199,355,177,399,199,307,153,309,154,353,176,117,58,401,200,355,177,357,178,311,155,357,178,355,177,359,179,403,201,313,156,357,178,313,156,403,201,359,179,315,157,227,113,227,113,317,158,361,180,363,181,405,202,319,159,361,180,319,159,405,202,321,160,365,182,363,181,407,203,363,181,365,182,367,183,409,204,323,161,365,182,323,161,409,204,369,184,411,205,325,162,367,183,325,162,411,205,413,206,369,184,371,185,327,163,371,185,369,184,415,207,371,185,374,186,330,164,374,186,371,185,374,186,375,187,418,208,419,209,418,208,375,187,375,187,331,165,421,210,377,188,421,210,331,165,333,166,379,189,377,188,423,211,377,188,379,189,335,167,381,190,379,189,425,212,379,189,381,190,117,58,381,190,337,168,418,208,419,209,384,191,385,192,384,191,419,209,427,213,384,191,387,193,340,169,387,193,384,191,385,192,429,214,341,170,389,194,341,170,429,214,431,215,387,193,391,195,343,171,391,195,387,193,433,216,393,196,389,194,345,172,389,194,393,196,391,195,347,173,435,217,395,197,435,217,347,173,437,218,397,198,393,196,349,174,393,196,397,198,395,197,351,175,439,219,399,199,439,219,351,175,353,176,397,198,117,58,399,199,355,177,441,220,401,200,441,220,355,177,403,201,443,221,357,178,401,200,357,178,443,221,403,201,359,179,227,113,227,113,361,180,405,202,363,181,407,203,405,202,445,222,405,202,407,203,365,182,409,204,407,203,447,223,407,203,409,204,411,205,449,224,367,183,409,204,367,183,449,224,451,225,411,205,413,206,369,184,413,206,411,205,453,226,413,206,415,207,371,185,415,207,413,206,415,207,374,186,455,227,418,208,455,227,374,186,375,187,421,210,419,209,457,228,419,209,421,210,377,188,423,211,421,210,459,229,421,210,423,211,379,189,425,212,423,211,461,230,423,211,425,212,117,58,425,212,381,190,455,227,418,208,427,213,384,191,427,213,418,208,419,209,457,228,385,192,429,214,385,192,457,228,463,231,427,213,431,215,387,193,431,215,427,213,465,232,433,216,429,214,389,194,429,214,433,216,467,233,431,215,435,217,391,195,435,217,431,215,469,234,437,218,433,216,393,196,433,216,437,218,435,217,395,197,471,235,439,219,471,235,395,197,397,198,437,218,117,58,473,236,439,219,441,220,399,199,441,220,439,219,475,237,441,220,443,221,401,200,443,221,441,220,443,221,403,201,227,113,445,222,227,113,405,202,407,203,447,223,445,222,477,238,445,222,447,223,409,204,449,224,447,223,479,239,447,223,449,224,481,240,449,224,451,225,411,205,451,225,449,224,483,241,451,225,453,226,413,206,453,226,451,225,453,226,415,207,485,242,455,227,485,242,415,207,459,229,487,243,421,210,457,228,421,210,487,243,423,211,461,230,459,229,489,244,459,229,461,230,117,58,461,230,425,212,485,242,455,227,463,231,427,213,463,231,455,227,487,243,465,232,457,228,429,214,457,228,465,232,491,245,463,231,467,233,431,215,467,233,463,231,493,246,469,234,465,232,433,216,465,232,469,234,495,247,467,233,471,235,435,217,471,235,467,233,437,218,469,234,117,58,497,248,471,235,473,236,439,219,473,236,471,235,499,249,473,236,475,237,441,220,475,237,473,236,475,237,443,221,227,113,477,238,227,113,445,222,447,223,479,239,477,238,501,250,477,238,479,239,449,224,481,240,479,239,503,251,479,239,481,240,505,252,481,240,483,241,451,225,483,241,481,240,483,241,453,226,507,253,485,242,507,253,453,226,489,244,509,254,459,229,487,243,459,229,509,254,117,58,489,244,461,230,507,253,485,242,491,245,463,231,491,245,485,242,509,254,493,246,487,243,465,232,487,243,493,246,511,255,491,245,495,247,467,233,495,247,491,245,469,234,493,246,117,58,513,256,495,247,497,248,471,235,497,248,495,247,515,257,497,248,499,249,473,236,499,249,497,248,499,249,475,237,227,113,501,250,227,113,477,238,479,239,503,251,501,250,517,258,501,250,503,251,481,240,505,252,503,251,519,259,503,251,505,252,505,252,483,241,521,260,507,253,521,260,483,241,117,58,509,254,489,244,521,260,507,253,511,255,491,245,511,255,507,253,117,58,493,246,509,254,523,261,511,255,513,256,495,247,513,256,511,255,525,262,513,256,515,257,497,248,515,257,513,256,515,257,499,249,227,113,517,258,227,113,501,250,503,251,519,259,517,258,527,263,517,258,519,259,505,252,521,260,519,259,529,264,519,259,521,260,529,264,521,260,523,261,511,255,523,261,521,260,531,265,523,261,525,262,513,256,525,262,523,261,525,262,515,257,227,113,527,263,227,113,517,258,519,259,529,264,527,263,533,266,527,263,529,264,533,266,529,264,531,265,523,261,531,265,529,264,531,265,525,262,227,113,533,266,227,113,527,263,531,265,227,113,533,266,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID191(GL2 gl){
double[] positionsArray = {
41.7235916,8.1789866,21.796417,41.7132037,5.1644366,21.5377799,41.7235916,5.1644366,21.796417,41.7132037,8.1789866,21.5377799,42.1114099,5.1644366,22.0678043,41.7235916,8.1789866,21.796417,41.7235916,5.1644366,21.796417,41.7516521,8.1789866,21.8160532,42.1051433,8.1789866,22.063419,42.1114099,8.1789866,22.0678043,41.7132037,8.1789866,21.5377799,41.6909764,8.1789866,21.5384985,41.9581934,8.1789866,21.2810796,41.7235916,8.1789866,21.796417,41.7013643,8.1789866,21.7971356,41.7516521,8.1789866,21.8160532,42.0492109,8.1789866,21.6780025,41.7132037,5.1644366,21.5377799,41.7132037,8.1789866,21.5377799,42.636653,8.1789866,21.9231539,42.0645058,8.1789866,21.6843853,42.1491628,8.1789866,21.7197144,42.1563826,8.1789866,21.7227274,42.5963626,8.1789866,21.9063399,42.6050306,8.1789866,21.9099572,42.6068093,8.1789866,21.9106995,42.1114099,5.1644366,22.0678043,43.6555155,5.1644366,21.4587541,44.0641954,5.1644366,21.4433543,41.9856284,5.1644366,21.7651852,41.7235916,5.1644366,21.796417,43.579846,5.1644366,20.132111,41.7132037,5.1644366,21.5377799,43.1880012,5.1644366,19.9924822,43.2466072,5.1644366,21.4516444,44.0641954,5.1644366,21.4433543,42.1114099,8.1789866,22.0678043,42.1114099,5.1644366,22.0678043,42.2786833,8.1789866,22.0143146,42.6050306,8.1789866,21.9099572,42.6361136,8.1789866,21.9000177,42.6577027,8.1789866,21.8931141,42.7777008,8.1789866,21.8547418,43.4175124,8.1789866,21.6501467,44.0641954,8.1789866,21.4433543,44.0641954,5.4384866,21.4433543,41.7516521,8.1789866,21.8160532,42.0891826,8.1789866,22.0685229,41.7013643,8.1789866,21.7971356,42.1051433,8.1789866,22.063419,42.4314462,8.1789866,20.8251798,42.4259233,8.1789866,20.7909921,42.5865525,8.1789866,20.6757609,42.5836368,8.1789866,20.6031659,41.6909764,8.1789866,21.5384985,41.9581934,8.1789866,21.2810796,42.5963626,8.1789866,21.9063399,41.9856284,8.1789866,21.7651852,42.1563826,8.1789866,21.7227274,41.9634011,8.1789866,21.7659038,41.7235916,8.1789866,21.796417,41.7516521,8.1789866,21.8160532,42.269503,8.1789866,22.0108611,42.0492109,8.1789866,21.6780025,41.7132037,8.1789866,21.5377799,41.9918268,8.1789866,21.7588358,42.6237425,8.1789866,21.6017107,42.4984393,8.1789866,21.2398754,42.6048323,8.1789866,21.1308892,42.0645058,8.1789866,21.6843853,42.5594744,8.1789866,21.6176909,42.5602212,8.1789866,21.6223134,42.6056264,8.1789866,21.9033776,41.7235916,8.1789866,21.796417,41.7516521,8.1789866,21.8160532,42.1051433,8.1789866,22.063419,42.6050306,8.1789866,21.9099572,42.2786833,8.1789866,22.0143146,42.1114099,8.1789866,22.0678043,42.0492109,8.1789866,21.6780025,41.7132037,8.1789866,21.5377799,41.7013643,11.1935366,21.7971356,41.6909764,8.1789866,21.5384985,41.7013643,8.1789866,21.7971356,41.6909764,11.1935366,21.5384985,41.9918268,8.1789866,21.7588358,42.1491628,8.1789866,21.7197144,42.0645058,8.1789866,21.6843853,42.6056264,8.1789866,21.9033776,42.1563826,8.1789866,21.7227274,42.5602212,8.1789866,21.6223134,42.5963626,8.1789866,21.9063399,42.636653,8.1789866,21.9231539,43.1880012,5.1644366,19.9924822,41.7132037,5.1644366,21.5377799,43.579846,5.4384866,20.132111,43.1880012,5.1644366,19.9924822,43.1880012,5.4384866,19.9924822,43.579846,5.1644366,20.132111,43.579846,5.4384866,20.132111,41.9856284,5.1644366,21.7651852,43.579846,5.1644366,20.132111,41.9856284,5.4384866,21.7651852,43.2466072,5.4384866,21.4516444,41.9856284,5.1644366,21.7651852,41.9856284,5.4384866,21.7651852,43.2466072,5.1644366,21.4516444,43.6555155,5.4384866,21.4587541,43.2466072,5.1644366,21.4516444,43.2466072,5.4384866,21.4516444,43.6555155,5.1644366,21.4587541,44.0641954,5.4384866,21.4433543,44.0641954,5.1644366,21.4433543,44.0419681,8.1789866,21.4440729,43.6555155,5.4384866,21.4587541,43.6555155,8.1789866,21.4587541,44.0641954,5.4384866,21.4433543,44.0641954,8.1789866,21.4433543,46.4088167,8.1789866,21.5584121,44.0641954,8.1789866,21.4433543,46.8475487,8.1789866,21.3608998,43.4175124,8.1789866,21.6501467,45.9598819,8.1789866,21.7314854,43.2424534,8.1789866,21.4526772,43.2243799,8.1789866,21.452363,43.2466072,8.1789866,21.4516444,49.9426345,8.1789866,16.387447,43.2667206,8.1789866,20.0205328,48.8604084,8.1789866,14.6319516,48.3589882,8.1789866,17.331576,48.0894139,8.1789866,20.628072,43.2601743,8.1789866,20.0268391,43.5576187,8.1789866,20.1328296,43.1324822,8.1789866,20.5683282,43.042899,8.1789866,21.497488,47.6891221,8.1789866,20.895024,47.2747486,8.1789866,21.1395469,44.0419681,8.1789866,21.4440729,43.653355,8.1789866,21.4587166,43.6555155,8.1789866,21.4587541,42.7764821,8.1789866,21.8487424,43.4265802,8.1789866,21.6408579,45.5021043,8.1789866,21.8795953,42.7777008,8.1789866,21.8547418,42.8535045,8.1789866,22.2279014,45.036871,8.1789866,22.0022932,44.5655913,8.1789866,22.0992072,44.0896932,8.1789866,22.1700438,43.6328457,8.1789866,22.2138697,43.6106184,8.1789866,22.2145883,43.1498853,8.1789866,22.2319496,43.1520458,8.1789866,22.2319872,43.1298184,8.1789866,22.2327058,42.6774451,8.1789866,21.8804118,42.6577027,8.1789866,21.8931141,42.6574493,8.1789866,21.886806,42.6354753,8.1789866,21.8938327,42.6361136,8.1789866,21.9000177,43.6041442,8.1789866,21.458966,43.6332881,8.1789866,21.4594727,42.7222987,8.1789866,21.5820131,42.7644058,8.1789866,21.7892941,43.0368824,8.1789866,21.5037922,42.6615769,8.1789866,21.5971115,42.6774451,8.1789866,21.8804118,42.7764821,8.1789866,21.8487424,42.7777008,8.1789866,21.8547418,42.6577027,8.1789866,21.8931141,42.6574493,8.1789866,21.886806,43.4175124,8.1789866,21.6501467,43.4265802,8.1789866,21.6408579,42.6684598,8.1789866,22.1609428,42.6361136,8.1789866,21.9000177,42.6577027,8.1789866,21.8931141,42.636653,8.1789866,21.9231539,42.6458621,8.1789866,22.1524419,42.1051433,8.1789866,22.063419,41.7516521,8.1789866,21.8160532,42.269503,8.1789866,22.0108611,42.1051433,8.1789866,22.063419,42.0891826,11.1935366,22.0685229,42.0891826,8.1789866,22.0685229,44.0419681,11.1935366,21.4440729,42.269503,8.1789866,22.0108611,42.5963626,8.1789866,21.9063399,42.6056264,8.1789866,21.9033776,42.6354753,8.1789866,21.8938327,42.6574493,8.1789866,21.886806,42.6774451,8.1789866,21.8804118,42.7764821,8.1789866,21.8487424,43.4265802,8.1789866,21.6408579,44.0419681,8.1789866,21.4440729,44.0419681,10.9194866,21.4440729,42.0891826,8.1789866,22.0685229,41.7013643,11.1935366,21.7971356,41.7013643,8.1789866,21.7971356,42.0891826,11.1935366,22.0685229,42.6039817,8.1789866,21.10971,42.4314462,8.1789866,20.8251798,42.5865525,8.1789866,20.6757609,42.4953829,8.1789866,21.2209558,41.6909764,11.1935366,21.5384985,42.5836368,8.1789866,20.6031659,41.6909764,8.1789866,21.5384985,42.6049942,8.1789866,20.5807876,43.1657739,8.1789866,19.9932008,43.1657739,9.1684141,19.9932008,43.1657739,10.1578417,19.9932008,43.1657739,10.9194866,19.9932008,43.1657739,11.1935366,19.9932008,43.187196,8.1789866,20.0008343,42.6049942,8.1789866,20.5807876,43.1657739,8.1789866,19.9932008,43.17696,8.1789866,20.1070021,42.6087717,8.1789866,20.6543564,42.5836368,8.1789866,20.6031659,42.6071115,8.1789866,20.6559557,42.5865525,8.1789866,20.6757609,43.5576187,10.9194866,20.1328296,43.1324822,8.1789866,20.5683282,43.5576187,8.1789866,20.1328296,42.6326329,8.1789866,21.0803606,42.6253584,8.1789866,21.0878123,42.6173699,8.1789866,21.0959955,42.6039817,8.1789866,21.10971,42.4953829,8.1789866,21.2209558,42.0492109,8.1789866,21.6780025,41.9634011,8.1789866,21.7659038,41.9634011,10.9194866,21.7659038,43.2243799,10.9194866,21.452363,41.9634011,8.1789866,21.7659038,41.9634011,10.9194866,21.7659038,41.9918268,8.1789866,21.7588358,42.1491628,8.1789866,21.7197144,42.5594744,8.1789866,21.6176909,42.6237425,8.1789866,21.6017107,42.6291282,8.1789866,21.6003716,42.6457786,8.1789866,21.5962315,42.6613113,8.1789866,21.5923693,42.7213689,8.1789866,21.577436,43.042899,8.1789866,21.497488,43.2243799,8.1789866,21.452363,43.579846,5.4384866,20.132111,41.9856284,8.1789866,21.7651852,41.9856284,5.4384866,21.7651852,42.626209,8.1789866,21.1089914,42.617872,8.1789866,21.1175317,42.6048323,8.1789866,21.1308892,42.4984393,8.1789866,21.2398754,42.0645058,8.1789866,21.6843853,41.9918268,8.1789866,21.7588358,42.4984393,8.1789866,21.2398754,42.6237425,8.1789866,21.6017107,42.6048323,8.1789866,21.1308892,42.5594744,8.1789866,21.6176909,42.6291282,8.1789866,21.6003716,42.6048323,8.1789866,21.1308892,42.617872,8.1789866,21.1175317,42.6237425,8.1789866,21.6017107,42.6354753,8.1789866,21.8938327,42.5602212,8.1789866,21.6223134,42.6239337,8.1789866,21.6064714,42.6056264,8.1789866,21.9033776,42.8430319,8.1789866,22.2266143,42.6684598,8.1789866,22.1609428,42.6709773,8.1789866,22.2236227,42.6577027,8.1789866,21.8931141,42.8535045,8.1789866,22.2279014,42.7777008,8.1789866,21.8547418,42.6684598,8.1789866,22.1609428,42.8430319,8.1789866,22.2266143,41.9634011,11.1935366,21.7659038,43.6332881,11.1935366,21.4594727,43.2243799,11.1935366,21.452363,41.6909764,11.1935366,21.5384985,43.5576187,11.1935366,20.1328296,43.1657739,11.1935366,19.9932008,41.7013643,11.1935366,21.7971356,42.0891826,11.1935366,22.0685229,44.0419681,11.1935366,21.4440729,42.0492109,8.1789866,21.6780025,42.4984393,8.1789866,21.2398754,42.4953829,8.1789866,21.2209558,42.0645058,8.1789866,21.6843853,42.636653,8.1789866,21.9231539,42.6058641,8.1789866,20.6024473,43.1880012,5.1644366,19.9924822,42.6361136,8.1789866,21.9000177,42.6354753,8.1789866,21.8938327,42.6292396,8.1789866,21.6051521,42.6291282,8.1789866,21.6003716,42.617872,8.1789866,21.1175317,42.6173699,8.1789866,21.0959955,42.6071115,8.1789866,20.6559557,43.2667206,8.1789866,20.0205328,43.1880012,7.1895591,19.9924822,43.1880012,8.1789866,19.9924822,43.1880012,6.2001315,19.9924822,43.1880012,5.4384866,19.9924822,43.579846,5.4384866,20.132111,43.579846,8.1789866,20.132111,43.9277527,4.7533616,19.2956703,43.1880012,5.4384866,19.9924822,43.6456245,4.7533616,19.1951376,43.579846,5.4384866,20.132111,43.042899,8.1789866,21.497488,43.1880012,5.4384866,19.9924822,43.1880012,5.1644366,19.9924822,43.1880012,6.2001315,19.9924822,43.1880012,7.1895591,19.9924822,43.1880012,8.1789866,19.9924822,43.1324822,8.1789866,20.5683282,43.17696,8.1789866,20.1070021,43.187196,8.1789866,20.0008343,43.1581873,5.2025714,19.2501791,43.1880012,5.4384866,19.9924822,43.1880012,5.1644366,19.9924822,43.165238,5.4384866,19.425728,43.9476511,5.4384866,20.4788057,41.9856284,5.4384866,21.7651852,43.579846,5.4384866,20.132111,43.9892453,5.4384866,20.6909057,44.5231935,5.4384866,20.6114284,43.2466072,5.4384866,21.4516444,42.1563826,8.1789866,21.7227274,41.9856284,5.4384866,21.7651852,41.9856284,8.1789866,21.7651852,43.2466072,5.4384866,21.4516444,42.5602212,8.1789866,21.6223134,42.6239337,8.1789866,21.6064714,42.6292396,8.1789866,21.6051521,42.6459698,8.1789866,21.6009921,42.6615769,8.1789866,21.5971115,42.7222987,8.1789866,21.5820131,43.0368824,8.1789866,21.5037922,43.2424534,8.1789866,21.4526772,43.2466072,8.1789866,21.4516444,43.6041442,8.1789866,21.458966,43.2466072,5.4384866,21.4516444,43.2466072,8.1789866,21.4516444,43.6332881,8.1789866,21.4594727,43.653355,8.1789866,21.4587166,43.9822347,4.7533616,20.2508534,43.2466072,5.4384866,21.4516444,43.6878208,4.7533616,20.2457344,43.6555155,5.4384866,21.4587541,44.0641954,5.4384866,21.4433543,44.2764843,4.7533616,20.2397655,43.6555155,5.4384866,21.4587541,43.6106184,8.1789866,22.2145883,43.1520458,8.1789866,22.2319872,43.6328457,8.1789866,22.2138697,44.0641954,5.4384866,21.4433543,43.6332881,8.1789866,21.4594727,43.6555155,8.1789866,21.4587541,43.653355,8.1789866,21.4587166,43.4265802,8.1789866,21.6408579,43.6041442,8.1789866,21.458966,44.0419681,8.1789866,21.4440729,44.0419681,10.9194866,21.4440729,43.6332881,8.1789866,21.4594727,43.6332881,10.9194866,21.4594727,43.653355,8.1789866,21.4587166,43.6555155,8.1789866,21.4587541,44.0419681,8.1789866,21.4440729,43.2667206,8.1789866,20.0205328,49.9426345,8.1789866,16.387447,48.8604084,8.1789866,14.6319516,48.3589882,8.1789866,17.331576,48.0894139,8.1789866,20.628072,43.579846,8.1789866,20.132111,43.6041442,8.1789866,21.458966,47.6891221,8.1789866,20.895024,47.2747486,8.1789866,21.1395469,44.0419681,8.1789866,21.4440729,44.0641954,8.1789866,21.4433543,46.8475487,8.1789866,21.3608998,43.653355,8.1789866,21.4587166,43.6332881,8.1789866,21.4594727,43.6555155,8.1789866,21.4587541,43.1298184,8.1789866,22.2327058,43.1498853,8.1789866,22.2319496,42.8535045,8.1789866,22.2279014,46.4088167,8.1789866,21.5584121,43.4175124,8.1789866,21.6501467,45.9598819,8.1789866,21.7314854,45.5021043,8.1789866,21.8795953,45.036871,8.1789866,22.0022932,44.5655913,8.1789866,22.0992072,44.0896932,8.1789866,22.1700438,43.6328457,8.1789866,22.2138697,43.6106184,8.1789866,22.2145883,43.1520458,8.1789866,22.2319872,43.1657739,8.1789866,19.9932008,43.187196,8.1789866,20.0008343,47.3114873,8.1789866,12.1194228,45.5528051,8.1789866,13.490045,47.240706,8.1789866,12.0371904,42.3499658,8.1789866,14.2311357,42.6049942,8.1789866,20.5807876,50.0057814,8.1789866,15.2496063,48.8604084,8.1789866,14.6319516,49.1959288,8.1789866,14.3087339,49.9426345,8.1789866,16.387447,50.0254775,8.1789866,15.2826439,48.3589882,8.1789866,17.331576,49.8891828,10.9194866,16.2137812,48.0780825,10.9194866,17.2935124,49.9426345,8.1789866,16.387447,50.4896945,8.1789866,16.061304,48.0780825,10.9194866,17.2935124,48.0894139,8.1789866,20.628072,48.3589882,8.1789866,17.331576,47.8489443,10.9194866,20.095534,47.6891221,8.1789866,20.895024,47.8489443,10.9194866,20.095534,47.5086963,10.9194866,20.3224433,48.0894139,8.1789866,20.628072,47.2747486,8.1789866,21.1395469,47.1564788,10.9194866,20.5302877,46.8475487,8.1789866,21.3608998,46.7933589,10.9194866,20.7184377,46.4204367,10.9194866,20.8863231,46.4088167,8.1789866,21.5584121,46.0388421,10.9194866,21.0334354,45.9598819,8.1789866,21.7314854,45.6497312,10.9194866,21.1593289,45.5021043,8.1789866,21.8795953,45.2542828,10.9194866,21.263622,45.036871,8.1789866,22.0022932,44.8536951,10.9194866,21.345999,44.5655913,8.1789866,22.0992072,44.4491817,10.9194866,21.40621,44.0896932,8.1789866,22.1700438,44.6154766,10.9194866,21.3814573,43.6328457,8.1789866,22.2138697,44.0419681,10.9194866,21.4440729,43.6106184,8.1789866,22.2145883,43.1498853,8.1789866,22.2319496,43.6332881,10.9194866,21.4594727,43.1298184,8.1789866,22.2327058,43.1520458,8.1789866,22.2319872,42.6709773,8.1789866,22.2236227,43.2243799,10.9194866,21.452363,42.6487499,8.1789866,22.2243413,42.8430319,8.1789866,22.2266143,42.8535045,8.1789866,22.2279014,42.7764821,8.1789866,21.8487424,43.4175124,8.1789866,21.6501467,43.4265802,8.1789866,21.6408579,42.7777008,8.1789866,21.8547418,42.8535045,8.1789866,22.2279014,42.7373501,8.9809442,20.0104081,42.6458621,8.1789866,22.1524419,42.6487499,8.1789866,22.2243413,42.636653,8.1789866,21.9231539,42.6361136,8.1789866,21.9000177,42.6354753,8.1789866,21.8938327,42.6239337,8.1789866,21.6064714,42.6237425,8.1789866,21.6017107,42.6048323,8.1789866,21.1308892,42.6039817,8.1789866,21.10971,42.5865525,8.1789866,20.6757609,42.5836368,8.1789866,20.6031659,42.3277385,8.1789866,14.2318543,42.9515202,10.9194866,14.658749,42.6574493,8.1789866,21.886806,42.6292396,8.1789866,21.6051521,42.6459698,8.1789866,21.6009921,42.6354753,8.1789866,21.8938327,42.7213689,8.1789866,21.577436,42.6613113,8.1789866,21.5923693,42.6372926,8.1789866,21.1635524,42.7222987,8.1789866,21.5820131,42.7644058,8.1789866,21.7892941,42.6615769,8.1789866,21.5971115,42.6457786,8.1789866,21.5962315,42.6774451,8.1789866,21.8804118,42.7764821,8.1789866,21.8487424,42.6459698,8.1789866,21.6009921,43.187196,8.1789866,20.0008343,43.2667206,8.1789866,20.0205328,43.1880012,8.1789866,19.9924822,43.2601743,8.1789866,20.0268391,43.579846,8.1789866,20.132111,43.5576187,8.1789866,20.1328296,43.6041442,8.1789866,21.458966,43.1324822,8.1789866,20.5683282,43.042899,8.1789866,21.497488,43.4265802,8.1789866,21.6408579,43.0368824,8.1789866,21.5037922,42.7644058,8.1789866,21.7892941,42.7764821,8.1789866,21.8487424,42.6774451,8.1789866,21.8804118,42.7777008,8.1789866,21.8547418,42.6774451,8.1789866,21.8804118,42.7764821,8.1789866,21.8487424,42.6577027,8.1789866,21.8931141,42.6574493,8.1789866,21.886806,42.7595775,7.377029,20.0096895,42.3499658,8.1789866,14.2311357,42.9737475,5.4384866,14.6580304,42.6709773,8.1789866,22.2236227,42.6684598,8.1789866,22.1609428,42.6577027,8.1789866,21.8931141,42.6574493,8.1789866,21.886806,42.6459698,8.1789866,21.6009921,42.6457786,8.1789866,21.5962315,42.626209,8.1789866,21.1089914,42.6253584,8.1789866,21.0878123,42.6071115,8.1789866,20.6559557,42.6058641,8.1789866,20.6024473,42.6049942,8.1789866,20.5807876,43.6041442,8.1789866,21.458966,42.8535045,8.1789866,22.2279014,43.579846,5.4384866,20.132111,43.4265802,8.1789866,21.6408579,43.4175124,8.1789866,21.6501467,43.2424534,8.1789866,21.4526772,43.6041442,8.1789866,21.458966,43.2466072,8.1789866,21.4516444,43.0368824,8.1789866,21.5037922,43.4265802,8.1789866,21.6408579,42.7644058,8.1789866,21.7892941,42.7764821,8.1789866,21.8487424,42.7644058,8.1789866,21.7892941,42.7222987,8.1789866,21.5820131,43.0368824,8.1789866,21.5037922,43.0368824,8.1789866,21.5037922,42.7213689,8.1789866,21.577436,43.042899,8.1789866,21.497488,42.7644058,8.1789866,21.7892941,42.6613113,8.1789866,21.5923693,42.6615769,8.1789866,21.5971115,42.6457786,8.1789866,21.5962315,42.6774451,8.1789866,21.8804118,42.6459698,8.1789866,21.6009921,42.6459698,8.1789866,21.6009921,42.6774451,8.1789866,21.8804118,42.6615769,8.1789866,21.5971115,42.6574493,8.1789866,21.886806,44.0419681,11.1935366,21.4440729,43.6332881,10.9194866,21.4594727,43.6332881,11.1935366,21.4594727,44.0419681,10.9194866,21.4440729,42.6056264,8.1789866,21.9033776,42.6361136,8.1789866,21.9000177,42.6354753,8.1789866,21.8938327,42.636653,8.1789866,21.9231539,42.5963626,8.1789866,21.9063399,42.269503,8.1789866,22.0108611,42.6458621,8.1789866,22.1524419,42.2786833,8.1789866,22.0143146,42.6173699,8.1789866,21.0959955,42.5865525,8.1789866,20.6757609,42.6071115,8.1789866,20.6559557,42.6039817,8.1789866,21.10971,43.5576187,11.1935366,20.1328296,43.1657739,10.9194866,19.9932008,43.1657739,11.1935366,19.9932008,43.5576187,10.9194866,20.1328296,43.1657739,10.1578417,19.9932008,43.1657739,11.1935366,19.9932008,42.9111484,10.0555914,18.866944,43.1657739,10.9194866,19.9932008,43.5576187,10.9194866,20.1328296,43.1657739,10.1578417,19.9932008,43.1657739,10.9194866,19.9932008,43.1657739,9.1684141,19.9932008,43.1657739,8.1789866,19.9932008,43.187196,8.1789866,20.0008343,43.2601743,8.1789866,20.0268391,43.5576187,8.1789866,20.1328296,43.1657739,10.1578417,19.9932008,42.9111484,10.0555914,18.866944,43.1657739,9.1684141,19.9932008,45.5528051,8.1789866,13.490045,47.3114873,8.1789866,12.1194228,47.240706,8.1789866,12.0371904,42.3499658,8.1789866,14.2311357,43.1880012,8.1789866,19.9924822,42.6049942,8.1789866,20.5807876,43.187196,8.1789866,20.0008343,43.17696,8.1789866,20.1070021,43.1324822,8.1789866,20.5683282,42.6326329,8.1789866,21.0803606,42.6058641,8.1789866,20.6024473,42.6071115,8.1789866,20.6559557,42.6253584,8.1789866,21.0878123,43.1324822,8.1789866,20.5683282,42.6087717,8.1789866,20.6543564,43.17696,8.1789866,20.1070021,42.6326329,8.1789866,21.0803606,42.6071115,8.1789866,20.6559557,47.240706,8.1789866,12.0371904,45.5305777,8.1789866,13.4907636,47.2316018,8.1789866,12.0266133,45.5528051,8.1789866,13.490045,42.3499658,8.1789866,14.2311357,42.3277385,8.1789866,14.2318543,42.6049942,8.1789866,20.5807876,42.5836368,8.1789866,20.6031659,43.5576187,11.1935366,20.1328296,41.9634011,10.9194866,21.7659038,43.5576187,10.9194866,20.1328296,41.9634011,11.1935366,21.7659038,42.6326329,8.1789866,21.0803606,43.042899,8.1789866,21.497488,43.1324822,8.1789866,20.5683282,42.6253584,8.1789866,21.0878123,42.626209,8.1789866,21.1089914,42.6372926,8.1789866,21.1635524,42.7213689,8.1789866,21.577436,42.6613113,8.1789866,21.5923693,43.2243799,11.1935366,21.452363,41.9634011,10.9194866,21.7659038,41.9634011,11.1935366,21.7659038,43.2243799,10.9194866,21.452363,43.2243799,8.1789866,21.452363,43.2243799,10.9194866,21.452363,43.2424534,8.1789866,21.4526772,43.2466072,8.1789866,21.4516444,43.6041442,8.1789866,21.458966,42.6457786,8.1789866,21.5962315,42.6372926,8.1789866,21.1635524,42.626209,8.1789866,21.1089914,42.6613113,8.1789866,21.5923693,42.6459698,8.1789866,21.6009921,42.6291282,8.1789866,21.6003716,42.6457786,8.1789866,21.5962315,42.6237425,8.1789866,21.6017107,42.6292396,8.1789866,21.6051521,42.6239337,8.1789866,21.6064714,42.6354753,8.1789866,21.8938327,42.8535045,8.1789866,22.2279014,42.626209,8.1789866,21.1089914,43.579846,5.4384866,20.132111,42.7777008,8.1789866,21.8547418,42.7764821,8.1789866,21.8487424,42.7644058,8.1789866,21.7892941,42.7222987,8.1789866,21.5820131,42.7213689,8.1789866,21.577436,42.6372926,8.1789866,21.1635524,42.6457786,8.1789866,21.5962315,42.617872,8.1789866,21.1175317,42.626209,8.1789866,21.1089914,42.6291282,8.1789866,21.6003716,42.626209,8.1789866,21.1089914,42.6173699,8.1789866,21.0959955,42.6253584,8.1789866,21.0878123,42.6039817,8.1789866,21.10971,42.617872,8.1789866,21.1175317,42.6048323,8.1789866,21.1308892,43.2466072,5.4384866,21.4516444,42.8430319,8.1789866,22.2266143,42.6709773,8.1789866,22.2236227,42.8535045,8.1789866,22.2279014,43.1298184,8.1789866,22.2327058,43.1498853,8.1789866,22.2319496,43.2243799,10.9194866,21.452363,43.2243799,11.1935366,21.452363,41.9581934,8.1789866,21.2810796,42.4953829,8.1789866,21.2209558,42.4314462,8.1789866,20.8251798,42.0492109,8.1789866,21.6780025,41.7132037,8.1789866,21.5377799,42.6774451,8.1789866,21.8804118,43.1880012,5.1644366,19.9924822,42.6058641,8.1789866,20.6024473,43.1880012,6.2001315,19.9924822,43.6041442,8.1789866,21.458966,43.579846,5.4384866,20.132111,43.579846,8.1789866,20.132111,48.1903241,4.7533616,15.9771965,45.4514994,4.7533616,14.9007848,46.4925262,4.7533616,14.0047248,43.4913618,4.7533616,15.3543323,43.6456245,4.7533616,19.1951376,48.4864789,4.7533616,16.4739555,47.1824866,4.7533616,17.251362,47.0175071,4.7533616,19.2688175,43.9277527,4.7533616,19.2956703,46.7725286,4.7533616,19.4321922,44.1925724,4.7533616,19.5452905,46.518932,4.7533616,19.5818402,44.6069629,4.7533616,19.6407789,46.2574857,4.7533616,19.7173081,44.2225202,4.7533616,19.6980025,43.6878208,4.7533616,20.2457344,45.9889817,4.7533616,19.8381857,45.7142336,4.7533616,19.9441065,45.4340737,4.7533616,20.0347498,45.1493509,4.7533616,20.1098409,44.8609277,4.7533616,20.1691523,44.6894104,4.7533616,20.1946823,44.5696781,4.7533616,20.2125042,44.2764843,4.7533616,20.2397655,43.9822347,4.7533616,20.2508534,44.1925724,4.7533616,19.5452905,43.579846,5.4384866,20.132111,43.9277527,4.7533616,19.2956703,43.9476511,5.4384866,20.4788057,43.1880012,5.4384866,19.9924822,43.4913618,4.7533616,15.3543323,43.6456245,4.7533616,19.1951376,42.9737475,5.4384866,14.6580304,43.165238,5.4384866,19.425728,43.1880012,7.1895591,19.9924822,42.9333757,6.3023818,18.8662254,43.1880012,6.2001315,19.9924822,43.1880012,5.4384866,19.9924822,42.9333757,6.3023818,18.8662254,43.1880012,5.1644366,19.9924822,43.1880012,6.2001315,19.9924822,42.6774451,8.1789866,21.8804118,43.042899,8.1789866,21.497488,43.1880012,5.1644366,19.9924822,42.7644058,8.1789866,21.7892941,43.0368824,8.1789866,21.5037922,43.17696,8.1789866,20.1070021,43.5576187,8.1789866,20.1328296,43.2601743,8.1789866,20.0268391,43.1324822,8.1789866,20.5683282,43.17696,8.1789866,20.1070021,43.2601743,8.1789866,20.0268391,43.187196,8.1789866,20.0008343,42.9333757,6.3023818,18.8662254,43.1581873,5.2025714,19.2501791,43.1880012,5.1644366,19.9924822,43.0989998,5.2782775,17.7765408,43.0989998,5.2782775,17.7765408,42.9737475,5.4384866,14.6580304,43.6878208,4.7533616,20.2457344,43.9892453,5.4384866,20.6909057,44.2225202,4.7533616,19.6980025,43.2466072,5.4384866,21.4516444,44.6069629,4.7533616,19.6407789,43.9476511,5.4384866,20.4788057,44.1925724,4.7533616,19.5452905,44.5231935,5.4384866,20.6114284,44.2225202,4.7533616,19.6980025,44.5231935,5.4384866,20.6114284,44.6069629,4.7533616,19.6407789,43.9892453,5.4384866,20.6909057,44.471409,5.4384866,21.4054914,44.2764843,4.7533616,20.2397655,44.5696781,4.7533616,20.2125042,44.0641954,5.4384866,21.4433543,44.0896932,8.1789866,22.1700438,44.471409,5.4384866,21.4054914,44.1119205,8.1789866,22.1693252,50.0254775,8.1789866,15.2826439,50.5119219,8.1789866,16.0605854,50.0280087,8.1789866,15.2488877,50.4896945,8.1789866,16.061304,48.3812156,8.1789866,17.3308574,48.1116412,8.1789866,20.6273534,47.7113495,8.1789866,20.8943054,47.296976,8.1789866,21.1388283,46.8697761,8.1789866,21.3601812,46.4310441,8.1789866,21.5576935,45.9821093,8.1789866,21.7307668,45.5243317,8.1789866,21.8788767,45.0590983,8.1789866,22.0015746,44.5878186,8.1789866,22.0984886,44.1119205,8.1789866,22.1693252,47.119804,10.9194866,12.7842942,47.240706,8.1789866,12.0371904,47.2316018,8.1789866,12.0266133,47.3114873,8.1789866,12.1194228,49.1959288,8.1789866,14.3087339,50.0057814,8.1789866,15.2496063,49.4778566,10.9194866,15.5238382,49.1959288,8.1789866,14.3087339,50.0280087,8.1789866,15.2488877,49.1959288,8.1789866,14.3087339,49.2074262,8.1789866,14.2955494,50.0057814,8.1789866,15.2496063,50.0254775,8.1789866,15.2826439,49.4778566,10.9194866,15.5238382,50.0254775,8.1789866,15.2826439,50.0057814,8.1789866,15.2496063,50.4896945,8.1789866,16.061304,49.8891828,10.9194866,16.2137812,48.0780825,10.9194866,17.2935124,48.4642516,11.6046116,16.4746741,47.1602593,11.6046116,17.2520806,49.8891828,10.9194866,16.2137812,46.9952798,11.6046116,19.2695361,48.0780825,10.9194866,17.2935124,47.1602593,11.6046116,17.2520806,47.8489443,10.9194866,20.095534,46.7503012,11.6046116,19.4329108,47.8489443,10.9194866,20.095534,46.9952798,11.6046116,19.2695361,47.5086963,10.9194866,20.3224433,46.4967046,11.6046116,19.5825588,47.1564788,10.9194866,20.5302877,46.2352583,11.6046116,19.7180267,46.7933589,10.9194866,20.7184377,45.9667543,11.6046116,19.8389043,46.4204367,10.9194866,20.8863231,45.6920062,11.6046116,19.9448251,46.0388421,10.9194866,21.0334354,45.4118464,11.6046116,20.0354684,45.6497312,10.9194866,21.1593289,45.1271235,11.6046116,20.1105595,45.2542828,10.9194866,21.263622,44.8387004,11.6046116,20.1698708,44.8536951,10.9194866,21.345999,44.5474507,11.6046116,20.2132228,44.6154766,10.9194866,21.3814573,44.6671831,11.6046116,20.1954009,44.4491817,10.9194866,21.40621,44.6671831,11.6046116,20.1954009,44.6154766,10.9194866,21.3814573,44.2542569,11.6046116,20.2404841,44.0419681,10.9194866,21.4440729,43.9600074,11.6046116,20.251572,44.0419681,10.9194866,21.4440729,44.2542569,11.6046116,20.2404841,43.6332881,10.9194866,21.4594727,43.2243799,10.9194866,21.452363,43.6655935,11.6046116,20.246453,42.8023605,9.3829228,19.582688,42.9515202,10.9194866,14.658749,42.7373501,8.9809442,20.0104081,42.9111484,10.0555914,18.866944,43.0767725,11.0796957,17.7772594,42.9515202,10.9194866,14.658749,45.5305777,8.1789866,13.4907636,42.3277385,8.1789866,14.2318543,45.6739335,10.9194866,14.0288219,45.5528051,8.1789866,13.490045,42.9737475,5.4384866,14.6580304,42.3499658,8.1789866,14.2311357,45.6961609,5.4384866,14.0281034,42.9333757,6.3023818,18.8662254,42.9737475,5.4384866,14.6580304,43.0989998,5.2782775,17.7765408,42.7595775,7.377029,20.0096895,42.8245878,6.9750504,19.5819695,43.1657739,10.9194866,19.9932008,43.9055254,11.6046116,19.2963889,43.6233971,11.6046116,19.1958562,43.5576187,10.9194866,20.1328296,43.1359599,11.1554018,19.2508977,43.1657739,10.9194866,19.9932008,43.1430107,10.9194866,19.4264466,43.1657739,11.1935366,19.9932008,43.1657739,10.1578417,19.9932008,42.9111484,10.0555914,18.866944,43.1359599,11.1554018,19.2508977,43.0767725,11.0796957,17.7772594,43.1657739,11.1935366,19.9932008,42.9111484,10.0555914,18.866944,43.0368743,9.2444985,19.8475955,43.1657739,9.1684141,19.9932008,42.8023605,9.3829228,19.582688,47.240706,8.1789866,12.0371904,45.6961609,5.4384866,14.0281034,45.5528051,8.1789866,13.490045,47.1420314,5.4384866,12.7835756,47.2538292,8.1789866,12.0258947,45.6739335,10.9194866,14.0288219,47.2316018,8.1789866,12.0266133,45.5305777,8.1789866,13.4907636,47.119804,10.9194866,12.7842942,41.9634011,10.9194866,21.7659038,43.9254238,10.9194866,20.4795242,43.5576187,10.9194866,20.1328296,43.967018,10.9194866,20.6916242,44.5009662,10.9194866,20.612147,43.2243799,10.9194866,21.452363,41.9581934,8.1789866,21.2810796,42.4314462,8.1789866,20.8251798,42.4259233,8.1789866,20.7909921,45.4514994,4.7533616,14.9007848,42.9737475,5.4384866,14.6580304,45.6961609,5.4384866,14.0281034,43.4913618,4.7533616,15.3543323,45.6961609,5.4384866,14.0281034,46.4925262,4.7533616,14.0047248,45.4514994,4.7533616,14.9007848,47.1420314,5.4384866,12.7835756,49.500084,5.4384866,15.5231196,46.4925262,4.7533616,14.0047248,47.1420314,5.4384866,12.7835756,48.1903241,4.7533616,15.9771965,49.9114102,5.4384866,16.2130626,48.1903241,4.7533616,15.9771965,49.500084,5.4384866,15.5231196,48.4864789,4.7533616,16.4739555,48.4864789,4.7533616,16.4739555,48.1003098,5.4384866,17.2927939,47.1824866,4.7533616,17.251362,49.9114102,5.4384866,16.2130626,48.1003098,5.4384866,17.2927939,47.0175071,4.7533616,19.2688175,47.1824866,4.7533616,17.251362,47.8711716,5.4384866,20.0948155,47.8711716,5.4384866,20.0948155,46.7725286,4.7533616,19.4321922,47.0175071,4.7533616,19.2688175,47.5309236,5.4384866,20.3217247,46.518932,4.7533616,19.5818402,47.1787061,5.4384866,20.5295691,46.2574857,4.7533616,19.7173081,46.8155862,5.4384866,20.7177191,45.9889817,4.7533616,19.8381857,46.442664,5.4384866,20.8856045,45.7142336,4.7533616,19.9441065,46.0610694,5.4384866,21.0327168,45.4340737,4.7533616,20.0347498,45.6719585,5.4384866,21.1586103,45.1493509,4.7533616,20.1098409,45.2765101,5.4384866,21.2629035,44.8609277,4.7533616,20.1691523,44.8759224,5.4384866,21.3452804,44.6894104,4.7533616,20.1946823,44.637704,5.4384866,21.3807387,44.637704,5.4384866,21.3807387,44.6894104,4.7533616,20.1946823,43.1880012,7.1895591,19.9924822,42.8245878,6.9750504,19.5819695,42.9333757,6.3023818,18.8662254,43.0591017,7.1134747,19.8468769,44.5878186,8.1789866,22.0984886,44.637704,5.4384866,21.3807387,44.8759224,5.4384866,21.3452804,49.9426345,8.1789866,16.387447,50.4896945,8.1789866,16.061304,50.0254775,8.1789866,15.2826439,45.0590983,8.1789866,22.0015746,45.2765101,5.4384866,21.2629035,45.5243317,8.1789866,21.8788767,45.6719585,5.4384866,21.1586103,45.9821093,8.1789866,21.7307668,46.0610694,5.4384866,21.0327168,46.4310441,8.1789866,21.5576935,46.442664,5.4384866,20.8856045,46.8697761,8.1789866,21.3601812,46.8155862,5.4384866,20.7177191,47.1787061,5.4384866,20.5295691,47.296976,8.1789866,21.1388283,47.5309236,5.4384866,20.3217247,47.7113495,8.1789866,20.8943054,47.8711716,5.4384866,20.0948155,48.1116412,8.1789866,20.6273534,48.3812156,8.1789866,17.3308574,47.8711716,5.4384866,20.0948155,48.1003098,5.4384866,17.2927939,48.1116412,8.1789866,20.6273534,49.9114102,5.4384866,16.2130626,48.3812156,8.1789866,17.3308574,48.1003098,5.4384866,17.2927939,50.5119219,8.1789866,16.0605854,50.0280087,8.1789866,15.2488877,49.9114102,5.4384866,16.2130626,49.500084,5.4384866,15.5231196,50.5119219,8.1789866,16.0605854,46.4702988,11.6046116,14.0054434,49.4778566,10.9194866,15.5238382,47.119804,10.9194866,12.7842942,48.1680967,11.6046116,15.9779151,49.2074262,8.1789866,14.2955494,47.2538292,8.1789866,12.0258947,48.1680967,11.6046116,15.9779151,49.8891828,10.9194866,16.2137812,49.4778566,10.9194866,15.5238382,48.4642516,11.6046116,16.4746741,45.4292721,11.6046116,14.9015034,48.1680967,11.6046116,15.9779151,46.4702988,11.6046116,14.0054434,43.4691344,11.6046116,15.3550509,43.6233971,11.6046116,19.1958562,48.4642516,11.6046116,16.4746741,47.1602593,11.6046116,17.2520806,46.9952798,11.6046116,19.2695361,43.9055254,11.6046116,19.2963889,46.7503012,11.6046116,19.4329108,44.170345,11.6046116,19.5460091,46.4967046,11.6046116,19.5825588,44.5847356,11.6046116,19.6414975,46.2352583,11.6046116,19.7180267,44.2002929,11.6046116,19.6987211,43.6655935,11.6046116,20.246453,45.9667543,11.6046116,19.8389043,45.6920062,11.6046116,19.9448251,45.4118464,11.6046116,20.0354684,45.1271235,11.6046116,20.1105595,44.8387004,11.6046116,20.1698708,44.6671831,11.6046116,20.1954009,44.5474507,11.6046116,20.2132228,44.2542569,11.6046116,20.2404841,43.9600074,11.6046116,20.251572,43.967018,10.9194866,20.6916242,43.6655935,11.6046116,20.246453,44.2002929,11.6046116,19.6987211,43.2243799,10.9194866,21.452363,42.7373501,8.9809442,20.0104081,43.0368743,9.2444985,19.8475955,42.8023605,9.3829228,19.582688,43.0767725,11.0796957,17.7772594,42.9515202,10.9194866,14.658749,42.9515202,10.9194866,14.658749,45.4292721,11.6046116,14.9015034,45.6739335,10.9194866,14.0288219,43.4691344,11.6046116,15.3550509,42.7595775,7.377029,20.0096895,42.8245878,6.9750504,19.5819695,43.0591017,7.1134747,19.8468769,43.6233971,11.6046116,19.1958562,43.1430107,10.9194866,19.4264466,43.1657739,10.9194866,19.9932008,42.9515202,10.9194866,14.658749,43.4691344,11.6046116,15.3550509,43.5576187,10.9194866,20.1328296,44.170345,11.6046116,19.5460091,43.9055254,11.6046116,19.2963889,43.9254238,10.9194866,20.4795242,42.7373501,8.9809442,20.0104081,43.1657739,9.1684141,19.9932008,43.0368743,9.2444985,19.8475955,47.2538292,8.1789866,12.0258947,49.500084,5.4384866,15.5231196,47.1420314,5.4384866,12.7835756,50.0280087,8.1789866,15.2488877,49.2074262,8.1789866,14.2955494,46.4702988,11.6046116,14.0054434,45.6739335,10.9194866,14.0288219,45.4292721,11.6046116,14.9015034,47.119804,10.9194866,12.7842942,44.5009662,10.9194866,20.612147,44.2002929,11.6046116,19.6987211,44.5847356,11.6046116,19.6414975,43.967018,10.9194866,20.6916242,43.9254238,10.9194866,20.4795242,44.5847356,11.6046116,19.6414975,44.170345,11.6046116,19.5460091,44.5009662,10.9194866,20.612147,42.7595775,7.377029,20.0096895,43.0591017,7.1134747,19.8468769,43.1880012,7.1895591,19.9924822,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID184.bind();
texcoordArray = new float[] {
0.3703864f,0.8620898f,0.370713f,0.8492772f,0.3581932f,0.875534f,0.3695042f,0.8630625f,0.3583902f,0.8753167f,0.3714119f,0.8493128f,0.3630104f,0.8365606f,0.3710853f,0.8621254f,0.3601488f,0.8562237f,0.3416793f,0.8683682f,0.3596679f,0.8565399f,0.3570062f,0.85829f,0.3567792f,0.8584393f,0.3429461f,0.8675352f,0.3426735f,0.8677144f,0.3426176f,0.8677512f,0.3096458f,0.8453624f,0.2967967f,0.8445995f,0.3621478f,0.8605426f,0.3120249f,0.7796421f,0.3243446f,0.7727251f,0.322502f,0.8450102f,0.3529341f,0.8728842f,0.3416963f,0.867222f,0.3410175f,0.86688f,0.3372447f,0.8649791f,0.3171287f,0.8548437f,0.3588921f,0.8755696f,0.3481311f,0.8139759f,0.3483048f,0.8122823f,0.3432545f,0.8065739f,0.3433462f,0.8029776f,0.3628467f,0.8605782f,0.3532227f,0.8727131f,0.361953f,0.8602281f,0.3420852f,0.8524443f,0.3460248f,0.8345194f,0.3426798f,0.8291204f,0.3441058f,0.8532359f,0.3440824f,0.8534649f,0.3426548f,0.8673885f,0.2974955f,0.8446351f,0.2230806f,0.8502993f,0.2092867f,0.8405148f,0.2371953f,0.8588732f,0.3226326f,0.8450613f,0.3232009f,0.8450458f,0.1119756f,0.594136f,0.3218697f,0.7741147f,0.1460013f,0.5071709f,0.1617662f,0.640907f,0.1702418f,0.8042114f,0.3220755f,0.7744271f,0.3127237f,0.7796777f,0.3260902f,0.8012518f,0.3289067f,0.8472812f,0.1828272f,0.8174359f,0.1958553f,0.8295492f,0.3097137f,0.8453605f,0.337283f,0.8646819f,0.3168436f,0.8543836f,0.2515881f,0.8662103f,0.3348614f,0.883465f,0.2662153f,0.8722886f,0.2810325f,0.8770896f,0.295995f,0.8805988f,0.3103585f,0.8827699f,0.3110574f,0.8828055f,0.325543f,0.8836655f,0.3254751f,0.8836674f,0.3261739f,0.883703f,0.3403968f,0.8662508f,0.3410255f,0.8665675f,0.3417163f,0.8669156f,0.3112609f,0.8453729f,0.3103446f,0.845398f,0.3389866f,0.8514685f,0.3376627f,0.8617369f,0.3290959f,0.8475935f,0.3408957f,0.8522164f,0.3406793f,0.880148f,0.3413898f,0.8797268f,0.3427065f,0.8280712f,0.3461209f,0.8335821f,0.3426747f,0.801869f,0.3250435f,0.7727607f,0.32437f,0.7731388f,0.3246918f,0.7783982f,0.3425559f,0.8055135f,0.3426081f,0.8055927f,0.3418057f,0.8266172f,0.3420344f,0.8269864f,0.3422856f,0.8273918f,0.3419159f,0.8523779f,0.3413924f,0.8521728f,0.340904f,0.8519815f,0.3390158f,0.8512417f,0.3420077f,0.8280356f,0.3422698f,0.8284586f,0.3420792f,0.8526801f,0.3351907f,0.8834012f,0.3406001f,0.883253f,0.3426473f,0.802942f,0.3419124f,0.8526148f,0.3010865f,0.7382059f,0.3099567f,0.7332256f,0.325282f,0.7359523f,0.3250603f,0.7446487f,0.3004609f,0.7968169f,0.2991531f,0.8073241f,0.2823655f,0.8033869f,0.3413864f,0.8524087f,0.2993736f,0.7855245f,0.3086301f,0.7852709f,0.2901222f,0.7849752f,0.1947002f,0.3827033f,0.249994f,0.4506023f,0.1969256f,0.3786296f,0.3506929f,0.487315f,0.1099902f,0.5377688f,0.1354524f,0.4911591f,0.109371f,0.5394054f,0.1136562f,0.5855328f,0.1705981f,0.6390214f,0.0947758f,0.5779793f,0.1778023f,0.7778301f,0.1884998f,0.7890709f,0.1995737f,0.7993673f,0.2109904f,0.808688f,0.2227153f,0.8170049f,0.2347128f,0.8242926f,0.2469466f,0.8305292f,0.2593797f,0.8356958f,0.2719744f,0.8397766f,0.2846925f,0.8427594f,0.2794641f,0.8415332f,0.341299f,0.8832886f,0.3385133f,0.7736131f,0.3513917f,0.4873506f,0.3317797f,0.5084984f,0.3416592f,0.8307384f,0.3378145f,0.7735775f,0.3310809f,0.5084628f,0.333049f,0.7169673f,0.2506929f,0.4506379f,0.1972118f,0.3781056f,0.1670691f,0.5738127f,0.2531791f,0.5204886f,0.2204487f,0.4760989f,0.3148068f,0.5429568f,0.1577579f,0.5984215f,0.198756f,0.6369333f,0.2039431f,0.7368756f,0.2116453f,0.744969f,0.2927604f,0.7505717f,0.2196185f,0.7523824f,0.2797318f,0.7553021f,0.2278385f,0.7590933f,0.2918189f,0.7581369f,0.2362804f,0.7650814f,0.2449186f,0.7703286f,0.253727f,0.7748189f,0.2626788f,0.7785389f,0.271747f,0.7814771f,0.2771396f,0.7827418f,0.280904f,0.7836247f,0.3323502f,0.7169317f,0.3271429f,0.66295f,0.2839937f,0.8427238f,0.2952962f,0.8805632f,0.0940769f,0.5779437f,0.1092914f,0.5377332f,0.1610674f,0.6408714f,0.169543f,0.8041758f,0.1821283f,0.8174003f,0.1951564f,0.8295136f,0.2085878f,0.8404792f,0.2223818f,0.8502637f,0.2364965f,0.8588376f,0.2508893f,0.8661747f,0.2655164f,0.872253f,0.2803337f,0.877054f,0.2007268f,0.4156402f,0.1265885f,0.5513539f,0.1350909f,0.490506f,0.1584567f,0.5984571f,0.1994549f,0.6369689f,0.2046419f,0.7369112f,0.2123442f,0.7450046f,0.2203174f,0.752418f,0.2285374f,0.7591289f,0.2369793f,0.765117f,0.2456175f,0.7703642f,0.2544258f,0.7748545f,0.2633777f,0.7785745f,0.2724458f,0.7815127f,0.2816029f,0.7836603f,0.2778384f,0.7827774f,0.290821f,0.7850108f,0.3000724f,0.7855601f,0.3093289f,0.7853065f,0.3364694f,0.7524244f,0.3278417f,0.6629856f,0.2461857f,0.4772926f,0.2454869f,0.477257f,0.3357705f,0.7523888f,0.3017853f,0.7382415f,0.3106556f,0.7332612f,0.3259809f,0.7359879f,0.3257592f,0.7446843f,0.3290962f,0.7655476f,0.200028f,0.4156046f,0.196513f,0.37807f,0.3011597f,0.7968525f,0.299852f,0.8073597f,0.2830644f,0.8034225f,0.1258896f,0.5513183f,0.1129573f,0.5854972f,0.1698992f,0.6389858f,0.1771034f,0.7777945f,0.187801f,0.7890353f,0.1988749f,0.7993317f,0.2102916f,0.8086524f,0.2220164f,0.8169693f,0.234014f,0.824257f,0.2462478f,0.8304936f,0.2586809f,0.8356602f,0.2712756f,0.839741f,0.2787653f,0.8414976f,0.3283973f,0.765512f,0.2211476f,0.4761345f,0.167768f,0.5738483f,0.253878f,0.5205242f,0.3155057f,0.5429924f,0.2934593f,0.7506073f,0.2804306f,0.7553377f,0.2925177f,0.7581725f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,0,1,1,0,0,3,1,4,2,5,0,6,0,5,0,4,2,7,3,7,3,4,2,8,4,8,4,4,2,9,2,10,1,11,5,12,6,11,5,10,1,13,0,11,5,13,0,14,7,14,7,13,0,15,3,16,8,17,1,18,1,17,1,16,8,19,9,19,9,16,8,20,10,19,9,20,10,21,11,19,9,21,11,22,12,19,9,22,12,23,13,19,9,23,13,24,14,19,9,24,14,25,15,26,2,27,16,28,17,27,16,26,2,29,18,29,18,26,2,30,0,31,19,32,1,33,20,32,1,31,19,29,18,32,1,29,18,30,0,29,18,34,21,27,16,35,17,36,2,37,2,36,2,35,17,38,22,38,22,35,17,39,14,39,14,35,17,40,23,40,23,35,17,41,24,41,24,35,17,42,25,42,25,35,17,43,26,43,26,35,17,44,17,44,17,35,17,45,17,46,3,47,27,48,7,47,27,46,3,49,4,50,28,51,29,52,30,53,31,51,29,54,5,51,29,53,31,52,30,54,5,51,29,55,6,56,13,57,18,58,12,57,18,56,13,59,32,59,32,56,13,60,0,60,0,56,13,61,3,61,3,56,13,62,33,63,8,60,0,64,1,60,0,63,8,59,32,59,32,65,34,57,18,66,35,67,36,68,37,67,36,66,35,69,10,69,10,66,35,70,38,69,10,70,38,71,39,69,10,71,39,72,40,69,10,72,40,73,0,73,0,72,40,74,3,74,3,72,40,75,4,75,4,72,40,76,14,75,4,76,14,77,22,75,4,77,22,78,2,79,8,73,0,80,1,73,0,79,8,69,10,81,7,82,5,83,7,82,5,81,7,84,5,85,34,86,11,87,10,88,40,89,12,90,39,89,12,88,40,91,13,92,9,93,20,94,1,95,19,96,20,97,20,96,20,95,19,98,19,99,19,100,18,101,19,100,18,99,19,102,18,103,21,104,18,105,18,104,18,103,21,106,21,107,16,108,21,109,21,108,21,107,16,110,16,111,17,110,16,107,16,110,16,111,17,112,17,113,41,114,16,115,16,114,16,113,41,116,17,116,17,113,41,117,17,118,42,119,17,120,43,119,17,118,42,121,26,121,26,118,42,122,44,123,45,124,46,125,21,126,47,127,48,128,49,127,48,126,47,129,50,127,48,129,50,130,51,127,48,130,51,131,52,131,52,130,51,132,53,132,53,130,51,133,54,133,54,130,51,124,46,133,54,124,46,134,55,124,46,130,51,135,56,124,46,135,56,136,57,124,46,136,57,125,21,125,21,136,57,120,43,125,21,120,43,119,17,125,21,119,17,137,41,137,41,138,58,125,21,138,58,137,41,139,16,121,26,140,59,141,60,140,59,121,26,122,44,140,59,122,44,142,61,140,59,142,61,143,25,143,25,142,61,144,62,144,62,142,61,145,63,144,62,145,63,146,64,144,62,146,64,147,65,144,62,147,65,148,66,144,62,148,66,149,67,144,62,149,67,150,68,150,68,149,67,151,69,152,70,144,62,150,68,143,25,153,71,140,59,153,71,143,25,154,24,153,71,154,24,155,72,155,72,154,24,156,73,156,73,154,24,157,23,138,58,158,74,125,21,158,74,138,58,159,75,160,76,161,77,162,78,161,77,160,76,163,79,161,77,163,79,164,71,161,77,164,71,165,59,165,59,164,71,166,25,166,25,164,71,167,24,167,24,164,71,168,72,165,59,169,26,170,60,169,26,165,59,166,25,171,80,172,23,173,24,172,23,171,80,174,9,174,9,171,80,175,81,176,4,177,3,178,33,179,4,180,27,181,27,180,27,179,4,182,41,182,41,179,4,183,33,182,41,183,33,184,13,182,41,184,13,185,40,182,41,185,40,186,73,182,41,186,73,187,72,182,41,187,72,188,71,182,41,188,71,189,59,182,41,189,59,190,60,182,41,190,60,191,41,182,41,191,41,192,41,193,27,194,7,195,7,194,7,193,27,196,27,197,82,198,28,199,30,198,28,197,82,200,83,201,5,202,31,203,5,202,31,201,5,204,84,204,84,201,5,205,85,205,85,201,5,206,85,206,85,201,5,207,85,207,85,201,5,208,85,208,85,201,5,209,85,210,86,211,84,212,85,211,84,210,86,213,87,211,84,213,87,214,88,211,84,214,88,215,31,215,31,214,88,216,89,215,31,216,89,217,30,218,53,219,54,220,53,219,54,218,53,221,90,221,90,218,53,222,91,222,91,218,53,223,92,223,92,218,53,224,82,224,82,218,53,225,83,225,83,218,53,226,8,226,8,218,53,227,32,227,32,218,53,228,32,229,46,230,32,231,32,230,32,229,46,232,34,232,34,229,46,233,11,233,11,229,46,234,38,234,38,229,46,235,35,235,35,229,46,236,93,236,93,229,46,237,94,237,94,229,46,238,95,238,95,229,46,239,96,239,96,229,46,240,55,240,55,229,46,241,46,242,19,243,18,244,18,243,18,242,19,245,97,243,18,245,97,246,98,243,18,246,98,247,37,243,18,247,37,248,36,243,18,248,36,249,10,243,18,249,10,250,34,251,36,252,35,253,37,252,35,251,36,254,38,255,93,256,37,257,98,256,37,255,93,258,35,259,73,260,39,261,99,260,39,259,73,262,40,263,100,264,80,265,101,266,24,267,62,268,25,267,62,266,24,269,80,267,62,269,80,270,100,271,32,272,75,273,46,274,5,275,53,276,85,275,53,274,5,271,32,271,32,274,5,277,7,272,75,278,27,279,41,278,27,272,75,271,32,278,27,271,32,277,7,280,8,281,36,282,83,281,36,280,8,283,10,284,9,285,102,286,20,285,102,284,9,287,23,285,102,287,23,288,73,285,102,288,73,289,103,285,102,289,103,290,93,285,102,290,93,291,98,285,102,291,98,292,92,285,102,292,92,293,89,294,48,295,20,296,20,295,20,294,48,297,20,297,20,294,48,298,20,298,20,294,48,299,19,299,19,294,48,300,19,301,104,302,20,303,105,302,20,301,104,304,19,305,55,306,20,307,20,306,20,305,55,308,20,308,20,305,55,309,20,309,20,305,55,310,20,310,20,305,55,311,54,310,20,311,54,312,87,310,20,312,87,313,86,314,106,315,20,316,20,315,20,314,106,317,107,318,108,319,18,320,19,319,18,318,108,321,109,321,109,318,108,322,110,319,18,321,109,323,21,324,12,325,18,326,18,325,18,324,12,327,21,327,21,324,12,328,39,327,21,328,39,329,99,327,21,329,99,330,103,327,21,330,103,331,111,327,21,331,111,332,79,327,21,332,79,333,76,327,21,333,76,334,78,327,21,334,78,335,45,327,21,335,45,336,21,337,74,338,21,339,21,338,21,337,74,114,16,114,16,337,74,340,75,114,16,340,75,341,58,114,16,341,58,115,16,342,112,343,21,344,113,343,21,342,112,345,16,346,17,342,112,347,114,342,112,346,17,345,16,348,16,349,67,350,69,349,67,348,16,351,66,351,66,348,16,352,17,353,75,354,16,355,58,356,60,353,75,357,74,354,16,356,60,358,41,356,60,354,16,353,75,359,41,360,75,361,75,360,75,359,41,362,58,362,58,359,41,363,16,363,16,359,41,364,41,365,48,366,47,367,49,366,47,365,48,368,50,368,50,365,48,369,51,369,51,365,48,370,19,369,51,370,19,371,74,369,51,371,74,372,56,372,56,371,74,373,57,373,57,371,74,374,41,373,57,374,41,375,17,373,57,375,17,376,43,374,41,371,74,377,58,377,58,371,74,378,75,379,16,374,41,377,58,380,70,381,68,382,62,375,17,383,42,376,43,383,42,375,17,384,26,383,42,384,26,385,44,385,44,384,26,382,62,385,44,382,62,386,61,386,61,382,62,387,63,387,63,382,62,388,64,388,64,382,62,389,65,389,65,382,62,390,66,390,66,382,62,391,67,391,67,382,62,381,68,391,67,381,68,392,69,127,48,393,85,128,49,393,85,127,48,394,86,394,86,127,48,131,52,395,115,396,116,397,117,396,116,395,115,128,49,396,116,128,49,398,118,398,118,128,49,393,85,398,118,393,85,399,84,400,119,401,49,402,120,401,49,400,119,403,47,403,47,400,119,404,121,405,50,406,122,407,123,406,122,405,50,408,47,406,122,408,47,409,124,410,123,411,51,412,50,411,51,410,123,413,125,414,56,415,125,416,126,415,125,414,56,417,51,418,57,416,126,419,127,416,126,418,57,414,56,420,43,419,127,421,128,419,127,420,43,418,57,420,43,422,129,423,42,422,129,420,43,421,128,423,42,424,130,425,44,424,130,423,42,422,129,425,44,426,131,427,61,426,131,425,44,424,130,427,61,428,132,429,63,428,132,427,61,426,131,429,63,430,133,431,64,430,133,429,63,428,132,431,64,432,134,433,65,432,134,431,64,434,135,434,135,431,64,430,133,435,66,436,41,437,67,436,41,435,66,433,65,436,41,433,65,432,134,438,68,439,75,440,70,439,75,438,68,441,69,439,75,441,69,437,67,439,75,437,67,436,41,442,101,443,46,444,136,443,46,442,101,445,100,443,46,445,100,446,62,443,46,446,62,440,70,443,46,440,70,439,75,447,59,448,26,449,60,448,26,447,59,450,25,448,26,450,25,451,62,452,137,453,81,454,136,453,81,452,137,455,9,455,9,452,137,456,23,456,23,452,137,457,73,457,73,452,137,458,99,458,99,452,137,459,35,459,35,452,137,460,37,460,37,452,137,461,82,461,82,452,137,462,30,462,30,452,137,463,31,463,31,452,137,464,138,464,138,452,137,465,139,466,72,467,103,468,111,467,103,466,72,469,73,470,96,471,95,472,140,471,95,470,96,473,76,471,95,473,76,474,77,471,95,474,77,475,79,471,95,475,79,476,94,475,79,474,77,477,71,477,71,474,77,478,59,479,111,476,94,475,79,480,86,481,48,482,20,481,48,480,86,483,52,481,48,483,52,484,19,484,19,483,52,485,53,484,19,485,53,486,74,486,74,485,53,487,54,486,74,487,54,488,55,486,74,488,55,489,60,489,60,488,55,490,78,489,60,490,78,491,77,489,60,491,77,492,59,492,59,491,77,493,71,494,25,495,71,496,59,495,71,494,25,497,24,495,71,497,24,498,72,499,141,500,118,501,142,500,118,499,141,502,101,500,118,502,101,503,80,500,118,503,80,504,24,500,118,504,24,505,72,500,118,505,72,506,111,500,118,506,111,507,94,500,118,507,94,508,97,500,118,508,97,509,91,500,118,509,91,510,89,500,118,510,89,511,102,500,118,511,102,512,84,513,74,514,62,515,19,514,62,513,74,516,60,514,62,516,60,517,26,518,45,519,74,520,21,519,74,518,45,521,78,519,74,521,78,522,60,522,60,521,78,523,77,522,60,523,77,524,59,525,77,526,76,527,78,528,78,529,96,530,55,529,96,528,78,531,77,529,96,531,77,532,95,532,95,531,77,533,79,532,95,533,79,534,94,533,79,531,77,535,71,536,111,534,94,533,79,537,111,538,71,539,79,538,71,537,111,540,72,541,41,542,75,543,75,542,75,541,41,544,41,545,40,546,23,547,73,546,23,545,40,548,9,548,9,545,40,549,13,548,9,549,13,550,33,548,9,550,33,551,81,551,81,550,33,552,22,553,92,554,30,555,89,554,30,553,92,556,82,557,53,558,85,559,85,558,85,557,53,560,53,561,85,562,85,563,143,562,85,561,85,564,85,565,53,566,85,567,85,566,85,565,53,568,85,568,85,565,53,569,85,569,85,565,53,570,86,570,86,565,53,571,52,571,52,565,53,572,53,573,85,574,143,575,85,576,116,577,115,578,117,577,115,576,116,367,49,367,49,576,116,579,118,367,49,579,118,580,20,580,20,579,118,581,84,580,20,581,84,582,86,582,86,581,84,583,87,583,87,581,84,584,54,584,54,581,84,585,90,585,90,581,84,586,102,585,90,586,102,587,89,585,90,587,89,588,91,365,48,367,49,580,20,589,54,590,88,591,87,590,88,589,54,592,90,590,88,592,90,593,89,594,117,595,144,596,145,595,144,594,117,597,116,595,144,597,116,598,118,595,144,598,118,599,138,599,138,598,118,600,84,599,138,600,84,601,31,602,53,603,32,604,53,603,32,602,53,605,32,606,90,607,55,608,54,607,55,606,90,609,91,607,55,609,91,610,97,607,55,610,97,611,140,607,55,611,140,612,96,612,96,611,140,613,95,614,46,615,32,616,32,615,32,614,46,617,46,361,75,618,46,619,46,618,46,361,75,620,45,620,45,361,75,621,21,621,21,361,75,622,74,622,74,361,75,360,75,623,94,624,140,625,97,624,140,623,94,626,95,627,111,628,93,629,94,628,93,627,111,630,35,630,35,627,111,631,103,630,35,631,103,632,99,632,99,631,103,633,73,634,62,635,97,636,19,635,97,634,62,637,25,635,97,637,25,638,59,635,97,638,59,639,77,635,97,639,77,640,76,635,97,640,76,641,96,635,97,641,96,642,140,643,94,644,98,645,97,644,98,643,94,646,93,647,97,648,92,649,91,648,92,647,97,650,82,650,82,647,97,651,98,650,82,651,98,652,37,653,21,654,100,655,101,654,100,653,21,656,62,656,62,653,21,657,70,657,70,653,21,658,68,658,68,653,21,350,69,350,69,653,21,348,16,543,75,659,46,660,46,659,46,543,75,542,75,661,6,662,83,663,28,662,83,661,6,664,8,664,8,661,6,665,1,666,71,667,20,668,102,669,20,315,20,317,107,670,74,671,19,672,19,673,146,674,147,675,148,674,147,673,146,676,149,676,149,673,146,677,105,677,105,673,146,678,150,677,105,678,150,679,151,677,105,679,151,680,152,677,105,680,152,681,104,681,104,680,152,682,153,681,104,682,153,683,154,683,154,682,153,684,155,683,154,684,155,685,156,685,156,684,155,686,157,685,156,686,157,687,158,687,158,686,157,688,113,688,113,686,157,689,159,688,113,689,159,690,160,688,113,690,160,691,161,688,113,691,161,692,162,688,113,692,162,693,163,688,113,693,163,694,164,688,113,694,164,695,165,688,113,695,165,696,114,688,113,696,114,697,112,698,154,699,19,700,104,699,19,698,154,701,108,702,20,703,149,704,105,703,149,702,20,705,142,705,142,702,20,706,107,707,20,708,166,709,20,710,20,711,166,712,20,711,166,710,20,713,20,714,71,715,55,716,20,715,55,714,71,717,77,715,55,717,77,718,78,719,87,720,53,721,52,720,53,719,87,722,54,723,87,724,52,725,86,726,166,727,106,728,20,727,106,726,166,729,167,730,167,317,107,314,106,317,107,730,167,731,142,732,113,733,109,734,158,733,109,732,113,735,21,736,156,737,108,738,154,737,108,736,156,739,110,740,158,741,110,742,156,741,110,740,158,743,109,744,168,745,114,746,165,745,114,744,168,747,17,352,17,748,65,351,66,748,65,352,17,749,168,748,65,749,168,750,169,751,121,752,170,753,171,752,170,751,121,754,124,752,170,754,124,755,172,755,172,754,124,366,47,755,172,366,47,368,50,755,172,368,50,756,173,756,173,368,50,369,51,756,173,369,51,757,174,757,174,369,51,372,56,757,174,372,56,758,175,758,175,372,56,373,57,758,175,373,57,759,176,759,176,373,57,376,43,759,176,376,43,760,177,760,177,376,43,383,42,760,177,383,42,761,178,761,178,383,42,385,44,761,178,385,44,762,179,762,179,385,44,386,61,762,179,386,61,763,180,763,180,386,61,387,63,763,180,387,63,764,181,764,181,387,63,388,64,764,181,388,64,765,169,765,169,388,64,389,65,766,182,767,117,768,145,767,117,766,182,769,115,769,115,766,182,770,120,770,120,766,182,771,119,771,119,766,182,772,183,128,49,395,115,773,120,774,171,775,120,776,184,775,120,774,171,777,119,777,119,774,171,778,121,779,183,780,121,781,119,780,121,779,183,782,124,782,124,779,183,783,122,784,123,785,185,786,186,785,185,784,123,787,122,788,187,789,123,790,186,789,123,788,187,791,125,792,188,793,125,794,187,793,125,792,188,795,126,796,189,795,126,792,188,795,126,796,189,797,127,798,190,797,127,796,189,797,127,798,190,799,128,800,191,799,128,798,190,799,128,800,191,801,129,802,192,801,129,800,191,801,129,802,192,803,130,804,193,803,130,802,192,803,130,804,193,805,131,806,194,805,131,804,193,805,131,806,194,807,132,808,195,807,132,806,194,807,132,808,195,809,133,810,196,811,135,812,197,811,135,810,196,813,134,814,197,809,133,808,195,809,133,814,197,815,135,816,198,813,134,810,196,813,134,816,198,817,41,818,199,819,41,820,198,819,41,818,199,821,75,822,46,818,199,823,200,818,199,822,46,821,75,824,201,825,139,826,137,825,139,824,201,827,143,825,139,827,143,828,202,829,139,830,144,831,138,830,144,829,139,832,203,833,116,834,142,835,118,834,142,833,116,836,204,837,166,838,142,839,167,838,142,837,166,840,141,840,141,837,166,841,205,842,85,843,206,844,207,843,206,842,85,845,53,846,208,847,85,848,209,847,85,846,208,849,85,847,85,850,85,848,209,851,143,852,208,853,202,852,208,851,143,854,85,855,143,856,210,857,85,856,210,855,143,858,201,859,117,860,204,861,116,860,204,859,117,862,211,862,211,859,117,863,212,864,203,865,145,866,144,865,145,864,203,867,182,868,32,869,213,870,53,869,213,868,32,871,214,869,213,871,214,872,215,871,214,868,32,873,46,874,6,875,28,876,29,877,147,878,142,879,204,878,142,877,147,880,149,881,204,882,148,883,147,882,148,881,204,884,211,885,216,886,148,887,211,886,148,885,216,888,146,889,217,890,146,891,216,890,146,889,217,892,150,893,150,894,218,895,151,894,218,893,150,896,217,897,218,898,152,899,151,898,152,897,218,900,219,901,219,902,153,903,152,902,153,901,219,904,220,904,220,905,155,902,153,905,155,904,220,906,221,906,221,907,157,905,155,907,157,906,221,908,222,908,222,909,159,907,157,909,159,908,222,910,223,910,223,911,160,909,159,911,160,910,223,912,224,912,224,913,161,911,160,913,161,912,224,914,225,914,225,915,162,913,161,915,162,914,225,916,226,916,226,917,163,915,162,917,163,916,226,918,227,918,227,919,164,917,163,919,164,918,227,920,228,921,228,746,165,922,164,746,165,921,228,744,168,923,20,924,205,925,166,924,205,923,20,926,229,749,168,927,181,750,169,927,181,749,168,928,228,927,181,928,228,929,227,930,47,931,124,932,121,929,227,933,180,927,181,933,180,929,227,934,226,934,226,935,179,933,180,935,179,934,226,936,225,936,225,937,178,935,179,937,178,936,225,938,224,938,224,939,177,937,178,939,177,938,224,940,223,940,223,941,176,939,177,941,176,940,223,942,222,943,221,941,176,942,222,941,176,943,221,944,175,945,220,944,175,943,221,944,175,945,220,946,174,947,219,946,174,945,220,946,174,947,219,948,173,949,172,950,219,951,218,950,219,949,172,952,173,953,217,954,172,955,218,954,172,953,217,956,170,957,171,958,217,959,216,958,217,957,171,960,170,961,230,962,183,963,182,962,183,961,230,964,231,965,184,395,115,966,212,395,115,965,184,773,120,967,231,968,122,969,183,968,122,967,231,970,185,971,232,972,231,973,230,972,231,971,232,974,233,972,231,974,233,975,207,972,231,975,207,976,185,976,185,975,207,977,186,977,186,975,207,978,187,978,187,975,207,979,206,978,187,979,206,980,188,980,188,979,206,981,234,980,188,981,234,982,189,982,189,981,234,983,235,982,189,983,235,984,190,984,190,983,235,985,236,984,190,985,236,986,200,984,190,986,200,987,191,987,191,986,200,988,192,988,192,986,200,989,193,989,193,986,200,990,194,990,194,986,200,991,195,991,195,986,200,992,197,992,197,986,200,993,196,993,196,986,200,994,198,994,198,986,200,995,199,996,214,997,200,998,236,997,200,996,214,999,46,1000,137,1001,210,1002,201,1003,202,848,209,1004,139,848,209,1003,202,846,208,1005,139,1006,232,1007,203,1006,232,1005,139,1008,233,1009,141,1010,205,1011,229,1012,207,1013,209,1014,85,1013,209,1012,207,1015,139,1015,139,1012,207,1016,233,1017,53,1018,234,1019,206,1018,234,1017,53,1020,213,1021,137,1022,85,1023,210,1024,212,1025,216,1026,211,1025,216,1024,212,1027,171,1027,171,1024,212,1028,184,1029,230,1030,203,1031,232,1030,203,1029,230,1032,182,1033,215,1034,236,1035,235,1034,236,1033,215,1036,214,1037,213,1038,235,1039,234,1038,235,1037,213,1040,215,1041,141,1042,229,1043,20,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID199(GL2 gl){
double[] positionsArray = {
43.4175124,8.1789866,21.6501467,44.0419681,8.1789866,21.4440729,44.0641954,8.1789866,21.4433543,43.4265802,8.1789866,21.6408579,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID205(GL2 gl){
double[] positionsArray = {
15.712461,10.5319062,18.134672,15.712461,5.5368119,18.134672,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
gl.glEnable(GL2.GL_BLEND);
gl.glColor4d(0.0, 0.0, 0.0, 1.0);
int[] indices = {
1,
0,
};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices);
gl.glDrawElements(GL2.GL_LINES, indices.length, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID211(GL2 gl){
double[] positionsArray = {
42.6615769,8.1789866,21.5971115,42.6613113,8.1789866,21.5923693,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
gl.glEnable(GL2.GL_BLEND);
gl.glColor4d(0.3960784, 0.3372549, 0.2196078, 1.0);
int[] indices = {
1,
0,
};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices);
gl.glDrawElements(GL2.GL_LINES, indices.length, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID217(GL2 gl){
double[] positionsArray = {
42.6372926,8.1789866,21.1635524,42.6326329,8.1789866,21.0803606,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
gl.glEnable(GL2.GL_BLEND);
gl.glColor4d(0.3960784, 0.3372549, 0.2196078, 1.0);
int[] indices = {
1,
0,
};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices);
gl.glDrawElements(GL2.GL_LINES, indices.length, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
}
