//Header


package SketchupModels;
import javax.media.opengl.GL2;
import javax.media.opengl.glu.GLU;
import Buildings.Building;
import java.nio.DoubleBuffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;
import com.jogamp.opengl.util.GLBuffers;
import java.util.HashMap;
import java.util.Map;
public class Hot_tub
{
private int displayList = -1;
private Map<String, com.jogamp.opengl.util.texture.Texture> imageMap = new HashMap<String, com.jogamp.opengl.util.texture.Texture>(); // map of ID's to textures
public Hot_tub(GL2 gl, GLU glu) {
    generate(gl, glu);
}
public void draw(GL2 gl, GLU glu) {
  gl.glCallList(displayList);
}
private com.jogamp.opengl.util.texture.Texture ID5;
private com.jogamp.opengl.util.texture.Texture ID18;
private com.jogamp.opengl.util.texture.Texture ID45;
private void generate(GL2 gl, GLU glu){
ID5 = Building.setupTexture(gl, "hot_tub/texture0.jpg", "SketchupModels");
ID18 = Building.setupTexture(gl, "hot_tub/texture1.jpg", "SketchupModels");
ID45 = Building.setupTexture(gl, "hot_tub/texture2.jpg", "SketchupModels");

displayList = gl.glGenLists(1);
gl.glNewList(displayList, GL2.GL_COMPILE);
  gl.glPushAttrib(GL2.GL_POLYGON_BIT);
    gl.glFrontFace(GL2.GL_CCW);
    gl.glCullFace(GL2.GL_BACK);
    gl.glEnable(GL2.GL_CULL_FACE);
gl.glPushMatrix();
gl.glScaled(0.08333333232623386, 0.08333333232623386, 0.08333333232623386);
gl.glRotatef(-90,1,0,0);
ID2(gl);
ID15(gl);
ID28(gl);
ID36(gl);
ID42(gl);
ID55(gl);
ID63(gl);
ID69(gl);
ID75(gl);
ID81(gl);
ID89(gl);
ID97(gl);
ID103(gl);
ID109(gl);
ID115(gl);
ID121(gl);
ID127(gl);
ID133(gl);
ID139(gl);
ID145(gl);
ID151(gl);
ID157(gl);
ID163(gl);
ID169(gl);
ID175(gl);
ID181(gl);
ID187(gl);
ID193(gl);
ID199(gl);
ID205(gl);
ID211(gl);
ID217(gl);
ID223(gl);
ID229(gl);
ID235(gl);
ID241(gl);
       gl.glPopMatrix();
   gl.glPopAttrib();
gl.glEndList();
}
//Trailer


private void ID2(GL2 gl){
double[] positionsArray = {
0.0,172.9375,54.625,188.375,172.9375,0.0,0.0,172.9375,0.0,188.375,172.9375,54.625,0.0,172.9375,54.625,0.0,0.0,0.0,0.0,0.0,54.625,0.0,172.9375,0.0,188.375,0.0,54.625,0.0,0.0,0.0,188.375,0.0,0.0,0.0,0.0,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,1.0,0.0,-0.0,1.0,0.0,-0.0,1.0,0.0,-0.0,1.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID5.bind();
texcoordArray = new float[] {
0.0f,0.91041666f,-3.1395833f,0.0f,0.0f,0.0f,-3.1395833f,0.91041666f,-2.8822916f,0.91041666f,-2.8822916f,0.0f,3.1395833f,0.91041666f,3.1395833f,0.0f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,4,4,5,2,6,0,5,2,4,4,7,5,8,6,9,2,10,7,9,2,8,6,11,0,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID15(GL2 gl){
double[] positionsArray = {
188.375,172.9375,0.0,188.375,125.7489084399653,46.875,188.375,125.7489084399653,0.0,188.375,39.68640843996529,0.0,188.375,0.0,54.625,188.375,0.0,0.0,188.375,39.68640843996529,46.875,188.375,172.9375,54.625,0.0,0.0,54.625,14.36581933026167,78.81796890861304,54.625,0.0,172.9375,54.625,19.06584499966206,58.41929178312527,54.625,28.88528731293081,39.93213888119614,54.625,43.15496750381442,24.61637912162734,54.625,60.90243044906556,13.51575622154388,54.625,80.91821587803467,7.386759286939679,54.625,188.375,0.0,54.625,18.0149440665295,62.98032832499169,54.625,26.68971183830323,44.06576869562235,54.625,39.96434232792763,28.04090216790651,54.625,56.93419140489888,15.99779691336397,54.625,76.44279189862297,8.757170652919314,54.625,97.16066492493927,6.812460100521236,54.625,101.838281091387,6.647069330261672,54.625,117.6759216750083,10.29619406652948,54.625,122.2369582168747,11.34709499966206,54.625,136.5904813043777,18.97096183830323,54.625,140.7241111188039,21.16653731293083,54.625,152.6153478320935,32.24559232792767,54.625,156.0398708783726,35.43621750381438,54.625,164.6584530866361,49.21544140489891,54.625,167.1404937784561,53.18368044906556,54.625,171.8990793470807,68.724041898623,54.625,173.2694907130603,73.19946587803467,54.625,173.8437898994788,89.44191492493933,54.625,174.0091806697383,94.11953109138692,54.625,86.53671890861308,166.2904306697383,54.625,188.375,172.9375,54.625,66.1380417831253,161.590405000338,54.625,47.65088888119615,151.7709626870692,54.625,32.33512912162738,137.5012824961856,54.625,21.23450622154388,119.7538195509345,54.625,15.10550928693968,99.73803412196534,54.625,14.53121010052124,83.49558507506072,54.625,16.47592065291931,104.213458101377,54.625,23.71654691336394,123.7220585951011,54.625,35.75965216790651,140.6919076720724,54.625,51.78451869562235,153.9665381616968,54.625,70.69907832499166,162.6413059334705,54.625,91.2143350750607,166.1250398994788,54.625,107.4567841219653,165.5507407130603,54.625,111.932208101377,164.1803293470807,54.625,127.4725695509345,159.4217437784561,54.625,131.4408085951011,156.9397030866361,54.625,145.2200324961856,148.3211208783726,54.625,148.4106576720723,144.8965978320935,54.625,159.4897126870692,133.0053611188039,54.625,161.6852881616968,128.8717313043777,54.625,169.3091550003379,114.5182082168747,54.625,170.3600559334705,109.9571716750083,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID18.bind();
texcoordArray = new float[] {
2.8822916f,0.0f,2.0958152f,0.78125f,2.0958152f,0.0f,0.66144013f,0.0f,0.0f,0.91041666f,0.0f,0.0f,0.66144013f,0.78125f,2.8822916f,0.91041666f,0.23943032f,1.3136328f,0.0f,2.8822916f,0.31776407f,0.97365487f,0.48142144f,0.6655356f,0.7192495f,0.410273f,1.0150405f,0.2252626f,1.348637f,0.123112656f,3.1395833f,0.0f,0.30024907f,1.0496721f,0.44482854f,0.7344295f,0.66607237f,0.46734837f,0.9489032f,0.26662993f,1.2740465f,0.14595285f,1.6193445f,0.113541f,1.6973047f,0.110784486f,1.9612653f,0.17160323f,2.0372827f,0.18911825f,2.276508f,0.3161827f,2.3454018f,0.35277563f,2.543589f,0.53742653f,2.6006646f,0.59060365f,2.7443075f,0.82025737f,2.7856748f,0.8863947f,2.8649848f,1.1454006f,2.8878248f,1.2199911f,2.8973966f,1.4906986f,2.900153f,1.5686588f,1.4422786f,2.7715073f,3.1395833f,2.8822916f,1.1023006f,2.6931734f,0.79418147f,2.529516f,0.5389188f,2.291688f,0.35390845f,1.9958969f,0.2517585f,1.6623006f,0.24218683f,1.3915931f,0.2745987f,1.7368909f,0.39527577f,2.0620344f,0.5959942f,2.344865f,0.8630753f,2.566109f,1.178318f,2.7106884f,1.5202389f,2.7687507f,1.7909464f,2.759179f,1.8655368f,2.7363389f,2.1245427f,2.6570292f,2.19068f,2.6156616f,2.4203339f,2.4720187f,2.473511f,2.4149432f,2.6581619f,2.216756f,2.6947548f,2.1478622f,2.8218193f,1.9086368f,2.8393342f,1.8326195f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,3,3,4,4,5,5,4,4,3,3,6,6,4,4,6,6,7,7,7,7,6,6,1,1,7,7,1,1,0,0,8,5,9,8,10,9,9,8,8,5,11,10,11,10,8,5,12,11,12,11,8,5,13,12,13,12,8,5,14,13,14,13,8,5,15,14,15,14,8,5,16,15,9,8,11,10,17,16,11,10,12,11,18,17,12,11,13,12,19,18,13,12,14,13,20,19,14,13,15,14,21,20,15,14,16,15,22,21,22,21,16,15,23,22,23,22,16,15,24,23,24,23,16,15,25,24,25,24,16,15,26,25,26,25,16,15,27,26,27,26,16,15,28,27,28,27,16,15,29,28,29,28,16,15,30,29,30,29,16,15,31,30,31,30,16,15,32,31,32,31,16,15,33,32,33,32,16,15,34,33,34,33,16,15,35,34,10,9,36,35,37,36,36,35,10,9,38,37,38,37,10,9,39,38,39,38,10,9,40,39,40,39,10,9,41,40,41,40,10,9,42,41,42,41,10,9,9,8,42,41,9,8,43,42,41,40,42,41,44,43,40,39,41,40,45,44,39,38,40,39,46,45,38,37,39,38,47,46,36,35,38,37,48,47,37,36,36,35,49,48,37,36,49,48,50,49,37,36,50,49,51,50,37,36,51,50,52,51,37,36,52,51,53,52,37,36,53,52,54,53,37,36,54,53,55,54,37,36,55,54,56,55,37,36,56,55,57,56,37,36,57,56,58,57,37,36,58,57,59,58,37,36,59,58,35,34,37,36,35,34,16,15,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID28(GL2 gl){
double[] positionsArray = {
0.0,172.9375,0.0,15.10550928693968,99.73803412196534,0.0,0.0,0.0,0.0,21.23450622154388,119.7538195509345,0.0,32.33512912162738,137.5012824961856,0.0,47.65088888119615,151.7709626870692,0.0,66.1380417831253,161.590405000338,0.0,86.53671890861308,166.2904306697383,0.0,188.375,172.9375,0.0,14.36581933026167,78.81796890861304,0.0,107.4567841219653,165.5507407130603,0.0,127.4725695509345,159.4217437784561,0.0,145.2200324961856,148.3211208783726,0.0,159.4897126870692,133.0053611188039,0.0,169.3091550003379,114.5182082168747,0.0,174.0091806697383,94.11953109138692,0.0,80.91821587803467,7.386759286939679,0.0,188.375,0.0,0.0,60.90243044906556,13.51575622154388,0.0,43.15496750381442,24.61637912162734,0.0,28.88528731293081,39.93213888119614,0.0,19.06584499966206,58.41929178312527,0.0,101.838281091387,6.647069330261672,0.0,122.2369582168747,11.34709499966206,0.0,140.7241111188039,21.16653731293083,0.0,156.0398708783726,35.43621750381438,0.0,167.1404937784561,53.18368044906556,0.0,173.2694907130603,73.19946587803467,0.0,188.375,125.7489084399653,0.0,188.375,39.68640843996529,0.0,188.375,125.7489084399653,0.0,188.375,39.68640843996529,46.875,188.375,39.68640843996529,0.0,188.375,125.7489084399653,46.875,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,3,0,4,4,0,5,5,0,6,6,0,7,7,0,8,2,1,9,7,8,10,10,8,11,11,8,12,12,8,13,13,8,14,14,8,15,2,16,17,16,2,18,18,2,19,19,2,20,20,2,21,21,2,9,17,16,22,17,22,23,17,23,24,17,24,25,17,25,26,17,26,27,17,27,15,17,15,8,17,8,28,17,28,29,30,31,32,31,30,33,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 96, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID36(GL2 gl){
double[] positionsArray = {
47.65088888119615,151.7709626870692,0.461717275546004,32.33512912162738,137.5012824961856,0.0,47.65088888119615,151.7709626870692,0.0,32.33512912162738,137.5012824961856,0.461717275546004,66.1380417831253,161.590405000338,0.461717275546004,66.1380417831253,161.590405000338,0.0,19.06584499966206,58.41929178312527,0.461717275546004,15.10550928693968,99.73803412196534,0.461717275546004,14.36581933026167,78.81796890861304,0.461717275546004,21.23450622154388,119.7538195509345,0.461717275546004,28.88528731293081,39.93213888119614,0.461717275546004,32.33512912162738,137.5012824961856,0.461717275546004,33.4375,86.46875,0.461717275546004,35.5075060529391,70.74549301002186,0.461717275546004,43.15496750381442,24.61637912162734,0.461717275546004,41.57645672009535,56.09375,0.461717275546004,51.23076304291723,43.51201304291724,0.461717275546004,60.90243044906556,13.51575622154388,0.461717275546004,63.81249999999999,33.85770672009536,0.461717275546004,80.91821587803467,7.386759286939679,0.461717275546004,78.46424301002185,27.78875605293911,0.461717275546004,94.1875,25.71875,0.461717275546004,101.838281091387,6.647069330261672,0.461717275546004,109.9107569899781,27.7887560529391,0.461717275546004,122.2369582168747,11.34709499966206,0.461717275546004,124.5625,33.85770672009535,0.461717275546004,140.7241111188039,21.16653731293083,0.461717275546004,137.1442369570828,43.51201304291723,0.461717275546004,146.7985432799046,56.09374999999998,0.461717275546004,156.0398708783726,35.43621750381438,0.461717275546004,152.8674939470609,70.74549301002185,0.461717275546004,154.9375,86.46874999999999,0.461717275546004,35.50750605293911,102.1920069899782,0.461717275546004,47.65088888119615,151.7709626870692,0.461717275546004,41.57645672009537,116.84375,0.461717275546004,51.23076304291725,129.4254869570828,0.461717275546004,66.1380417831253,161.590405000338,0.461717275546004,63.81250000000004,139.0797932799047,0.461717275546004,78.46424301002189,145.1487439470609,0.461717275546004,86.53671890861308,166.2904306697383,0.461717275546004,94.18750000000001,147.21875,0.461717275546004,107.4567841219653,165.5507407130603,0.461717275546004,109.9107569899782,145.1487439470609,0.461717275546004,127.4725695509345,159.4217437784561,0.461717275546004,124.5625,139.0797932799046,0.461717275546004,137.1442369570828,129.4254869570827,0.461717275546004,145.2200324961856,148.3211208783726,0.461717275546004,146.7985432799047,116.84375,0.461717275546004,159.4897126870692,133.0053611188039,0.461717275546004,152.8674939470609,102.1920069899781,0.461717275546004,167.1404937784561,53.18368044906556,0.461717275546004,169.3091550003379,114.5182082168747,0.461717275546004,173.2694907130603,73.19946587803467,0.461717275546004,174.0091806697383,94.11953109138692,0.461717275546004,47.65088888119615,151.7709626870692,31.5625,32.33512912162738,137.5012824961856,0.461717275546004,47.65088888119615,151.7709626870692,0.461717275546004,32.33512912162738,137.5012824961856,31.5625,21.23450622154388,119.7538195509345,0.461717275546004,21.23450622154388,119.7538195509345,0.0,86.53671890861308,166.2904306697383,0.461717275546004,86.53671890861308,166.2904306697383,0.0,66.1380417831253,161.590405000338,31.5625,66.1380417831253,161.590405000338,0.461717275546004,21.23450622154388,119.7538195509345,31.5625,21.23450622154388,119.7538195509345,0.461717275546004,15.10550928693968,99.73803412196534,0.461717275546004,15.10550928693968,99.73803412196534,0.0,15.10550928693968,99.73803412196534,31.5625,14.36581933026167,78.81796890861304,0.461717275546004,14.36581933026167,78.81796890861304,0.0,14.36581933026167,78.81796890861304,31.5625,14.36581933026167,78.81796890861304,0.461717275546004,19.06584499966206,58.41929178312527,0.461717275546004,19.06584499966206,58.41929178312527,0.0,19.06584499966206,58.41929178312527,31.5625,19.06584499966206,58.41929178312527,0.461717275546004,28.88528731293081,39.93213888119614,0.461717275546004,28.88528731293081,39.93213888119614,0.0,28.88528731293081,39.93213888119614,31.5625,28.88528731293081,39.93213888119614,0.461717275546004,43.15496750381442,24.61637912162734,0.461717275546004,43.15496750381442,24.61637912162734,0.0,43.15496750381442,24.61637912162734,31.5625,43.15496750381442,24.61637912162734,0.461717275546004,60.90243044906556,13.51575622154388,0.0,60.90243044906556,13.51575622154388,0.461717275546004,60.90243044906556,13.51575622154388,0.461717275546004,60.90243044906556,13.51575622154388,31.5625,80.91821587803467,7.386759286939679,0.0,80.91821587803467,7.386759286939679,0.461717275546004,80.91821587803467,7.386759286939679,0.461717275546004,80.91821587803467,7.386759286939679,31.5625,101.838281091387,6.647069330261672,0.0,101.838281091387,6.647069330261672,0.461717275546004,101.838281091387,6.647069330261672,0.461717275546004,101.838281091387,6.647069330261672,31.5625,122.2369582168747,11.34709499966206,0.0,122.2369582168747,11.34709499966206,0.461717275546004,122.2369582168747,11.34709499966206,0.461717275546004,122.2369582168747,11.34709499966206,31.5625,140.7241111188039,21.16653731293083,0.0,140.7241111188039,21.16653731293083,0.461717275546004,140.7241111188039,21.16653731293083,0.461717275546004,140.7241111188039,21.16653731293083,31.5625,156.0398708783726,35.43621750381438,0.0,156.0398708783726,35.43621750381438,0.461717275546004,156.0398708783726,35.43621750381438,0.461717275546004,156.0398708783726,35.43621750381438,31.5625,167.1404937784561,53.18368044906556,0.461717275546004,167.1404937784561,53.18368044906556,0.0,167.1404937784561,53.18368044906556,31.5625,167.1404937784561,53.18368044906556,0.461717275546004,173.2694907130603,73.19946587803467,0.461717275546004,173.2694907130603,73.19946587803467,0.0,173.2694907130603,73.19946587803467,31.5625,173.2694907130603,73.19946587803467,0.461717275546004,174.0091806697383,94.11953109138692,0.461717275546004,174.0091806697383,94.11953109138692,0.0,174.0091806697383,94.11953109138692,31.5625,174.0091806697383,94.11953109138692,0.461717275546004,169.3091550003379,114.5182082168747,0.461717275546004,169.3091550003379,114.5182082168747,0.0,169.3091550003379,114.5182082168747,31.5625,169.3091550003379,114.5182082168747,0.461717275546004,159.4897126870692,133.0053611188039,0.461717275546004,159.4897126870692,133.0053611188039,0.0,159.4897126870692,133.0053611188039,31.5625,159.4897126870692,133.0053611188039,0.461717275546004,145.2200324961856,148.3211208783726,0.461717275546004,145.2200324961856,148.3211208783726,0.0,145.2200324961856,148.3211208783726,31.5625,145.2200324961856,148.3211208783726,0.461717275546004,127.4725695509345,159.4217437784561,0.0,127.4725695509345,159.4217437784561,0.461717275546004,127.4725695509345,159.4217437784561,0.461717275546004,127.4725695509345,159.4217437784561,31.5625,107.4567841219653,165.5507407130603,0.0,107.4567841219653,165.5507407130603,0.461717275546004,107.4567841219653,165.5507407130603,0.461717275546004,107.4567841219653,165.5507407130603,31.5625,86.53671890861308,166.2904306697383,0.461717275546004,86.53671890861308,166.2904306697383,31.5625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
0.5803474496499313,-0.8143689812884701,0.0,0.7713467919360573,-0.6364150584091745,0.0,0.5803474496499313,-0.8143689812884701,0.0,0.7713467919360573,-0.6364150584091745,0.0,0.3497983877396693,-0.9368250039013305,0.0,0.3497983877396693,-0.9368250039013305,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.5803474496499313,-0.8143689812884701,3.275819335478194E-17,0.7713467919360573,-0.6364150584091745,1.851614071952293E-17,0.5803474496499313,-0.8143689812884701,3.275819335478194E-17,0.7713467919360573,-0.6364150584091745,1.851614071952293E-17,0.909780125062586,-0.4150905010249038,0.0,0.909780125062586,-0.4150905010249038,0.0,0.09541114377411562,-0.995437950674835,0.0,0.09541114377411562,-0.995437950674835,0.0,0.3497983877396693,-0.9368250039013305,3.275819335478178E-17,0.3497983877396693,-0.9368250039013305,3.275819335478178E-17,0.909780125062586,-0.4150905010249038,1.851614071952276E-17,0.909780125062586,-0.4150905010249038,1.851614071952276E-17,0.9862134461488428,-0.1654782119652728,0.0,0.9862134461488428,-0.1654782119652728,0.0,0.9862134461488428,-0.1654782119652728,0.0,0.9954379506748349,0.0954111437741164,0.0,0.9954379506748349,0.0954111437741164,0.0,0.9954379506748349,0.0954111437741164,1.114098405186147E-31,0.9954379506748349,0.0954111437741164,1.114098405186147E-31,0.9368250039013304,0.3497983877396695,0.0,0.9368250039013304,0.3497983877396695,0.0,0.9368250039013304,0.3497983877396695,1.114098405186147E-31,0.9368250039013304,0.3497983877396695,1.114098405186147E-31,0.81436898128847,0.5803474496499316,0.0,0.81436898128847,0.5803474496499316,0.0,0.81436898128847,0.5803474496499316,-2.380221441762562E-17,0.81436898128847,0.5803474496499316,-2.380221441762562E-17,0.6364150584091735,0.7713467919360579,0.0,0.6364150584091735,0.7713467919360579,0.0,0.6364150584091735,0.7713467919360579,-5.286073698102618E-18,0.6364150584091735,0.7713467919360579,-5.286073698102618E-18,0.4150905010249034,0.9097801250625862,0.0,0.4150905010249034,0.9097801250625862,0.0,0.4150905010249034,0.9097801250625862,1.8516140719523E-17,0.4150905010249034,0.9097801250625862,1.8516140719523E-17,0.165478211965273,0.9862134461488428,0.0,0.165478211965273,0.9862134461488428,0.0,0.165478211965273,0.9862134461488428,-1.753367872929741E-32,0.165478211965273,0.9862134461488428,-1.753367872929741E-32,-0.0954111437741164,0.9954379506748349,0.0,-0.0954111437741164,0.9954379506748349,0.0,-0.09541114377411639,0.9954379506748349,9.387616178931725E-32,-0.09541114377411639,0.9954379506748349,9.387616178931725E-32,-0.3497983877396697,0.9368250039013304,0.0,-0.3497983877396697,0.9368250039013304,0.0,-0.3497983877396697,0.9368250039013304,3.441708037672634E-31,-0.3497983877396697,0.9368250039013304,3.441708037672634E-31,-0.5803474496499316,0.81436898128847,0.0,-0.5803474496499316,0.81436898128847,0.0,-0.5803474496499316,0.8143689812884698,1.744889153692874E-18,-0.5803474496499316,0.8143689812884698,1.744889153692874E-18,-0.7713467919360576,0.6364150584091738,0.0,-0.7713467919360576,0.6364150584091738,0.0,-0.7713467919360578,0.6364150584091739,3.134813973401207E-17,-0.7713467919360578,0.6364150584091739,3.134813973401207E-17,-0.909780125062586,0.4150905010249037,0.0,-0.909780125062586,0.4150905010249037,0.0,-0.909780125062586,0.4150905010249037,2.960325058031847E-17,-0.909780125062586,0.4150905010249037,2.960325058031847E-17,-0.9862134461488428,0.1654782119652731,0.0,-0.9862134461488428,0.1654782119652731,0.0,-0.9862134461488428,0.1654782119652731,4.287026227036865E-32,-0.9862134461488428,0.1654782119652731,4.287026227036865E-32,-0.9954379506748349,-0.09541114377411619,0.0,-0.9954379506748349,-0.09541114377411619,0.0,-0.9954379506748349,-0.0954111437741162,2.070256373791769E-30,-0.9954379506748349,-0.0954111437741162,2.070256373791769E-30,-0.9368250039013304,-0.3497983877396694,0.0,-0.9368250039013304,-0.3497983877396694,0.0,-0.9368250039013304,-0.3497983877396694,1.489394493142264E-30,-0.9368250039013304,-0.3497983877396694,1.489394493142264E-30,-0.8143689812884699,-0.5803474496499313,0.0,-0.8143689812884699,-0.5803474496499313,0.0,-0.81436898128847,-0.5803474496499315,2.554710357132006E-17,-0.81436898128847,-0.5803474496499315,2.554710357132006E-17,-0.6364150584091741,-0.7713467919360574,0.0,-0.6364150584091741,-0.7713467919360574,0.0,-0.6364150584091742,-0.7713467919360576,7.366649487116195E-17,-0.6364150584091742,-0.7713467919360576,7.366649487116195E-17,-0.4150905010249039,-0.9097801250625859,0.0,-0.4150905010249039,-0.9097801250625859,0.0,-0.4150905010249039,-0.9097801250625859,4.811939129984106E-17,-0.4150905010249039,-0.9097801250625859,4.811939129984106E-17,-0.1654782119652731,-0.9862134461488428,0.0,-0.1654782119652731,-0.9862134461488428,0.0,-0.1654782119652731,-0.9862134461488428,2.46764590599033E-18,-0.1654782119652731,-0.9862134461488428,2.46764590599033E-18,0.09541114377411562,-0.995437950674835,2.46764590599157E-18,0.09541114377411562,-0.995437950674835,2.46764590599157E-18,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,4,2,5,2,4,0,6,7,8,7,6,9,9,6,10,9,10,11,11,10,12,12,10,13,13,10,14,13,14,15,15,14,16,16,14,17,16,17,18,18,17,19,18,19,20,20,19,21,21,19,22,21,22,23,23,22,24,23,24,25,25,24,26,25,26,27,27,26,28,28,26,29,28,29,30,30,29,31,11,32,33,32,11,12,33,32,34,33,34,35,33,35,36,36,35,37,36,37,38,36,38,39,39,38,40,39,40,41,41,40,42,41,42,43,43,42,44,43,44,45,43,45,46,46,45,47,46,47,48,48,47,49,48,49,31,48,31,29,48,29,50,48,50,51,51,50,52,51,52,53,54,55,56,55,54,57,1,58,59,58,1,3,60,5,61,5,60,4,62,56,63,56,62,54,55,64,65,64,55,57,59,66,67,66,59,58,65,68,66,68,65,64,67,69,70,69,67,66,66,71,72,71,66,68,70,73,74,73,70,69,72,75,76,75,72,71,74,77,78,77,74,73,76,79,80,79,76,75,78,81,82,81,78,77,80,83,84,83,80,79,81,85,82,85,81,86,83,87,84,87,83,88,86,89,85,89,86,90,88,91,87,91,88,92,90,93,89,93,90,94,92,95,91,95,92,96,94,97,93,97,94,98,96,99,95,99,96,100,98,101,97,101,98,102,100,103,99,103,100,104,102,105,101,105,102,106,104,107,103,107,104,108,109,105,106,105,109,110,111,107,108,107,111,112,113,110,109,110,113,114,115,112,111,112,115,116,117,114,113,114,117,118,119,116,115,116,119,120,121,118,117,118,121,122,123,120,119,120,123,124,125,122,121,122,125,126,127,124,123,124,127,128,129,126,125,126,129,130,131,128,127,128,131,132,129,133,130,133,129,134,131,135,132,135,131,136,134,137,133,137,134,138,136,139,135,139,136,140,138,61,137,61,138,60,140,141,139,141,140,142,142,63,141,63,142,62,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 432, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID42(GL2 gl){
double[] positionsArray = {
47.65088888119615,151.7709626870692,54.625,32.33512912162738,137.5012824961856,31.5625,47.65088888119615,151.7709626870692,31.5625,32.33512912162738,137.5012824961856,54.625,35.75965216790651,140.6919076720724,54.625,21.23450622154388,119.7538195509345,54.625,21.23450622154388,119.7538195509345,31.5625,23.71654691336394,123.7220585951011,54.625,32.33512912162738,137.5012824961856,31.5625,35.50750605293911,102.1920069899782,31.5625,33.4375,86.46875,31.5625,47.65088888119615,151.7709626870692,31.5625,41.57645672009537,116.84375,31.5625,51.23076304291725,129.4254869570828,31.5625,66.1380417831253,161.590405000338,31.5625,63.81250000000004,139.0797932799047,31.5625,78.46424301002189,145.1487439470609,31.5625,86.53671890861308,166.2904306697383,31.5625,94.18750000000001,147.21875,31.5625,107.4567841219653,165.5507407130603,31.5625,109.9107569899782,145.1487439470609,31.5625,127.4725695509345,159.4217437784561,31.5625,124.5625,139.0797932799046,31.5625,137.1442369570828,129.4254869570827,31.5625,145.2200324961856,148.3211208783726,31.5625,146.7985432799047,116.84375,31.5625,159.4897126870692,133.0053611188039,31.5625,152.8674939470609,102.1920069899781,31.5625,154.9375,86.46874999999999,31.5625,156.0398708783726,35.43621750381438,31.5625,167.1404937784561,53.18368044906556,31.5625,169.3091550003379,114.5182082168747,31.5625,173.2694907130603,73.19946587803467,31.5625,174.0091806697383,94.11953109138692,31.5625,15.10550928693968,99.73803412196534,31.5625,19.06584499966206,58.41929178312527,31.5625,14.36581933026167,78.81796890861304,31.5625,21.23450622154388,119.7538195509345,31.5625,28.88528731293081,39.93213888119614,31.5625,35.5075060529391,70.74549301002186,31.5625,43.15496750381442,24.61637912162734,31.5625,41.57645672009535,56.09375,31.5625,51.23076304291723,43.51201304291724,31.5625,60.90243044906556,13.51575622154388,31.5625,63.81249999999999,33.85770672009536,31.5625,80.91821587803467,7.386759286939679,31.5625,78.46424301002185,27.78875605293911,31.5625,94.1875,25.71875,31.5625,101.838281091387,6.647069330261672,31.5625,109.9107569899781,27.7887560529391,31.5625,122.2369582168747,11.34709499966206,31.5625,124.5625,33.85770672009535,31.5625,140.7241111188039,21.16653731293083,31.5625,137.1442369570828,43.51201304291723,31.5625,146.7985432799046,56.09374999999998,31.5625,152.8674939470609,70.74549301002185,31.5625,154.9375,86.46874999999999,31.5625,152.8674939470609,70.74549301002185,31.5625,156.0398708783726,35.43621750381438,31.5625,146.7985432799046,56.09374999999998,31.5625,140.7241111188039,21.16653731293083,31.5625,137.1442369570828,43.51201304291723,31.5625,124.5625,33.85770672009535,31.5625,122.2369582168747,11.34709499966206,31.5625,109.9107569899781,27.7887560529391,31.5625,101.838281091387,6.647069330261672,31.5625,94.1875,25.71875,31.5625,80.91821587803467,7.386759286939679,31.5625,78.46424301002185,27.78875605293911,31.5625,63.81249999999999,33.85770672009536,31.5625,60.90243044906556,13.51575622154388,31.5625,51.23076304291723,43.51201304291724,31.5625,43.15496750381442,24.61637912162734,31.5625,41.57645672009535,56.09375,31.5625,35.5075060529391,70.74549301002186,31.5625,28.88528731293081,39.93213888119614,31.5625,33.4375,86.46875,31.5625,32.33512912162738,137.5012824961856,31.5625,21.23450622154388,119.7538195509345,31.5625,19.06584499966206,58.41929178312527,31.5625,15.10550928693968,99.73803412196534,31.5625,14.36581933026167,78.81796890861304,31.5625,174.0091806697383,94.11953109138692,31.5625,169.3091550003379,114.5182082168747,31.5625,173.2694907130603,73.19946587803467,31.5625,167.1404937784561,53.18368044906556,31.5625,159.4897126870692,133.0053611188039,31.5625,152.8674939470609,102.1920069899781,31.5625,146.7985432799047,116.84375,31.5625,145.2200324961856,148.3211208783726,31.5625,137.1442369570828,129.4254869570827,31.5625,127.4725695509345,159.4217437784561,31.5625,124.5625,139.0797932799046,31.5625,109.9107569899782,145.1487439470609,31.5625,107.4567841219653,165.5507407130603,31.5625,94.18750000000001,147.21875,31.5625,86.53671890861308,166.2904306697383,31.5625,78.46424301002189,145.1487439470609,31.5625,66.1380417831253,161.590405000338,31.5625,63.81250000000004,139.0797932799047,31.5625,51.23076304291725,129.4254869570828,31.5625,47.65088888119615,151.7709626870692,31.5625,41.57645672009537,116.84375,31.5625,35.50750605293911,102.1920069899782,31.5625,66.1380417831253,161.590405000338,54.625,66.1380417831253,161.590405000338,31.5625,51.78451869562235,153.9665381616968,54.625,15.10550928693968,99.73803412196534,54.625,15.10550928693968,99.73803412196534,31.5625,16.47592065291931,104.213458101377,54.625,86.53671890861308,166.2904306697383,54.625,86.53671890861308,166.2904306697383,31.5625,70.69907832499166,162.6413059334705,54.625,107.4567841219653,165.5507407130603,54.625,107.4567841219653,165.5507407130603,31.5625,91.2143350750607,166.1250398994788,54.625,127.4725695509345,159.4217437784561,54.625,127.4725695509345,159.4217437784561,31.5625,111.932208101377,164.1803293470807,54.625,145.2200324961856,148.3211208783726,54.625,145.2200324961856,148.3211208783726,31.5625,131.4408085951011,156.9397030866361,54.625,148.4106576720723,144.8965978320935,54.625,159.4897126870692,133.0053611188039,31.5625,159.4897126870692,133.0053611188039,54.625,161.6852881616968,128.8717313043777,54.625,169.3091550003379,114.5182082168747,31.5625,169.3091550003379,114.5182082168747,54.625,170.3600559334705,109.9571716750083,54.625,174.0091806697383,94.11953109138692,31.5625,174.0091806697383,94.11953109138692,54.625,173.8437898994788,89.44191492493933,54.625,173.2694907130603,73.19946587803467,31.5625,173.2694907130603,73.19946587803467,54.625,171.8990793470807,68.724041898623,54.625,167.1404937784561,53.18368044906556,31.5625,167.1404937784561,53.18368044906556,54.625,164.6584530866361,49.21544140489891,54.625,156.0398708783726,35.43621750381438,31.5625,156.0398708783726,35.43621750381438,54.625,140.7241111188039,21.16653731293083,54.625,140.7241111188039,21.16653731293083,31.5625,152.6153478320935,32.24559232792767,54.625,122.2369582168747,11.34709499966206,54.625,122.2369582168747,11.34709499966206,31.5625,136.5904813043777,18.97096183830323,54.625,101.838281091387,6.647069330261672,54.625,101.838281091387,6.647069330261672,31.5625,117.6759216750083,10.29619406652948,54.625,80.91821587803467,7.386759286939679,54.625,80.91821587803467,7.386759286939679,31.5625,97.16066492493927,6.812460100521236,54.625,60.90243044906556,13.51575622154388,54.625,60.90243044906556,13.51575622154388,31.5625,76.44279189862297,8.757170652919314,54.625,43.15496750381442,24.61637912162734,54.625,43.15496750381442,24.61637912162734,31.5625,56.93419140489888,15.99779691336397,54.625,28.88528731293081,39.93213888119614,31.5625,39.96434232792763,28.04090216790651,54.625,28.88528731293081,39.93213888119614,54.625,19.06584499966206,58.41929178312527,31.5625,26.68971183830323,44.06576869562235,54.625,19.06584499966206,58.41929178312527,54.625,14.36581933026167,78.81796890861304,31.5625,18.0149440665295,62.98032832499169,54.625,14.36581933026167,78.81796890861304,54.625,14.53121010052124,83.49558507506072,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
0.5803474496499313,-0.81436898128847,-2.093760787457312E-16,0.7713467919360574,-0.6364150584091745,-3.591288230871584E-16,0.5803474496499313,-0.81436898128847,-2.093760787457312E-16,0.7713467919360574,-0.6364150584091745,-3.591288230871584E-16,0.6816789789565265,-0.7316513989932554,-2.960439453603373E-16,0.909780125062586,-0.4150905010249035,-3.665034995729753E-16,0.909780125062586,-0.4150905010249035,-3.665034995729753E-16,0.847816647447829,-0.5302894797281232,-4.160689070816377E-16,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,0.3497983877396693,-0.9368250039013305,-2.106071474634715E-16,0.3497983877396693,-0.9368250039013305,-2.106071474634715E-16,0.469086014577115,-0.8831524845281016,-1.191257293737698E-16,0.9862134461488428,-0.1654782119652726,-3.573234890627306E-16,0.9862134461488428,-0.1654782119652726,-3.573234890627306E-16,0.9561770124988177,-0.2927892087643187,-3.10667115572652E-16,0.09541114377411584,-0.9954379506748348,-3.626957609480011E-16,0.09541114377411584,-0.9954379506748348,-3.626957609480011E-16,0.2245256135055627,-0.9744681877208464,-2.984850188687405E-16,-0.1654782119652727,-0.9862134461488428,-4.422802710285339E-16,-0.1654782119652727,-0.9862134461488428,-4.422802710285339E-16,-0.03533583708027275,-0.9993754943052369,-4.207006779991788E-16,-0.4150905010249037,-0.909780125062586,-3.920885339851409E-16,-0.4150905010249037,-0.909780125062586,-3.920885339851409E-16,-0.292789208764319,-0.9561770124988177,-4.562923259973336E-16,-0.636415058409174,-0.7713467919360577,-4.093838898808876E-16,-0.636415058409174,-0.7713467919360577,-4.093838898808876E-16,-0.5302894797281232,-0.847816647447829,-3.211759984489836E-16,-0.7316513989932547,-0.681678978956527,-4.905871094542721E-16,-0.81436898128847,-0.5803474496499316,-4.241067428423513E-16,-0.81436898128847,-0.5803474496499316,-4.241067428423513E-16,-0.8831524845281018,-0.4690860145771145,-3.503697922757943E-16,-0.9368250039013304,-0.3497983877396695,-1.959131959347597E-16,-0.9368250039013304,-0.3497983877396695,-1.959131959347597E-16,-0.9744681877208462,-0.2245256135055636,-3.810447049388171E-17,-0.9954379506748349,-0.09541114377411632,-2.374327964447187E-16,-0.9954379506748349,-0.09541114377411632,-2.374327964447187E-16,-0.9993754943052369,0.03533583708027276,-4.326985814195789E-16,-0.9862134461488428,0.1654782119652728,-3.912102856579868E-16,-0.9862134461488428,0.1654782119652728,-3.912102856579868E-16,-0.9561770124988177,0.2927892087643191,-3.430282734448042E-16,-0.9097801250625861,0.4150905010249035,-3.018368467171318E-16,-0.9097801250625861,0.4150905010249035,-3.018368467171318E-16,-0.8478166474478294,0.5302894797281228,-2.554809078571455E-16,-0.7713467919360578,0.6364150584091737,-3.591901331603221E-16,-0.7713467919360578,0.6364150584091737,-3.591901331603221E-16,-0.5803474496499316,0.8143689812884698,-2.550849302484362E-16,-0.5803474496499316,0.8143689812884698,-2.550849302484362E-16,-0.6816789789565272,0.7316513989932546,-4.567535156988068E-16,-0.3497983877396697,0.9368250039013304,-2.633890471094815E-17,-0.3497983877396697,0.9368250039013304,-2.633890471094815E-17,-0.4690860145771146,0.8831524845281018,-4.905177091861117E-17,-0.09541114377411647,0.9954379506748349,-1.97956893662421E-16,-0.09541114377411647,0.9954379506748349,-1.97956893662421E-16,-0.2245256135055639,0.9744681877208462,-3.175372541156821E-18,0.1654782119652728,0.9862134461488428,-3.171249911123055E-16,0.1654782119652728,0.9862134461488428,-3.171249911123055E-16,0.03533583708027271,0.9993754943052369,-3.893513174491013E-16,0.4150905010249031,0.9097801250625861,-3.158741760115837E-16,0.4150905010249031,0.9097801250625861,-3.158741760115837E-16,0.2927892087643192,0.9561770124988177,-2.3947256825392E-16,0.6364150584091735,0.7713467919360582,-2.633557772134138E-16,0.6364150584091735,0.7713467919360582,-2.633557772134138E-16,0.5302894797281221,0.8478166474478297,-3.868710890408224E-16,0.81436898128847,0.5803474496499316,-1.177261217207902E-16,0.7316513989932547,0.6816789789565271,-1.353343750218679E-16,0.81436898128847,0.5803474496499316,-1.177261217207902E-16,0.9368250039013304,0.3497983877396697,-1.471596042383283E-16,0.8831524845281019,0.4690860145771144,-9.810354183722246E-17,0.9368250039013304,0.3497983877396697,-1.471596042383283E-16,0.9954379506748349,0.09541114377411658,-2.983341316515654E-16,0.9744681877208462,0.2245256135055641,-1.93697725010566E-16,0.9954379506748349,0.09541114377411658,-2.983341316515654E-16,0.9993754943052369,-0.03533583708027269,-3.978659585861585E-16,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID45.bind();
texcoordArray = new float[] {
1.75f,2.5625f,1.7763568E-15f,-1.7763568E-15f,1.75f,-1.7763568E-15f,1.7763568E-15f,2.5625f,0.39129075f,2.5625f,42.0f,-8.881784E-16f,40.25f,2.5625f,40.25f,-8.881784E-16f,40.641293f,2.5625f,42.0f,2.5625f,-12.911458f,9.607639f,-12.738957f,7.8606105f,-13.003323f,3.9373574f,-12.2332115f,6.232639f,-11.727009f,2.3518374f,-11.428686f,4.834668f,-10.380208f,3.7619674f,-10.186413f,1.2607883f,-9.159229f,3.0876396f,-8.486524f,0.73856324f,-7.8489585f,2.8576388f,-6.7431846f,0.820751f,-6.5386868f,3.0876396f,-5.3177085f,3.7619674f,-5.0752025f,1.5017507f,-4.2692304f,4.834668f,-3.5962472f,2.7351532f,-3.4647048f,6.232639f,-2.9589589f,7.8606105f,-2.4071074f,4.4369044f,-2.7864583f,9.607639f,-2.6945941f,15.277921f,-1.7695422f,13.30598f,-1.5888205f,6.4910326f,-1.2587924f,11.082004f,-1.1971517f,8.757552f,-14.500765f,10.457726f,-14.109097f,12.724245f,-14.439124f,8.133274f,-13.928374f,5.909298f,-13.29081f,14.778374f,-12.738957f,11.354668f,-12.2332115f,12.982639f,-12.101669f,16.480125f,-11.428686f,14.3806095f,-10.622714f,17.713528f,-10.380208f,15.45331f,-9.159229f,16.127638f,-8.954732f,18.394527f,-7.8489585f,16.35764f,-7.2113934f,18.476715f,-6.5386868f,16.127638f,-5.5115037f,17.954489f,-5.3177085f,15.45331f,-4.2692304f,14.3806095f,-3.9709074f,16.86344f,-3.4647048f,12.982639f,-2.9589589f,11.354668f,3.5f,2.5625f,1.75f,-4.440892E-16f,3.5f,-4.440892E-16f,1.75f,2.5625f,2.1412907f,2.5625f,40.25f,4.440892E-16f,38.5f,2.5625f,38.5f,4.440892E-16f,38.891293f,2.5625f,40.25f,2.5625f,5.25f,2.5625f,3.5f,-3.996803E-15f,5.25f,-3.996803E-15f,3.5f,2.5625f,3.8912907f,2.5625f,7.0f,2.5625f,5.25f,-7.1054274E-15f,7.0f,-7.1054274E-15f,5.25f,2.5625f,5.6412907f,2.5625f,8.75f,2.5625f,7.0f,-1.0214052E-14f,8.75f,-1.0214052E-14f,7.0f,2.5625f,7.3912907f,2.5625f,10.5f,2.5625f,8.75f,-6.217249E-15f,10.5f,-6.217249E-15f,8.75f,2.5625f,9.141291f,2.5625f,10.891291f,2.5625f,12.25f,-1.0658141E-14f,12.25f,2.5625f,10.5f,-1.0658141E-14f,10.5f,2.5625f,12.641291f,2.5625f,14.0f,-8.881784E-15f,14.0f,2.5625f,12.25f,-8.881784E-15f,12.25f,2.5625f,14.391291f,2.5625f,15.75f,0.0f,15.75f,2.5625f,14.0f,0.0f,14.0f,2.5625f,16.14129f,2.5625f,17.5f,-7.5495166E-15f,17.5f,2.5625f,15.75f,-7.5495166E-15f,15.75f,2.5625f,17.89129f,2.5625f,19.25f,-4.440892E-15f,19.25f,2.5625f,17.5f,-4.440892E-15f,17.5f,2.5625f,19.64129f,2.5625f,21.0f,-2.220446E-15f,21.0f,2.5625f,19.25f,-2.220446E-15f,19.25f,2.5625f,22.75f,2.5625f,21.0f,-4.8849813E-15f,22.75f,-4.8849813E-15f,21.0f,2.5625f,21.39129f,2.5625f,24.5f,2.5625f,22.75f,4.440892E-16f,24.5f,4.440892E-16f,22.75f,2.5625f,23.14129f,2.5625f,26.25f,2.5625f,24.5f,8.881784E-16f,26.25f,8.881784E-16f,24.5f,2.5625f,24.89129f,2.5625f,28.0f,2.5625f,26.25f,8.881784E-16f,28.0f,8.881784E-16f,26.25f,2.5625f,26.64129f,2.5625f,29.75f,2.5625f,28.0f,0.0f,29.75f,0.0f,28.0f,2.5625f,28.39129f,2.5625f,31.5f,2.5625f,29.75f,1.3322676E-15f,31.5f,1.3322676E-15f,29.75f,2.5625f,30.14129f,2.5625f,33.25f,-8.881784E-16f,31.5f,2.5625f,31.5f,-8.881784E-16f,31.89129f,2.5625f,33.25f,2.5625f,35.0f,0.0f,33.25f,2.5625f,33.25f,0.0f,33.641293f,2.5625f,35.0f,2.5625f,36.75f,1.7763568E-15f,35.0f,2.5625f,35.0f,1.7763568E-15f,35.391293f,2.5625f,36.75f,2.5625f,38.5f,-1.3322676E-15f,36.75f,2.5625f,36.75f,-1.3322676E-15f,37.141293f,2.5625f,38.5f,2.5625f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,3,3,0,0,4,4,1,5,5,6,6,7,5,6,1,5,7,8,7,8,1,5,3,9,56,10,57,11,58,12,57,11,59,13,58,12,58,12,59,13,60,14,59,13,61,15,60,14,61,15,62,16,60,14,60,14,62,16,63,17,62,16,64,18,63,17,63,17,64,18,65,19,64,18,66,20,65,19,65,19,66,20,67,21,66,20,68,22,67,21,68,22,69,23,67,21,67,21,69,23,70,24,69,23,71,25,70,24,70,24,71,25,72,26,71,25,73,27,72,26,73,27,74,28,72,26,72,26,74,28,75,29,74,28,76,30,75,29,76,30,77,31,75,29,77,31,78,32,75,29,75,29,78,32,79,33,78,32,80,34,79,33,81,35,79,33,80,34,82,36,83,37,84,38,84,38,83,37,85,39,83,37,86,40,85,39,85,39,86,40,58,12,58,12,86,40,56,10,56,10,86,40,87,41,87,41,86,40,88,42,86,40,89,43,88,42,88,42,89,43,90,44,89,43,91,45,90,44,90,44,91,45,92,46,92,46,91,45,93,47,91,45,94,48,93,47,93,47,94,48,95,49,94,48,96,50,95,49,95,49,96,50,97,51,96,50,98,52,97,51,97,51,98,52,99,53,99,53,98,52,100,54,98,52,101,55,100,54,100,54,101,55,102,56,102,56,101,55,103,57,101,55,77,31,103,57,76,30,103,57,77,31,104,58,2,59,105,60,2,59,104,58,0,61,0,61,104,58,106,62,6,63,107,64,108,65,107,64,6,63,109,66,109,66,6,63,5,67,110,68,105,69,111,70,105,69,110,68,104,71,104,71,110,68,112,72,113,73,111,74,114,75,111,74,113,73,110,76,110,76,113,73,115,77,116,78,114,79,117,80,114,79,116,78,113,81,113,81,116,78,118,82,119,83,117,84,120,85,117,84,119,83,116,86,116,86,119,83,121,87,122,88,123,89,124,90,123,89,122,88,120,91,120,91,122,88,119,92,125,93,126,94,127,95,126,94,125,93,123,96,123,96,125,93,124,97,128,98,129,99,130,100,129,99,128,98,126,101,126,101,128,98,127,102,131,103,132,104,133,105,132,104,131,103,129,106,129,106,131,103,130,107,134,108,135,109,136,110,135,109,134,108,132,111,132,111,134,108,133,112,137,113,138,114,139,115,138,114,137,113,135,116,135,116,137,113,136,117,140,118,138,119,141,120,138,119,140,118,139,121,139,121,140,118,142,122,143,123,141,124,144,125,141,124,143,123,140,126,140,126,143,123,145,127,146,128,144,129,147,130,144,129,146,128,143,131,143,131,146,128,148,132,149,133,147,134,150,135,147,134,149,133,146,136,146,136,149,133,151,137,152,138,150,139,153,140,150,139,152,138,149,141,149,141,152,138,154,142,155,143,153,144,156,145,153,144,155,143,152,146,152,146,155,143,157,147,158,148,155,149,156,150,155,149,158,148,159,151,159,151,158,148,160,152,161,153,160,154,158,155,160,154,161,153,162,156,162,156,161,153,163,157,164,158,163,159,161,160,163,159,164,158,165,161,165,161,164,158,166,162,108,163,166,164,164,165,166,164,108,163,167,166,167,166,108,163,107,167,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
8,9,10,9,8,11,9,11,12,12,11,13,13,11,14,13,14,15,15,14,16,16,14,17,16,17,18,18,17,19,18,19,20,20,19,21,20,21,22,22,21,23,23,21,24,23,24,25,25,24,26,25,26,27,27,26,28,28,26,29,29,26,30,30,26,31,30,31,32,32,31,33,34,35,36,35,34,37,35,37,38,38,37,8,38,8,10,38,10,39,38,39,40,40,39,41,40,41,42,40,42,43,43,42,44,43,44,45,45,44,46,45,46,47,45,47,48,48,47,49,48,49,50,50,49,51,50,51,52,52,51,53,52,53,54,52,54,29,29,54,55,29,55,28,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 144, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID55(GL2 gl){
double[] positionsArray = {
211.625,125.7489084399653,46.875,188.375,39.68640843996529,46.875,188.375,125.7489084399653,46.875,211.625,39.68640843996529,46.875,211.625,39.68640843996529,46.875,211.625,125.7489084399653,46.875,188.375,39.68640843996529,46.875,188.375,125.7489084399653,46.875,211.625,125.7489084399653,34.9375,188.375,125.7489084399653,0.0,211.625,125.7489084399653,0.0,188.375,125.7489084399653,46.875,211.625,125.7489084399653,46.875,211.625,125.7489084399653,46.875,211.625,125.7489084399653,34.9375,188.375,125.7489084399653,46.875,188.375,125.7489084399653,0.0,211.625,125.7489084399653,0.0,211.625,125.7489084399653,46.875,211.625,39.68640843996529,34.9375,211.625,39.68640843996529,46.875,211.625,125.7489084399653,34.9375,211.625,125.7489084399653,34.9375,211.625,125.7489084399653,46.875,211.625,39.68640843996529,34.9375,211.625,39.68640843996529,46.875,188.375,39.68640843996529,46.875,211.625,39.68640843996529,0.0,188.375,39.68640843996529,0.0,211.625,39.68640843996529,34.9375,211.625,39.68640843996529,46.875,211.625,39.68640843996529,46.875,188.375,39.68640843996529,46.875,211.625,39.68640843996529,34.9375,211.625,39.68640843996529,0.0,188.375,39.68640843996529,0.0,230.8125,126.1239084399653,34.9375,211.625,125.7489084399653,34.9375,211.625,126.1239084399653,34.9375,211.625,39.68640843996529,34.9375,230.8125,39.68640843996529,34.9375,230.8125,125.7489084399653,34.9375,230.8125,125.7489084399653,34.9375,230.8125,126.1239084399653,34.9375,230.8125,39.68640843996529,34.9375,211.625,39.68640843996529,34.9375,211.625,125.7489084399653,34.9375,211.625,126.1239084399653,34.9375,230.8125,39.68640843996529,0.0,230.8125,39.68640843996529,23.5625,230.8125,39.68640843996529,34.9375,230.8125,39.68640843996529,34.9375,230.8125,39.68640843996529,23.5625,230.8125,39.68640843996529,0.0,230.8125,126.1239084399653,23.5625,211.625,126.1239084399653,0.0,230.8125,126.1239084399653,0.0,211.625,126.1239084399653,34.9375,230.8125,126.1239084399653,34.9375,230.8125,126.1239084399653,34.9375,230.8125,126.1239084399653,23.5625,211.625,126.1239084399653,34.9375,211.625,126.1239084399653,0.0,230.8125,126.1239084399653,0.0,230.8125,125.7489084399653,34.9375,230.8125,39.68640843996529,23.5625,230.8125,39.68640843996529,34.9375,230.8125,125.7489084399653,23.5625,230.8125,125.7489084399653,23.5625,230.8125,125.7489084399653,34.9375,230.8125,39.68640843996529,23.5625,230.8125,39.68640843996529,34.9375,250.0,39.68640843996529,0.0,250.0,39.68640843996529,12.375,250.0,39.68640843996529,23.5625,250.0,39.68640843996529,23.5625,250.0,39.68640843996529,12.375,250.0,39.68640843996529,0.0,250.0,126.1239084399653,12.375,250.0,126.1239084399653,0.0,250.0,126.1239084399653,23.5625,250.0,126.1239084399653,23.5625,250.0,126.1239084399653,12.375,250.0,126.1239084399653,0.0,250.0,126.1239084399653,23.5625,230.8125,125.7489084399653,23.5625,230.8125,126.1239084399653,23.5625,230.8125,39.68640843996529,23.5625,250.0,39.68640843996529,23.5625,250.0,125.7489084399653,23.5625,250.0,125.7489084399653,23.5625,250.0,126.1239084399653,23.5625,250.0,39.68640843996529,23.5625,230.8125,39.68640843996529,23.5625,230.8125,125.7489084399653,23.5625,230.8125,126.1239084399653,23.5625,250.0,125.7489084399653,23.5625,250.0,39.68640843996529,12.375,250.0,39.68640843996529,23.5625,250.0,125.7489084399653,12.375,250.0,125.7489084399653,12.375,250.0,125.7489084399653,23.5625,250.0,39.68640843996529,12.375,250.0,39.68640843996529,23.5625,269.1875,39.68640843996529,0.0,269.1875,39.68640843996529,12.375,269.1875,39.68640843996529,12.375,269.1875,39.68640843996529,0.0,269.1875,126.1239084399653,12.375,269.1875,126.1239084399653,0.0,269.1875,126.1239084399653,12.375,269.1875,126.1239084399653,0.0,269.1875,126.1239084399653,12.375,250.0,125.7489084399653,12.375,250.0,126.1239084399653,12.375,250.0,39.68640843996529,12.375,269.1875,39.68640843996529,12.375,269.1875,39.68640843996529,12.375,269.1875,126.1239084399653,12.375,250.0,39.68640843996529,12.375,250.0,125.7489084399653,12.375,250.0,126.1239084399653,12.375,269.1875,126.1239084399653,12.375,269.1875,39.68640843996529,0.0,269.1875,39.68640843996529,12.375,269.1875,126.1239084399653,0.0,269.1875,126.1239084399653,0.0,269.1875,126.1239084399653,12.375,269.1875,39.68640843996529,0.0,269.1875,39.68640843996529,12.375,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,0.0,-1.0,-0.0,0.0,-1.0,-0.0,0.0,-1.0,-0.0,0.0,-1.0,-0.0,0.0,-1.0,-0.0,-0.0,1.0,0.0,-0.0,1.0,0.0,-0.0,1.0,0.0,-0.0,1.0,0.0,-0.0,1.0,0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,0.0,-1.0,-0.0,0.0,-1.0,-0.0,0.0,-1.0,-0.0,0.0,-1.0,-0.0,0.0,-1.0,-0.0,-0.0,1.0,0.0,-0.0,1.0,0.0,-0.0,1.0,0.0,-0.0,1.0,0.0,-0.0,1.0,0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,0.0,-1.0,-0.0,0.0,-1.0,-0.0,0.0,-1.0,-0.0,-0.0,1.0,0.0,-0.0,1.0,0.0,-0.0,1.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,0.0,-1.0,-0.0,0.0,-1.0,-0.0,-0.0,1.0,0.0,-0.0,1.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,8,9,10,9,8,11,11,8,12,18,19,20,19,18,21,26,27,28,27,26,29,29,26,30,36,37,38,37,36,39,39,36,40,40,36,41,29,48,27,48,29,49,49,29,50,54,55,56,55,54,57,57,54,58,64,65,66,65,64,67,49,72,48,72,49,73,73,49,74,78,56,79,56,78,54,54,78,80,84,85,86,85,84,87,87,84,88,88,84,89,96,97,98,97,96,99,73,104,72,104,73,105,108,79,109,79,108,78,112,113,114,113,112,115,115,112,116,122,123,124,123,122,125,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 129, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID5.bind();
texcoordArray = new float[] {
-3.5270834f,0.66144013f,-3.5270834f,2.0958152f,-3.1395833f,0.66144013f,-3.1395833f,2.0958152f,3.5270834f,0.78125f,3.5270834f,0.58229166f,3.1395833f,0.78125f,3.1395833f,0.0f,3.5270834f,0.0f,-2.0958152f,0.58229166f,-2.0958152f,0.78125f,-0.66144013f,0.58229166f,-0.66144013f,0.78125f,-3.5270834f,0.78125f,-3.1395833f,0.78125f,-3.5270834f,0.58229166f,-3.5270834f,0.0f,-3.1395833f,0.0f,-3.846875f,2.0958152f,-3.846875f,2.102065f,-3.846875f,0.66144013f,-3.5270834f,2.102065f,-3.846875f,0.58229166f,-3.846875f,0.39270833f,-3.846875f,0.0f,3.846875f,0.58229166f,3.846875f,0.39270833f,3.846875f,0.0f,-2.0958152f,0.39270833f,-0.66144013f,0.39270833f,-4.1666665f,0.39270833f,-4.1666665f,0.20625f,-4.1666665f,0.0f,4.1666665f,0.39270833f,4.1666665f,0.20625f,4.1666665f,0.0f,-4.1666665f,2.0958152f,-4.1666665f,2.102065f,-4.1666665f,0.66144013f,-2.0958152f,0.20625f,-0.66144013f,0.20625f,-4.4864583f,0.20625f,-4.4864583f,0.0f,4.4864583f,0.20625f,4.4864583f,0.0f,-4.4864583f,0.66144013f,-4.4864583f,2.102065f,-2.102065f,0.0f,-2.102065f,0.20625f,-0.66144013f,0.0f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
4,0,5,1,6,2,7,3,6,2,5,1,13,4,14,5,15,6,15,6,14,5,16,7,17,8,16,7,14,5,22,9,23,10,24,11,25,12,24,11,23,10,31,13,32,14,33,15,33,15,32,14,34,16,35,17,34,16,32,14,42,18,43,19,44,20,44,20,43,19,45,0,45,0,43,19,46,1,47,21,46,1,43,19,51,22,33,15,52,23,52,23,33,15,53,24,34,16,53,24,33,15,59,25,60,26,61,5,61,5,60,26,62,8,63,27,62,8,60,26,68,28,69,9,70,29,71,11,70,29,69,9,75,30,52,23,76,31,76,31,52,23,77,32,53,24,77,32,52,23,81,33,82,34,60,26,60,26,82,34,63,27,83,35,63,27,82,34,90,36,91,37,92,38,92,38,91,37,93,20,93,20,91,37,94,18,95,19,94,18,91,37,100,39,101,28,102,40,103,29,102,40,101,28,106,41,76,31,107,42,77,32,107,42,76,31,82,34,110,43,83,35,111,44,83,35,110,43,117,45,118,46,119,38,119,38,118,46,120,36,121,37,120,36,118,46,126,47,127,48,128,49,129,40,128,49,127,48,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID63(GL2 gl){
double[] positionsArray = {
211.625,126.1239084399653,0.0,211.625,125.7489084399653,34.9375,211.625,125.7489084399653,0.0,211.625,126.1239084399653,34.9375,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID69(GL2 gl){
double[] positionsArray = {
230.8125,126.1239084399653,34.9375,230.8125,125.7489084399653,23.5625,230.8125,125.7489084399653,34.9375,230.8125,126.1239084399653,23.5625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID75(GL2 gl){
double[] positionsArray = {
250.0,126.1239084399653,23.5625,250.0,125.7489084399653,12.375,250.0,125.7489084399653,23.5625,250.0,126.1239084399653,12.375,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,-1.0,-0.0,-0.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 6, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID81(GL2 gl){
double[] positionsArray = {
41.57645672009535,56.09375,31.5625,51.23076304291723,43.51201304291724,0.461717275546004,51.23076304291723,43.51201304291724,31.5625,41.57645672009535,56.09375,0.461717275546004,41.57645672009535,56.09375,0.461717275546004,41.57645672009535,56.09375,31.5625,51.23076304291723,43.51201304291724,0.461717275546004,51.23076304291723,43.51201304291724,31.5625,35.5075060529391,70.74549301002186,31.5625,35.5075060529391,70.74549301002186,0.461717275546004,35.5075060529391,70.74549301002186,0.461717275546004,35.5075060529391,70.74549301002186,31.5625,63.81249999999999,33.85770672009536,31.5625,63.81249999999999,33.85770672009536,0.461717275546004,63.81249999999999,33.85770672009536,31.5625,63.81249999999999,33.85770672009536,0.461717275546004,33.4375,86.46875,31.5625,33.4375,86.46875,0.461717275546004,33.4375,86.46875,0.461717275546004,33.4375,86.46875,31.5625,78.46424301002185,27.78875605293911,31.5625,78.46424301002185,27.78875605293911,0.461717275546004,78.46424301002185,27.78875605293911,31.5625,78.46424301002185,27.78875605293911,0.461717275546004,35.50750605293911,102.1920069899782,31.5625,35.50750605293911,102.1920069899782,0.461717275546004,35.50750605293911,102.1920069899782,0.461717275546004,35.50750605293911,102.1920069899782,31.5625,94.1875,25.71875,31.5625,94.1875,25.71875,0.461717275546004,94.1875,25.71875,31.5625,94.1875,25.71875,0.461717275546004,41.57645672009537,116.84375,31.5625,41.57645672009537,116.84375,0.461717275546004,41.57645672009537,116.84375,0.461717275546004,41.57645672009537,116.84375,31.5625,109.9107569899781,27.7887560529391,31.5625,109.9107569899781,27.7887560529391,0.461717275546004,109.9107569899781,27.7887560529391,31.5625,109.9107569899781,27.7887560529391,0.461717275546004,51.23076304291725,129.4254869570828,31.5625,51.23076304291725,129.4254869570828,0.461717275546004,51.23076304291725,129.4254869570828,0.461717275546004,51.23076304291725,129.4254869570828,31.5625,124.5625,33.85770672009535,31.5625,124.5625,33.85770672009535,0.461717275546004,124.5625,33.85770672009535,31.5625,124.5625,33.85770672009535,0.461717275546004,63.81250000000004,139.0797932799047,0.461717275546004,63.81250000000004,139.0797932799047,31.5625,63.81250000000004,139.0797932799047,31.5625,63.81250000000004,139.0797932799047,0.461717275546004,137.1442369570828,43.51201304291723,31.5625,137.1442369570828,43.51201304291723,0.461717275546004,137.1442369570828,43.51201304291723,31.5625,137.1442369570828,43.51201304291723,0.461717275546004,78.46424301002189,145.1487439470609,0.461717275546004,78.46424301002189,145.1487439470609,31.5625,78.46424301002189,145.1487439470609,31.5625,78.46424301002189,145.1487439470609,0.461717275546004,146.7985432799046,56.09374999999998,0.461717275546004,146.7985432799046,56.09374999999998,31.5625,146.7985432799046,56.09374999999998,31.5625,146.7985432799046,56.09374999999998,0.461717275546004,94.18750000000001,147.21875,0.461717275546004,94.18750000000001,147.21875,31.5625,94.18750000000001,147.21875,31.5625,94.18750000000001,147.21875,0.461717275546004,152.8674939470609,70.74549301002185,0.461717275546004,152.8674939470609,70.74549301002185,31.5625,152.8674939470609,70.74549301002185,31.5625,152.8674939470609,70.74549301002185,0.461717275546004,109.9107569899782,145.1487439470609,0.461717275546004,109.9107569899782,145.1487439470609,31.5625,109.9107569899782,145.1487439470609,31.5625,109.9107569899782,145.1487439470609,0.461717275546004,154.9375,86.46874999999999,0.461717275546004,154.9375,86.46874999999999,31.5625,154.9375,86.46874999999999,31.5625,154.9375,86.46874999999999,0.461717275546004,124.5625,139.0797932799046,0.461717275546004,124.5625,139.0797932799046,31.5625,124.5625,139.0797932799046,31.5625,124.5625,139.0797932799046,0.461717275546004,152.8674939470609,102.1920069899781,0.461717275546004,152.8674939470609,102.1920069899781,31.5625,152.8674939470609,102.1920069899781,31.5625,152.8674939470609,102.1920069899781,0.461717275546004,137.1442369570828,129.4254869570827,0.461717275546004,137.1442369570828,129.4254869570827,31.5625,137.1442369570828,129.4254869570827,31.5625,137.1442369570828,129.4254869570827,0.461717275546004,146.7985432799047,116.84375,0.461717275546004,146.7985432799047,116.84375,31.5625,146.7985432799047,116.84375,31.5625,146.7985432799047,116.84375,0.461717275546004,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.8660254037844387,-0.5,3.802490113026879E-31,-0.7071067811865475,-0.7071067811865475,0.0,-0.7071067811865475,-0.7071067811865475,0.0,-0.8660254037844387,-0.5,3.802490113026879E-31,0.8660254037844387,0.5,-3.802490113026879E-31,0.8660254037844387,0.5,-3.802490113026879E-31,0.7071067811865475,0.7071067811865475,-0.0,0.7071067811865475,0.7071067811865475,-0.0,-0.9659258262890682,-0.2588190451025206,4.800423806386843E-32,-0.9659258262890682,-0.2588190451025206,4.800423806386843E-32,0.9659258262890682,0.2588190451025206,-4.800423806386843E-32,0.9659258262890682,0.2588190451025206,-4.800423806386843E-32,-0.5000000000000001,-0.8660254037844386,-2.459779803383524E-31,-0.5000000000000001,-0.8660254037844386,-2.459779803383524E-31,0.5000000000000001,0.8660254037844386,2.459779803383524E-31,0.5000000000000001,0.8660254037844386,2.459779803383524E-31,-1.0,2.762444067650541E-16,-4.327290392941931E-18,-1.0,2.762444067650541E-16,-4.327290392941931E-18,1.0,-2.762444067650541E-16,4.327290392941931E-18,1.0,-2.762444067650541E-16,4.327290392941931E-18,-0.258819045102521,-0.9659258262890682,-9.494395651179061E-32,-0.258819045102521,-0.9659258262890682,-9.494395651179061E-32,0.258819045102521,0.9659258262890682,9.494395651179061E-32,0.258819045102521,0.9659258262890682,9.494395651179061E-32,-0.9659258262890682,0.2588190451025214,-4.327290392941749E-18,-0.9659258262890682,0.2588190451025214,-4.327290392941749E-18,0.9659258262890682,-0.2588190451025214,4.327290392941749E-18,0.9659258262890682,-0.2588190451025214,4.327290392941749E-18,-9.802220885211596E-17,-1.0,-1.164435184861627E-31,-9.802220885211596E-17,-1.0,-1.164435184861627E-31,9.802220885211596E-17,1.0,1.164435184861627E-31,9.802220885211596E-17,1.0,1.164435184861627E-31,-0.8660254037844384,0.5000000000000004,2.770155292665407E-17,-0.8660254037844384,0.5000000000000004,2.770155292665407E-17,0.8660254037844384,-0.5000000000000004,-2.770155292665407E-17,0.8660254037844384,-0.5000000000000004,-2.770155292665407E-17,0.2588190451025207,-0.9659258262890682,1.336217397398658E-17,0.2588190451025207,-0.9659258262890682,1.336217397398658E-17,-0.2588190451025207,0.9659258262890682,-1.336217397398658E-17,-0.2588190451025207,0.9659258262890682,-1.336217397398658E-17,-0.7071067811865471,0.7071067811865479,2.770155292665486E-17,-0.7071067811865471,0.7071067811865479,2.770155292665486E-17,0.7071067811865471,-0.7071067811865479,-2.770155292665486E-17,0.7071067811865471,-0.7071067811865479,-2.770155292665486E-17,0.4999999999999997,-0.8660254037844389,1.33621739739864E-17,0.4999999999999997,-0.8660254037844389,1.33621739739864E-17,-0.4999999999999997,0.8660254037844389,-1.33621739739864E-17,-0.4999999999999997,0.8660254037844389,-1.33621739739864E-17,-0.4999999999999993,0.8660254037844392,7.873254880523148E-31,-0.4999999999999993,0.8660254037844392,7.873254880523148E-31,0.4999999999999993,-0.8660254037844392,-7.873254880523148E-31,0.4999999999999993,-0.8660254037844392,-7.873254880523148E-31,0.7071067811865472,-0.7071067811865477,-1.510340238265615E-31,0.7071067811865472,-0.7071067811865477,-1.510340238265615E-31,-0.7071067811865472,0.7071067811865477,1.510340238265615E-31,-0.7071067811865472,0.7071067811865477,1.510340238265615E-31,-0.2588190451025206,0.9659258262890684,0.0,-0.2588190451025206,0.9659258262890684,0.0,0.2588190451025206,-0.9659258262890684,-0.0,0.2588190451025206,-0.9659258262890684,-0.0,0.8660254037844387,-0.5,-1.336217397398757E-17,0.8660254037844387,-0.5,-1.336217397398757E-17,-0.8660254037844387,0.5,1.336217397398757E-17,-0.8660254037844387,0.5,1.336217397398757E-17,-1.87133307808585E-16,1.0,6.476723092609492E-32,-1.87133307808585E-16,1.0,6.476723092609492E-32,1.87133307808585E-16,-1.0,-6.476723092609492E-32,1.87133307808585E-16,-1.0,-6.476723092609492E-32,0.9659258262890682,-0.2588190451025211,-1.336217397398778E-17,0.9659258262890682,-0.2588190451025211,-1.336217397398778E-17,-0.9659258262890682,0.2588190451025211,1.336217397398778E-17,-0.9659258262890682,0.2588190451025211,1.336217397398778E-17,0.2588190451025211,0.9659258262890682,-8.520927189784087E-31,0.2588190451025211,0.9659258262890682,-8.520927189784087E-31,-0.2588190451025211,-0.9659258262890682,8.520927189784087E-31,-0.2588190451025211,-0.9659258262890682,8.520927189784087E-31,1.0,6.237776926952835E-17,-6.476723092609503E-32,1.0,6.237776926952835E-17,-6.476723092609503E-32,-1.0,-6.237776926952835E-17,6.476723092609503E-32,-1.0,-6.237776926952835E-17,6.476723092609503E-32,0.5000000000000003,0.8660254037844384,-1.10004934265057E-30,0.5000000000000003,0.8660254037844384,-1.10004934265057E-30,-0.5000000000000003,-0.8660254037844384,1.10004934265057E-30,-0.5000000000000003,-0.8660254037844384,1.10004934265057E-30,0.9659258262890684,0.2588190451025203,0.0,0.9659258262890684,0.2588190451025203,0.0,-0.9659258262890684,-0.2588190451025203,-0.0,-0.9659258262890684,-0.2588190451025203,-0.0,0.7071067811865478,0.7071067811865472,1.188786549070567E-31,0.7071067811865478,0.7071067811865472,1.188786549070567E-31,-0.7071067811865478,-0.7071067811865472,-1.188786549070567E-31,-0.7071067811865478,-0.7071067811865472,-1.188786549070567E-31,0.8660254037844393,0.4999999999999992,3.020680476531234E-31,0.8660254037844393,0.4999999999999992,3.020680476531234E-31,-0.8660254037844393,-0.4999999999999992,-3.020680476531234E-31,-0.8660254037844393,-0.4999999999999992,-3.020680476531234E-31,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,8,3,0,3,8,9,12,1,13,1,12,2,16,9,8,9,16,17,20,13,21,13,20,12,24,17,16,17,24,25,28,21,29,21,28,20,32,25,24,25,32,33,36,29,37,29,36,28,40,33,32,33,40,41,44,37,45,37,44,36,40,48,41,48,40,49,52,45,53,45,52,44,49,56,48,56,49,57,60,52,53,52,60,61,57,64,56,64,57,65,68,61,60,61,68,69,65,72,64,72,65,73,76,69,68,69,76,77,73,80,72,80,73,81,84,77,76,77,84,85,81,88,80,88,81,89,92,85,84,85,92,93,88,93,92,93,88,89,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 144, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID45.bind();
texcoordArray = new float[] {
4.440892E-16f,-0.7638889f,4.440892E-16f,2.6917536f,1.3333334f,-0.7638889f,1.3333334f,2.6917536f,30.666666f,-0.7638889f,30.666666f,2.6917536f,32.0f,-0.7638889f,32.0f,2.6917536f,1.3333334f,2.6917536f,2.6666667f,2.6917536f,1.3333334f,-0.7638889f,2.6666667f,-0.7638889f,29.333334f,-0.7638889f,29.333334f,2.6917536f,30.666666f,-0.7638889f,30.666666f,2.6917536f,2.6666667f,2.6917536f,4.0f,2.6917536f,2.6666667f,-0.7638889f,4.0f,-0.7638889f,28.0f,-0.7638889f,28.0f,2.6917536f,29.333334f,-0.7638889f,29.333334f,2.6917536f,4.0f,2.6917536f,5.3333335f,2.6917536f,4.0f,-0.7638889f,5.3333335f,-0.7638889f,26.666666f,-0.7638889f,26.666666f,2.6917536f,28.0f,-0.7638889f,28.0f,2.6917536f,5.3333335f,2.6917536f,6.6666665f,2.6917536f,5.3333335f,-0.7638889f,6.6666665f,-0.7638889f,25.333334f,-0.7638889f,25.333334f,2.6917536f,26.666666f,-0.7638889f,26.666666f,2.6917536f,6.6666665f,2.6917536f,8.0f,2.6917536f,6.6666665f,-0.7638889f,8.0f,-0.7638889f,24.0f,2.6917536f,25.333334f,2.6917536f,24.0f,-0.7638889f,25.333334f,-0.7638889f,8.0f,2.6917536f,9.333333f,2.6917536f,8.0f,-0.7638889f,9.333333f,-0.7638889f,22.666666f,2.6917536f,24.0f,2.6917536f,22.666666f,-0.7638889f,24.0f,-0.7638889f,10.666667f,2.6917536f,10.666667f,-0.7638889f,21.333334f,2.6917536f,22.666666f,2.6917536f,21.333334f,-0.7638889f,22.666666f,-0.7638889f,12.0f,2.6917536f,12.0f,-0.7638889f,10.666667f,-0.7638889f,20.0f,2.6917536f,20.0f,-0.7638889f,13.333333f,2.6917536f,13.333333f,-0.7638889f,12.0f,2.6917536f,12.0f,-0.7638889f,18.666666f,2.6917536f,20.0f,2.6917536f,18.666666f,-0.7638889f,20.0f,-0.7638889f,14.666667f,2.6917536f,14.666667f,-0.7638889f,17.333334f,2.6917536f,18.666666f,2.6917536f,17.333334f,-0.7638889f,18.666666f,-0.7638889f,16.0f,2.6917536f,16.0f,-0.7638889f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
4,0,5,1,6,2,7,3,6,2,5,1,10,4,11,5,4,6,5,7,4,6,11,5,7,8,14,9,6,10,15,11,6,10,14,9,18,12,19,13,10,14,11,15,10,14,19,13,14,16,22,17,15,18,23,19,15,18,22,17,26,20,27,21,18,22,19,23,18,22,27,21,22,24,30,25,23,26,31,27,23,26,30,25,34,28,35,29,26,30,27,31,26,30,35,29,30,32,38,33,31,34,39,35,31,34,38,33,42,36,43,37,34,38,35,39,34,38,43,37,38,40,46,41,39,42,47,43,39,42,46,41,50,44,43,45,51,46,42,47,51,46,43,45,46,48,54,49,47,50,55,51,47,50,54,49,58,52,50,53,59,54,51,55,59,54,50,53,62,56,63,57,54,49,55,51,54,49,63,57,66,58,58,59,67,60,59,61,67,60,58,59,70,62,71,63,62,56,63,64,62,56,71,63,74,65,66,58,75,66,67,60,75,66,66,58,78,67,79,68,70,69,71,70,70,69,79,68,82,71,74,72,83,73,75,74,83,73,74,72,86,75,87,76,78,67,79,68,78,67,87,76,90,77,82,78,91,79,83,80,91,79,82,78,94,81,95,82,86,75,87,76,86,75,95,82,90,77,91,79,94,81,95,82,94,81,91,79,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID89(GL2 gl){
double[] positionsArray = {
35.63068522644993,70.77849877008849,11.625,35.63068522644996,102.1590012299116,11.625,33.56502446425839,86.46874999999999,11.625,41.68689614574707,56.15751223212924,11.625,41.68689614574713,116.7799877678708,11.625,51.32093645636147,43.60218645636156,11.625,51.32093645636153,129.3353135436385,11.625,63.87626223212913,33.96814614574714,11.625,63.87626223212921,138.9693538542529,11.625,78.4972487700884,27.91193522644996,11.625,78.49724877008849,145.0255647735501,11.625,94.18750000000001,25.84627446425838,11.625,94.18750000000003,147.0912255357416,11.625,109.8777512299115,27.91193522644991,11.625,109.8777512299117,145.02556477355,11.625,124.4987377678708,33.96814614574707,11.625,124.4987377678708,138.9693538542529,11.625,137.0540635436385,43.60218645636149,11.625,137.0540635436385,129.3353135436385,11.625,146.6881038542529,56.15751223212919,11.625,146.688103854253,116.7799877678707,11.625,152.74431477355,70.77849877008833,11.625,152.7443147735501,102.1590012299115,11.625,154.8099755357416,86.46874999999996,11.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glEnable(GL2.GL_TEXTURE_2D);
gl.glEnable(GL2.GL_BLEND);
gl.glBlendFunc(GL2.GL_SRC_ALPHA, GL2.GL_ONE_MINUS_SRC_ALPHA);
ID45.bind();
texcoordArray = new float[] {
2.9692237f,7.864278f,2.9692237f,11.351f,2.7970853f,9.607639f,3.473908f,6.2397237f,3.473908f,12.975554f,4.276745f,4.8446875f,4.276745f,14.37059f,5.323022f,3.7742383f,5.323022f,15.441039f,6.5414376f,3.1013262f,6.5414376f,16.11395f,7.8489585f,2.8718083f,7.8489585f,16.34347f,9.156479f,3.1013262f,9.156479f,16.11395f,10.374895f,3.7742383f,10.374895f,15.441039f,11.421172f,4.8446875f,11.421172f,14.37059f,12.224009f,6.2397237f,12.224009f,12.975554f,12.728693f,7.864278f,12.728693f,11.351f,12.900831f,9.607639f,};
fbt = GLBuffers.newDirectFloatBuffer(texcoordArray);
gl.glTexCoordPointer(2, GL2.GL_FLOAT, 0, fbt);
gl.glEnableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
int[] indices = {
0,0,1,1,2,2,1,1,0,0,3,3,1,1,3,3,4,4,4,4,3,3,5,5,4,4,5,5,6,6,6,6,5,5,7,7,6,6,7,7,8,8,8,8,7,7,9,9,8,8,9,9,10,10,10,10,9,9,11,11,10,10,11,11,12,12,12,12,11,11,13,13,12,12,13,13,14,14,14,14,13,13,15,15,14,14,15,15,16,16,16,16,15,15,17,17,16,16,17,17,18,18,18,18,17,17,19,19,18,18,19,19,20,20,20,20,19,19,21,21,20,20,21,21,22,22,22,22,21,21,23,23,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
gl.glBegin(GL2.GL_TRIANGLES);
	for (int i=0; i<indices.length-1; i+=2) {
		int vertexIndex = indices[i];
		int textureIndex = indices[i+1];
		try {
		gl.glTexCoord2f(texcoordArray[textureIndex*2], -(texcoordArray[textureIndex*2+1]));
		} catch (ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		gl.glArrayElement(vertexIndex);
	}
gl.glEnd();
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID97(GL2 gl){
double[] positionsArray = {
35.63068522644996,102.1590012299116,0.3125,35.63068522644993,70.77849877008849,0.3125,33.56502446425839,86.46874999999999,0.3125,41.68689614574707,56.15751223212924,0.3125,41.68689614574713,116.7799877678708,0.3125,51.32093645636147,43.60218645636156,0.3125,51.32093645636153,129.3353135436385,0.3125,63.87626223212913,33.96814614574714,0.3125,63.87626223212921,138.9693538542529,0.3125,78.4972487700884,27.91193522644996,0.3125,78.49724877008849,145.0255647735501,0.3125,94.18750000000001,25.84627446425838,0.3125,94.18750000000003,147.0912255357416,0.3125,109.8777512299115,27.91193522644991,0.3125,109.8777512299117,145.02556477355,0.3125,124.4987377678708,33.96814614574707,0.3125,124.4987377678708,138.9693538542529,0.3125,137.0540635436385,43.60218645636149,0.3125,137.0540635436385,129.3353135436385,0.3125,146.688103854253,116.7799877678707,0.3125,146.6881038542529,56.15751223212919,0.3125,152.74431477355,70.77849877008833,0.3125,152.7443147735501,102.1590012299115,0.3125,154.8099755357416,86.46874999999996,0.3125,146.688103854253,116.7799877678707,0.3125,152.7443147735501,102.1590012299115,11.625,152.7443147735501,102.1590012299115,0.3125,146.688103854253,116.7799877678707,11.625,154.8099755357416,86.46874999999996,11.625,154.8099755357416,86.46874999999996,0.3125,152.74431477355,70.77849877008833,11.625,152.74431477355,70.77849877008833,0.3125,146.6881038542529,56.15751223212919,11.625,146.6881038542529,56.15751223212919,0.3125,137.0540635436385,43.60218645636149,11.625,137.0540635436385,43.60218645636149,0.3125,124.4987377678708,33.96814614574707,0.3125,124.4987377678708,33.96814614574707,11.625,109.8777512299115,27.91193522644991,0.3125,109.8777512299115,27.91193522644991,11.625,94.18750000000001,25.84627446425838,0.3125,94.18750000000001,25.84627446425838,11.625,78.4972487700884,27.91193522644996,0.3125,78.4972487700884,27.91193522644996,11.625,63.87626223212913,33.96814614574714,0.3125,63.87626223212913,33.96814614574714,11.625,51.32093645636147,43.60218645636156,0.3125,51.32093645636147,43.60218645636156,11.625,41.68689614574707,56.15751223212924,11.625,41.68689614574707,56.15751223212924,0.3125,35.63068522644993,70.77849877008849,11.625,35.63068522644993,70.77849877008849,0.3125,33.56502446425839,86.46874999999999,11.625,33.56502446425839,86.46874999999999,0.3125,35.63068522644996,102.1590012299116,11.625,35.63068522644996,102.1590012299116,0.3125,41.68689614574713,116.7799877678708,11.625,41.68689614574713,116.7799877678708,0.3125,51.32093645636153,129.3353135436385,11.625,51.32093645636153,129.3353135436385,0.3125,63.87626223212921,138.9693538542529,0.3125,63.87626223212921,138.9693538542529,11.625,78.49724877008849,145.0255647735501,0.3125,78.49724877008849,145.0255647735501,11.625,94.18750000000003,147.0912255357416,0.3125,94.18750000000003,147.0912255357416,11.625,109.8777512299117,145.02556477355,0.3125,109.8777512299117,145.02556477355,11.625,124.4987377678708,138.9693538542529,0.3125,124.4987377678708,138.9693538542529,11.625,137.0540635436385,129.3353135436385,0.3125,137.0540635436385,129.3353135436385,11.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.8660254037844395,0.4999999999999988,0.0,0.9659258262890689,0.2588190451025189,0.0,0.9659258262890689,0.2588190451025189,0.0,0.8660254037844395,0.4999999999999988,0.0,1.0,-6.059554729039896E-16,0.0,1.0,-6.059554729039896E-16,0.0,0.9659258262890681,-0.2588190451025216,0.0,0.9659258262890681,-0.2588190451025216,0.0,0.8660254037844387,-0.5,0.0,0.8660254037844387,-0.5,0.0,0.7071067811865474,-0.7071067811865479,0.0,0.7071067811865474,-0.7071067811865479,0.0,0.4999999999999988,-0.8660254037844394,0.0,0.4999999999999988,-0.8660254037844394,0.0,0.2588190451025196,-0.9659258262890686,0.0,0.2588190451025196,-0.9659258262890686,0.0,-7.39622121338693E-16,-1.0,0.0,-7.39622121338693E-16,-1.0,0.0,-0.258819045102521,-0.9659258262890682,0.0,-0.258819045102521,-0.9659258262890682,0.0,-0.5000000000000004,-0.8660254037844384,0.0,-0.5000000000000004,-0.8660254037844384,0.0,-0.7071067811865481,-0.707106781186547,0.0,-0.7071067811865481,-0.707106781186547,0.0,-0.8660254037844393,-0.4999999999999989,0.0,-0.8660254037844393,-0.4999999999999989,0.0,-0.9659258262890686,-0.2588190451025196,0.0,-0.9659258262890686,-0.2588190451025196,0.0,-1.0,5.346665937388142E-16,0.0,-1.0,5.346665937388142E-16,0.0,-0.9659258262890681,0.2588190451025215,0.0,-0.9659258262890681,0.2588190451025215,0.0,-0.8660254037844384,0.5000000000000003,0.0,-0.8660254037844384,0.5000000000000003,0.0,-0.7071067811865475,0.7071067811865475,0.0,-0.7071067811865475,0.7071067811865475,0.0,-0.4999999999999997,0.8660254037844389,0.0,-0.4999999999999997,0.8660254037844389,0.0,-0.2588190451025204,0.9659258262890683,0.0,-0.2588190451025204,0.9659258262890683,0.0,4.722888244692859E-16,1.0,0.0,4.722888244692859E-16,1.0,0.0,0.2588190451025216,0.965925826289068,0.0,0.2588190451025216,0.965925826289068,0.0,0.5000000000000006,0.8660254037844384,0.0,0.5000000000000006,0.8660254037844384,0.0,0.7071067811865475,0.7071067811865477,0.0,0.7071067811865475,0.7071067811865477,0.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,1,0,3,3,0,4,3,4,5,5,4,6,5,6,7,7,6,8,7,8,9,9,8,10,9,10,11,11,10,12,11,12,13,13,12,14,13,14,15,15,14,16,15,16,17,17,16,18,17,18,19,17,19,20,20,19,21,21,19,22,21,22,23,24,25,26,25,24,27,26,28,29,28,26,25,29,30,31,30,29,28,31,32,33,32,31,30,33,34,35,34,33,32,34,36,35,36,34,37,37,38,36,38,37,39,39,40,38,40,39,41,41,42,40,42,41,43,43,44,42,44,43,45,45,46,44,46,45,47,48,46,47,46,48,49,50,49,48,49,50,51,52,51,50,51,52,53,54,53,52,53,54,55,56,55,54,55,56,57,58,57,56,57,58,59,58,60,59,60,58,61,61,62,60,62,61,63,63,64,62,64,63,65,65,66,64,66,65,67,67,68,66,68,67,69,69,70,68,70,69,71,70,27,24,27,70,71,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 210, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID103(GL2 gl){
double[] positionsArray = {
152.6153478320935,32.24559232792767,54.625,136.5904813043777,18.97096183830323,54.625,140.7241111188039,21.16653731293083,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID109(GL2 gl){
double[] positionsArray = {
164.6584530866361,49.21544140489891,54.625,152.6153478320935,32.24559232792767,54.625,156.0398708783726,35.43621750381438,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID115(GL2 gl){
double[] positionsArray = {
171.8990793470807,68.724041898623,54.625,164.6584530866361,49.21544140489891,54.625,167.1404937784561,53.18368044906556,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID121(GL2 gl){
double[] positionsArray = {
173.8437898994788,89.44191492493933,54.625,171.8990793470807,68.724041898623,54.625,173.2694907130603,73.19946587803467,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID127(GL2 gl){
double[] positionsArray = {
174.0091806697383,94.11953109138692,54.625,170.3600559334705,109.9571716750083,54.625,173.8437898994788,89.44191492493933,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID133(GL2 gl){
double[] positionsArray = {
170.3600559334705,109.9571716750083,54.625,169.3091550003379,114.5182082168747,54.625,161.6852881616968,128.8717313043777,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID139(GL2 gl){
double[] positionsArray = {
161.6852881616968,128.8717313043777,54.625,159.4897126870692,133.0053611188039,54.625,148.4106576720723,144.8965978320935,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID145(GL2 gl){
double[] positionsArray = {
148.4106576720723,144.8965978320935,54.625,145.2200324961856,148.3211208783726,54.625,131.4408085951011,156.9397030866361,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID151(GL2 gl){
double[] positionsArray = {
131.4408085951011,156.9397030866361,54.625,127.4725695509345,159.4217437784561,54.625,111.932208101377,164.1803293470807,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID157(GL2 gl){
double[] positionsArray = {
111.932208101377,164.1803293470807,54.625,107.4567841219653,165.5507407130603,54.625,91.2143350750607,166.1250398994788,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID163(GL2 gl){
double[] positionsArray = {
91.2143350750607,166.1250398994788,54.625,86.53671890861308,166.2904306697383,54.625,70.69907832499166,162.6413059334705,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID169(GL2 gl){
double[] positionsArray = {
70.69907832499166,162.6413059334705,54.625,66.1380417831253,161.590405000338,54.625,51.78451869562235,153.9665381616968,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID175(GL2 gl){
double[] positionsArray = {
51.78451869562235,153.9665381616968,54.625,47.65088888119615,151.7709626870692,54.625,35.75965216790651,140.6919076720724,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID181(GL2 gl){
double[] positionsArray = {
35.75965216790651,140.6919076720724,54.625,32.33512912162738,137.5012824961856,54.625,23.71654691336394,123.7220585951011,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID187(GL2 gl){
double[] positionsArray = {
23.71654691336394,123.7220585951011,54.625,21.23450622154388,119.7538195509345,54.625,16.47592065291931,104.213458101377,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID193(GL2 gl){
double[] positionsArray = {
16.47592065291931,104.213458101377,54.625,15.10550928693968,99.73803412196534,54.625,14.53121010052124,83.49558507506072,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID199(GL2 gl){
double[] positionsArray = {
76.44279189862297,8.757170652919314,54.625,56.93419140489888,15.99779691336397,54.625,60.90243044906556,13.51575622154388,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID205(GL2 gl){
double[] positionsArray = {
39.96434232792763,28.04090216790651,54.625,26.68971183830323,44.06576869562235,54.625,28.88528731293081,39.93213888119614,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID211(GL2 gl){
double[] positionsArray = {
18.0149440665295,62.98032832499169,54.625,14.53121010052124,83.49558507506072,54.625,14.36581933026167,78.81796890861304,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID217(GL2 gl){
double[] positionsArray = {
26.68971183830323,44.06576869562235,54.625,18.0149440665295,62.98032832499169,54.625,19.06584499966206,58.41929178312527,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID223(GL2 gl){
double[] positionsArray = {
97.16066492493927,6.812460100521236,54.625,76.44279189862297,8.757170652919314,54.625,80.91821587803467,7.386759286939679,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID229(GL2 gl){
double[] positionsArray = {
56.93419140489888,15.99779691336397,54.625,39.96434232792763,28.04090216790651,54.625,43.15496750381442,24.61637912162734,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID235(GL2 gl){
double[] positionsArray = {
136.5904813043777,18.97096183830323,54.625,117.6759216750083,10.29619406652948,54.625,122.2369582168747,11.34709499966206,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
private void ID241(GL2 gl){
double[] positionsArray = {
117.6759216750083,10.29619406652948,54.625,97.16066492493927,6.812460100521236,54.625,101.838281091387,6.647069330261672,54.625,};
DoubleBuffer fbv = GLBuffers.newDirectDoubleBuffer(positionsArray, 0);
gl.glVertexPointer(3, GL2.GL_DOUBLE, 0, fbv);
gl.glEnableClientState(GL2.GL_VERTEX_ARRAY);
DoubleBuffer fbn = null;
double[] normalsArray = {
-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,};
fbn = GLBuffers.newDirectDoubleBuffer(normalsArray, 0);
gl.glNormalPointer(GL2.GL_DOUBLE, 0, fbn);
gl.glEnableClientState(GL2.GL_NORMAL_ARRAY);
FloatBuffer fbt = null;
float[] texcoordArray = null;
{
gl.glColor4d(1.0, 1.0, 1.0, 1.0);
int[] indices = {
0,1,2,};
IntBuffer fbi = GLBuffers.newDirectIntBuffer(indices, 0);
gl.glDrawElements(GL2.GL_TRIANGLES, 3, GL2.GL_UNSIGNED_INT, fbi);
gl.glDisable(GL2.GL_TEXTURE_2D);
gl.glDisable(GL2.GL_BLEND);
}
gl.glDisableClientState(GL2.GL_VERTEX_ARRAY);
gl.glDisableClientState(GL2.GL_NORMAL_ARRAY);
gl.glDisableClientState(GL2.GL_TEXTURE_COORD_ARRAY);
}
}
